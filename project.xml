<?xml version="1.0" encoding="UTF-8"?>
<BrowserAutomationStudioProject>
     <Script><![CDATA[RS("thread", false, false)!
RESOURCE_1 = _result().get()

section(RESOURCE_1 /*{{thread}}*/,1000000 /*1000000*/,1000000 /*1000000*/,0,function(){
   section_start("\u007b\u0022n\u0022:\u0022Initialize\u0022\u007d", 0)!

   section_end()!

   section_start("\u007b\u0022n\u0022:\u0022get_balance_Nout\u0022,\u0022fd\u0022:\u0022\u007b\u005c\u0022fd\u005c\u0022:\u005c\u0022\u005c\u0022,\u005c\u0022hr\u005c\u0022:false,\u005c\u0022rd\u005c\u0022:\u005c\u0022\u005c\u0022,\u005c\u0022rv\u005c\u0022:\u005c\u0022FUNCTION_RESULT\u005c\u0022,\u005c\u0022p\u005c\u0022:[\u007b\u005c\u0022name\u005c\u0022:\u005c\u0022Type\u005c\u0022,\u005c\u0022type\u005c\u0022:\u005c\u0022String\u005c\u0022,\u005c\u0022description\u005c\u0022:\u005c\u0022\u005c\u0022,\u005c\u0022defaults\u005c\u0022:\u005c\u0022\u005c\u0022\u007d]\u007d\u0022\u007d", 991574793)!
   function get_balance_Nout()
   {
   section_insert()
      section_start("\u007b\u0022n\u0022:\u0022Получаем параметр функции\u0022,\u0022c\u0022:\u00222\u0022\u007d", 612887588)!
      /*Dat:eyJzIjoiZ2V0ZnVuY3Rpb25wYXJhbWV0ZXIiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiUGFyYW1ldGVyTmFtZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiVHlwZSIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6IlNhdmUiLCJ0eXBlIjoidmFyIiwiZGF0YSI6IlRZUEUifV19*/
      VAR_TYPE = _function_argument("Type")
      section_end()!

      section_start("", 879716854)!
      /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6InN3aXRjaChbW1RBU0tfTkVUV09SS19JTl1dLnRvTG93ZXJDYXNlKCkudHJpbSgpKXtcclxuY2FzZSAnZXRoJzpcclxuICBbW1RBU0tfTkVUV09SS19JTl9TXV09J2V0aGVyZXVtJztcclxuICBicmVha1xyXG5jYXNlICdic2MnOlxyXG4gIFtbVEFTS19ORVRXT1JLX0lOX1NdXT0nYm5iJztcclxuICBicmVha1xyXG5jYXNlICdhdmF4JzpcclxuICBbW1RBU0tfTkVUV09SS19JTl9TXV09J2F2YWxhbmNoZSc7XHJcbiAgYnJlYWtcclxuY2FzZSAnbWF0aWMnOlxyXG4gIFtbVEFTS19ORVRXT1JLX0lOX1NdXT0ncG9seWdvbic7XHJcbiAgYnJlYWtcclxuY2FzZSAnYXJiaSc6XHJcbiAgW1tUQVNLX05FVFdPUktfSU5fU11dPSdhcmJpdHJ1bSc7XHJcbiAgYnJlYWtcclxuY2FzZSAnb3AnOlxyXG4gIFtbVEFTS19ORVRXT1JLX0lOX1NdXT0nb3B0aW1pc20nO1xyXG4gIGJyZWFrXHJcbmNhc2UgJ2Z0bSc6XHJcbiAgW1tUQVNLX05FVFdPUktfSU5fU11dPSdmYW50b20nO1xyXG4gIGJyZWFrIFxyXG5jYXNlICdhcHQnOlxyXG4gIFtbVEFTS19ORVRXT1JLX0lOX1NdXT0nYXB0b3MnO1xyXG4gIGJyZWFrXHJcbn1cclxuXHJcbnN3aXRjaChbW1RBU0tfTkVUV09SS19PVVRdXS50b0xvd2VyQ2FzZSgpLnRyaW0oKSl7XHJcbmNhc2UgJ2V0aCc6XHJcbiAgW1tUQVNLX05FVFdPUktfT1VUX1NdXT0nZXRoZXJldW0nO1xyXG4gIGJyZWFrXHJcbmNhc2UgJ2JzYyc6XHJcbiAgW1tUQVNLX05FVFdPUktfT1VUX1NdXT0nYm5iJztcclxuICBicmVha1xyXG5jYXNlICdhdmF4JzpcclxuICBbW1RBU0tfTkVUV09SS19PVVRfU11dPSdhdmFsYW5jaGUnO1xyXG4gIGJyZWFrXHJcbmNhc2UgJ21hdGljJzpcclxuICBbW1RBU0tfTkVUV09SS19PVVRfU11dPSdwb2x5Z29uJztcclxuICBicmVha1xyXG5jYXNlICdhcmJpJzpcclxuICBbW1RBU0tfTkVUV09SS19PVVRfU11dPSdhcmJpdHJ1bSc7XHJcbiAgYnJlYWtcclxuY2FzZSAnb3AnOlxyXG4gIFtbVEFTS19ORVRXT1JLX09VVF9TXV09J29wdGltaXNtJztcclxuICBicmVha1xyXG5jYXNlICdmdG0nOlxyXG4gIFtbVEFTS19ORVRXT1JLX09VVF9TXV09J2ZhbnRvbSc7XHJcbiAgYnJlYWsgXHJcbmNhc2UgJ2FwdCc6XHJcbiAgW1tUQVNLX05FVFdPUktfT1VUX1NdXT0nYXB0b3MnO1xyXG4gIGJyZWFrXHJcbn1cclxuXHJcbiIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
      switch(VAR_TASK_NETWORK_IN.toLowerCase().trim()){
      case 'eth':
      VAR_TASK_NETWORK_IN_S='ethereum';
      break
      case 'bsc':
      VAR_TASK_NETWORK_IN_S='bnb';
      break
      case 'avax':
      VAR_TASK_NETWORK_IN_S='avalanche';
      break
      case 'matic':
      VAR_TASK_NETWORK_IN_S='polygon';
      break
      case 'arbi':
      VAR_TASK_NETWORK_IN_S='arbitrum';
      break
      case 'op':
      VAR_TASK_NETWORK_IN_S='optimism';
      break
      case 'ftm':
      VAR_TASK_NETWORK_IN_S='fantom';
      break
      case 'apt':
      VAR_TASK_NETWORK_IN_S='aptos';
      break
      }
      switch(VAR_TASK_NETWORK_OUT.toLowerCase().trim()){
      case 'eth':
      VAR_TASK_NETWORK_OUT_S='ethereum';
      break
      case 'bsc':
      VAR_TASK_NETWORK_OUT_S='bnb';
      break
      case 'avax':
      VAR_TASK_NETWORK_OUT_S='avalanche';
      break
      case 'matic':
      VAR_TASK_NETWORK_OUT_S='polygon';
      break
      case 'arbi':
      VAR_TASK_NETWORK_OUT_S='arbitrum';
      break
      case 'op':
      VAR_TASK_NETWORK_OUT_S='optimism';
      break
      case 'ftm':
      VAR_TASK_NETWORK_OUT_S='fantom';
      break
      case 'apt':
      VAR_TASK_NETWORK_OUT_S='aptos';
      break
      }
      section_end()!

      section_start("", 325699628)!
      /*Dat:eyJzIjoiRW1iZWRkZWRMYW5ndWFnZXNOb2RlSnMiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMSIsInV0aSI6IjEwMDAwMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiTm9kZVZlcnNpb25MaXN0IiwidHlwZSI6InNlbGVjdCIsImRhdGEiOiIxOC4xMC4wIn0seyJpZCI6Ik5hbWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Inh5NWxsZTFtNXNyIiwiY2xhc3MiOiJzdHJpbmcifV19*/
      /*VAR_ETH_RPC VAR_BNB_RPC VAR_AVAX_RPC VAR_MATIC_RPC VAR_ARBI_RPC VAR_OP_RPC VAR_FANTOM_RPC VAR_TYPE VAR_TASK_NETWORK_OUT VAR_BALANCE_BEFORE VAR_TASK_COIN_OUT VAR_TASK_NETWORK_OUT_S VAR_PRIVATE_KEY_APT VAR_BALANCE_BEFORE VAR_TASK_COIN_OUT VAR_TASK_NETWORK_OUT_S VAR_PRIVATE_KEY VAR_TASK_NETWORK_OUT VAR_BALANCE_AFTER VAR_TASK_COIN_OUT VAR_TASK_NETWORK_OUT_S VAR_PRIVATE_KEY_APT VAR_BALANCE_AFTER VAR_TASK_COIN_OUT VAR_TASK_NETWORK_OUT_S VAR_PRIVATE_KEY*/
      _embedded("xy5lle1m5sr", "Node", "18.10.0", "ETH_RPC,BNB_RPC,AVAX_RPC,MATIC_RPC,ARBI_RPC,OP_RPC,FANTOM_RPC,TYPE,TASK_NETWORK_OUT,BALANCE_BEFORE,TASK_COIN_OUT,TASK_NETWORK_OUT_S,PRIVATE_KEY_APT,BALANCE_BEFORE,TASK_COIN_OUT,TASK_NETWORK_OUT_S,PRIVATE_KEY,TASK_NETWORK_OUT,BALANCE_AFTER,TASK_COIN_OUT,TASK_NETWORK_OUT_S,PRIVATE_KEY_APT,BALANCE_AFTER,TASK_COIN_OUT,TASK_NETWORK_OUT_S,PRIVATE_KEY", 100000000 )!
      section_end()!

   }
   section_end()!

   section_start("\u007b\u0022n\u0022:\u0022tasks_list\u0022,\u0022fd\u0022:\u0022\u007b\u005c\u0022fd\u005c\u0022:\u005c\u0022\u005c\u0022,\u005c\u0022hr\u005c\u0022:false,\u005c\u0022rd\u005c\u0022:\u005c\u0022\u005c\u0022,\u005c\u0022rv\u005c\u0022:\u005c\u0022FUNCTION_RESULT\u005c\u0022,\u005c\u0022p\u005c\u0022:[]\u007d\u0022\u007d", 508683845)!
   function tasks_list()
   {
   section_insert()
      section_start("", 196910409)!
      /*Dat:eyJzIjoiZmlsZXN5c3RlbV9maWxlaW5mbyIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJWYWx1ZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiW1tQUk9GSUxFX0ZPTERFUl1dL3Rhc2tzLmNzdiIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6IlNhdmVFeGlzdHMiLCJ0eXBlIjoidmFyIiwiZGF0YSI6IkZJTEVJTkZPX0VYSVNUUyJ9LHsiaWQiOiJTYXZlU2l6ZSIsInR5cGUiOiJ2YXIiLCJkYXRhIjoiRklMRUlORk9fU0laRSJ9LHsiaWQiOiJTYXZlRGlyZWN0b3J5IiwidHlwZSI6InZhciIsImRhdGEiOiJGSUxFSU5GT19CQVNFX0RJUkVDVE9SWSJ9LHsiaWQiOiJTYXZlSXNEaXJlY3RvcnkiLCJ0eXBlIjoidmFyIiwiZGF0YSI6IkZJTEVJTkZPX0lTX0RJUkVDVE9SWSJ9LHsiaWQiOiJTYXZlTGFzdE1vZGlmaWVkIiwidHlwZSI6InZhciIsImRhdGEiOiJGSUxFSU5GT19MQVNUX01PRElGSUVEIn1dfQ==*/
      var json = JSON.parse(native("filesystem", "fileinfo", VAR_PROFILE_FOLDER + "/tasks.csv"))
      VAR_FILEINFO_EXISTS = json["exists"]
      VAR_FILEINFO_SIZE = json["size"]
      VAR_FILEINFO_BASE_DIRECTORY = json["directory"]
      VAR_FILEINFO_IS_DIRECTORY = json["is_directory"]
      VAR_FILEINFO_LAST_MODIFIED = new Date(json["last_modified"] * 1000)
      section_end()!

      section_start("", 581820219)!
      /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIhW1tGSUxFSU5GT19FWElTVFNdXSB8fCB7e9Ci0LjQvyDQt9Cw0L/Rg9GB0LrQsH19ID09IFwi0J3QsNGH0LDRgtGMINC30LDQvdC+0LLQvlwiIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
      RS("Тип запуска", false, false)!
      RESOURCE_875255 = _result().get()
      _set_if_expression("IVtbRklMRUlORk9fRVhJU1RTXV0gfHwge3vQotC40L8g0LfQsNC/0YPRgdC60LB9fSA9PSAi0J3QsNGH0LDRgtGMINC30LDQvdC+0LLQviI=");
      _if(!VAR_FILEINFO_EXISTS || RESOURCE_875255 == "Начать заново",function(){
      section_insert()
         section_start("", 103477051)!
         /*Dat:eyJzIjoiRXhjZWxfUmVhZFJvd3MiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiRmlsZVBhdGgiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Int7dGFza3NfZmlsZX19IiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiU2hlZXRJbmRleE9yTmFtZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiMCIsImNsYXNzIjoiaW50In0seyJpZCI6IkZyb21Sb3ciLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IiIsImNsYXNzIjoiaW50In0seyJpZCI6IlRvUm93IiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIiLCJjbGFzcyI6ImludCJ9LHsiaWQiOiJTYXZlIiwidHlwZSI6InZhciIsImRhdGEiOiJUQVNLU19GSUxFX0NPTlRFTlQifSx7ImlkIjoiRGF0YUZvcm1hdCIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiMkQgbGlzdCIsImNsYXNzIjoic3RyaW5nIn1dfQ==*/
         _call_function(Excel_ReadRows,{"FilePath":(RInfo("tasks_file","Location")), "SheetIndexOrName":(0), "FromRow":(""), "ToRow":(""), "DataFormat":("2D list"), "Timeout":(60000)})!
         VAR_TASKS_FILE_CONTENT = _result_function()
         section_end()!

         section_start("", 37189245)!
         /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbVEFTS19MSVNUXV0gPSBbXVxyXG5hcnIgPSBbW1RBU0tTX0ZJTEVfQ09OVEVOVF1dXHJcbi8v0YTQvtGA0LzQsNGCINC/0L7QtCBjc3Yg0YEg0LfQsNC80LXQvdC+0Lkg0YLQvtGH0LXQuiDQvdCwINC30LDQv9GP0YLRi9C1XHJcbmZvciAoaSA9IDE7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHtcclxuICAgIGVsID0gYXJyW2ldXHJcbiAgICBhcnJfMiA9IFtdXHJcbiAgICBmb3IgKGsgPSAwOyBrIDwgNzsgaysrKSB7XHJcbiAgICAgICAgaWYoYXJyW2ldW2tdPT1cInVuZGVmaW5lZFwiKXtcclxuICAgICAgICAgICAgZWxfMiA9IFwiXCJcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgZWxfMiA9YXJyW2ldW2tdLnRvU3RyaW5nKClcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gbG9nKGVsXzIpXHJcbiAgICAgICAgaWYgKGs9PTQpIHtcclxuICAgICAgICAgICAgZWxfMiA9IGVsXzIuc3BsaXQoXCIuXCIpLmpvaW4oXCIsXCIpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGFycl8yLnB1c2goZWxfMilcclxuICAgIH1cclxuICAgIFtbVEFTS19MSVNUXV0ucHVzaChhcnJfMi5qb2luKFwiO1wiKSlcclxufSIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
         VAR_TASK_LIST = []
         arr = VAR_TASKS_FILE_CONTENT
         //формат под csv с заменой точек на запятые
         for (i = 1; i < arr.length; i++) {
         el = arr[i]
         arr_2 = []
         for (k = 0; k < 7; k++) {
         if(arr[i][k]=="undefined"){
         el_2 = ""
         }else{
         el_2 =arr[i][k].toString()
         }
         // log(el_2)
         if (k==4) {
         el_2 = el_2.split(".").join(",")
         }
         arr_2.push(el_2)
         }
         VAR_TASK_LIST.push(arr_2.join(";"))
         }
         section_end()!

         section_start("", 695381508)!
         /*Dat:eyJzIjoiRGVsZXRlQnlWYWx1ZSIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJWYXJpYWJsZSIsInR5cGUiOiJ2YXIiLCJkYXRhIjoiVEFTS19MSVNUIn0seyJpZCI6IlZhbHVlIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiI7Ozs7OzsiLCJjbGFzcyI6InN0cmluZyJ9XX0=*/
         VAR_TASK_LIST = VAR_TASK_LIST.filter(function(e){return e!== ";;;;;;" })
         section_end()!

         section_start("", 753859006)!
         /*Dat:eyJzIjoiZmlsZXN5c3RlbV9saXN0X3RvX2ZpbGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiRmlsZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiW1tQUk9GSUxFX0ZPTERFUl1dL3Rhc2tzLmNzdiIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6IlNhdmUiLCJ0eXBlIjoidmFyIiwiZGF0YSI6IlRBU0tfTElTVCJ9LHsiaWQiOiJDaGVjayIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfSx7ImlkIjoiQ2hlY2syIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9XX0=*/
         native("filesystem", "writefile", JSON.stringify({path: VAR_PROFILE_FOLDER + "/tasks.csv",value: (VAR_TASK_LIST).join("\r\n") + ((false) ? "\r\n" : "" ),base64:false,append:false}))
         section_end()!

         section_start("", 613658816)!
         /*Dat:eyJzIjoic2V0dmFyaWFibGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2V0VmFyaWFibGVOYW1lIiwidHlwZSI6InZhciIsImRhdGEiOiJUQVNLU19GSUxFX0NPTlRFTlQifSx7ImlkIjoiU2V0VmFyaWFibGVWYWx1ZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiXCJcIiIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
         VAR_TASKS_FILE_CONTENT = ""
         section_end()!

      })!
      section_end()!

   }
   section_end()!

   section_start("\u007b\u0022n\u0022:\u0022do_task\u0022,\u0022fd\u0022:\u0022\u007b\u005c\u0022fd\u005c\u0022:\u005c\u0022\u005c\u0022,\u005c\u0022hr\u005c\u0022:false,\u005c\u0022rd\u005c\u0022:\u005c\u0022\u005c\u0022,\u005c\u0022rv\u005c\u0022:\u005c\u0022FUNCTION_RESULT\u005c\u0022,\u005c\u0022p\u005c\u0022:[]\u007d\u0022\u007d", 758183682)!
   function do_task()
   {
   section_insert()
      section_start("\u007b\u0022n\u0022:\u0022is bridge with waiting?\u0022,\u0022c\u0022:\u00222\u0022,\u0022f\u0022:true\u007d", 424598286)!
      /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIoW1tUQVNLX0FDVElWSVRZXV0udG9Mb3dlckNhc2UoKS50cmltKCkgPT0gXCJzdGFyZ2F0ZVwiICYmIFtbVEFTS19UWVBFXV0udG9Mb3dlckNhc2UoKS50cmltKCkgPT0gXCJicmlkZ2VcIikgIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
      _set_if_expression("KFtbVEFTS19BQ1RJVklUWV1dLnRvTG93ZXJDYXNlKCkudHJpbSgpID09ICJzdGFyZ2F0ZSIgJiYgW1tUQVNLX1RZUEVdXS50b0xvd2VyQ2FzZSgpLnRyaW0oKSA9PSAiYnJpZGdlIikg");
      _if((VAR_TASK_ACTIVITY.toLowerCase().trim() == "stargate" && VAR_TASK_TYPE.toLowerCase().trim() == "bridge") ,function(){
      section_insert()
         section_start("", 440535887)!
         /*Dat:eyJzIjoiaWdub3JlZXJyb3JzIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbXX0=*/
         _call(function()
         {
         _on_fail(function(){
         VAR_LAST_ERROR = _result()
         VAR_ERROR_ID = ScriptWorker.GetCurrentAction()
         VAR_WAS_ERROR = false
         _break(1,true)
         })
         CYCLES.Current().RemoveLabel("function")
         section_insert()
            section_start("", 547478883)!
            /*Dat:eyJzIjoiZXhlY3V0ZWZ1bmN0aW9uIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkZ1bmN0aW9uTmFtZSIsInR5cGUiOiJ0ZXh0IiwiZGF0YSI6ImdldF9iYWxhbmNlX05vdXQifSx7ImlkIjoiUGFyYW1JZF81NDc5NzA2NSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiQmVmb3JlIiwiY2xhc3MiOiJzdHJpbmcifV19*/
            _call_function(get_balance_Nout,{ "Type" : ("Before")  })!
            _result_function()
            section_end()!

         },null)!
         section_end()!

         section_start("\u007b\u0022f\u0022:true\u007d", 345745130)!
         /*Dat:eyJzIjoid2hpbGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiV2hpbGVFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1dBU19FUlJPUl1dIiwiY2xhc3MiOiJleHByZXNzaW9uIn1dfQ==*/
         _do(function(){
         _set_action_info({ name: "While" });
         VAR_CYCLE_INDEX = _iterator() - 1
         BREAK_CONDITION = VAR_WAS_ERROR;
         if(!BREAK_CONDITION)_break();
         section_insert()
            section_start("\u007b\u0022f\u0022:true\u007d", 345154883)!
            /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW0NZQ0xFX0lOREVYXV0gPT0gMzAiLCJjbGFzcyI6ImV4cHJlc3Npb24ifSx7ImlkIjoiSWZFbHNlIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9XX0=*/
            _set_if_expression("W1tDWUNMRV9JTkRFWF1dID09IDMw");
            _if(VAR_CYCLE_INDEX == 30,function(){
            section_insert()
               section_start("\u007b\u0022f\u0022:true\u007d", 383938751)!
               /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJ7e2FsZXJ0X3RnfX09PVwi0LTQsFwiIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
               RS("alert_tg", false, false)!
               RESOURCE_351581 = _result().get()
               _set_if_expression("e3thbGVydF90Z319PT0i0LTQsCI=");
               _if(RESOURCE_351581=="да",function(){
               section_insert()
                  section_start("", 688820970)!
                  /*Dat:eyJzIjoiU2VuZE1lc3NhZ2UiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiVG9rZW4iLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Int7dGdfYm90X3Rva2VufX0iLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJJZENoYXQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Int7dGdfY2hhdF9pZH19IiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiTWVzc2FnZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiW1tQUk9GSUxFX0ZPTERFUl9OQU1FXV0g0J/QvtC20LDQu9GD0LnRgdGC0LAsINC/0LXRgNC10L/RgNC+0LLQtdGA0YzRgtC1IFJQQyIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6IkNoZWNrIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9LHsiaWQiOiJDaGVjazEiLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjpmYWxzZX1dfQ==*/
                  RS("tg_bot_token", false, false)!
                  RESOURCE_915790 = _result().get()
                  RS("tg_chat_id", false, false)!
                  RESOURCE_784849 = _result().get()
                  var getTime = function() {
                  var checkTime = function (i) {
                  return (i < 10) ? "0" + i : i;
                  }
                  var d = new Date();
                  var hh = checkTime(d.getHours());
                  var mm = checkTime(d.getMinutes());
                  var ss = checkTime(d.getSeconds());
                  return '[' + hh + ':' + mm + ':' + ss + ']'
                  }
                  var mess, _url_temp, json, tmp = "";
                  tmp = encodeURIComponent(VAR_PROFILE_FOLDER_NAME + " Пожалуйста, перепроверьте RPC")
                  mess = tmp
                  _url_temp = "https://api.telegram.org/bot"+ RESOURCE_915790 + "/sendMessage?chat_id=" + RESOURCE_784849 + "&text=" + mess + (false === true || false === true ? '&parse_mode=HTML' : '')
                  _switch_http_client_internal()
                  http_client_get2(_url_temp, {method:("GET")})!
                  var json = JSON.parse(http_client_content())
                  _switch_http_client_main()
                  if (!json['ok'])
                  fail(json['description'], false)
                  section_end()!

               })!
               section_end()!

               section_start("", 950984059)!
               /*Dat:eyJzIjoiZmFpbCIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJGYWlsTWVzc2FnZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoi0J/QvtC20LDQu9GD0LnRgdGC0LAsINC/0LXRgNC10L/RgNC+0LLQtdGA0YzRgtC1IFJQQyIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6IkNoZWNrIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9XX0=*/
               fail_user("Пожалуйста, перепроверьте RPC",false)
               section_end()!

            })!
            section_end()!

            section_start("", 218526527)!
            /*Dat:eyJzIjoic2xlZXAiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoic2xlZXBmcm9tIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIxMDAwIiwiY2xhc3MiOiJpbnQifSx7ImlkIjoic2xlZXB0byIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiMTAwMCIsImNsYXNzIjoiaW50In0seyJpZCI6InNsZWVwZnJvbXRvIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIyMDAwIiwiY2xhc3MiOiJpbnQifSx7ImlkIjoic2xlZXByYW5kb20iLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjpmYWxzZX1dfQ==*/
            sleep(2000)!
            section_end()!

            section_start("\u007b\u0022f\u0022:true\u007d", 26413332)!
            /*Dat:eyJzIjoiaWdub3JlZXJyb3JzIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbXX0=*/
            _call(function()
            {
            _on_fail(function(){
            VAR_LAST_ERROR = _result()
            VAR_ERROR_ID = ScriptWorker.GetCurrentAction()
            VAR_WAS_ERROR = false
            _break(1,true)
            })
            CYCLES.Current().RemoveLabel("function")
            section_insert()
               section_start("", 654699028)!
               /*Dat:eyJzIjoiZXhlY3V0ZWZ1bmN0aW9uIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkZ1bmN0aW9uTmFtZSIsInR5cGUiOiJ0ZXh0IiwiZGF0YSI6ImdldF9iYWxhbmNlX05vdXQifSx7ImlkIjoiUGFyYW1JZF81NDc5NzA2NSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiQmVmb3JlIiwiY2xhc3MiOiJzdHJpbmcifV19*/
               _call_function(get_balance_Nout,{ "Type" : ("Before")  })!
               _result_function()
               section_end()!

            },null)!
            section_end()!

         })!
         section_end()!

      })!
      section_end()!

      section_start("", 810722496)!
      /*Dat:eyJzIjoic2V0dmFyaWFibGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2V0VmFyaWFibGVOYW1lIiwidHlwZSI6InZhciIsImRhdGEiOiJub25jZV9iZWZvcmUifSx7ImlkIjoiU2V0VmFyaWFibGVWYWx1ZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoibiIsImNsYXNzIjoic3RyaW5nIn1dfQ==*/
      VAR_NONCE_BEFORE = "n"
      section_end()!

      section_start("\u007b\u0022n\u0022:\u0022STARGATE\u0022\u007d", 350621815)!
      /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfQUNUSVZJVFldXS50b0xvd2VyQ2FzZSgpLnRyaW0oKSA9PSBcInN0YXJnYXRlXCIiLCJjbGFzcyI6ImV4cHJlc3Npb24ifSx7ImlkIjoiSWZFbHNlIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9XX0=*/
      _set_if_expression("W1tUQVNLX0FDVElWSVRZXV0udG9Mb3dlckNhc2UoKS50cmltKCkgPT0gInN0YXJnYXRlIg==");
      _if(VAR_TASK_ACTIVITY.toLowerCase().trim() == "stargate",function(){
      section_insert()
         section_start("", 105648222)!
         /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6InN3aXRjaChbW1RBU0tfTkVUV09SS19JTl1dLnRvTG93ZXJDYXNlKCkudHJpbSgpKXtcclxuY2FzZSAnZXRoJzpcclxuICBbW1RBU0tfTkVUV09SS19JTl9TXV09J2V0aGVyZXVtJztcclxuICBicmVha1xyXG5jYXNlICdic2MnOlxyXG4gIFtbVEFTS19ORVRXT1JLX0lOX1NdXT0nYm5iJztcclxuICBicmVha1xyXG5jYXNlICdhdmF4JzpcclxuICBbW1RBU0tfTkVUV09SS19JTl9TXV09J2F2YWxhbmNoZSc7XHJcbiAgYnJlYWtcclxuY2FzZSAnbWF0aWMnOlxyXG4gIFtbVEFTS19ORVRXT1JLX0lOX1NdXT0ncG9seWdvbic7XHJcbiAgYnJlYWtcclxuY2FzZSAnYXJiaSc6XHJcbiAgW1tUQVNLX05FVFdPUktfSU5fU11dPSdhcmJpdHJ1bSc7XHJcbiAgYnJlYWtcclxuY2FzZSAnb3AnOlxyXG4gIFtbVEFTS19ORVRXT1JLX0lOX1NdXT0nb3B0aW1pc20nO1xyXG4gIGJyZWFrXHJcbmNhc2UgJ2Z0bSc6XHJcbiAgW1tUQVNLX05FVFdPUktfSU5fU11dPSdmYW50b20nO1xyXG4gIGJyZWFrIFxyXG59XHJcblxyXG5zd2l0Y2goW1tUQVNLX05FVFdPUktfT1VUXV0udG9Mb3dlckNhc2UoKS50cmltKCkpe1xyXG5jYXNlICdldGgnOlxyXG4gIFtbVEFTS19ORVRXT1JLX09VVF9TXV09J2V0aGVyZXVtJztcclxuICBicmVha1xyXG5jYXNlICdic2MnOlxyXG4gIFtbVEFTS19ORVRXT1JLX09VVF9TXV09J2JuYic7XHJcbiAgYnJlYWtcclxuY2FzZSAnYXZheCc6XHJcbiAgW1tUQVNLX05FVFdPUktfT1VUX1NdXT0nYXZhbGFuY2hlJztcclxuICBicmVha1xyXG5jYXNlICdtYXRpYyc6XHJcbiAgW1tUQVNLX05FVFdPUktfT1VUX1NdXT0ncG9seWdvbic7XHJcbiAgYnJlYWtcclxuY2FzZSAnYXJiaSc6XHJcbiAgW1tUQVNLX05FVFdPUktfT1VUX1NdXT0nYXJiaXRydW0nO1xyXG4gIGJyZWFrXHJcbmNhc2UgJ29wJzpcclxuICBbW1RBU0tfTkVUV09SS19PVVRfU11dPSdvcHRpbWlzbSc7XHJcbiAgYnJlYWtcclxuY2FzZSAnZnRtJzpcclxuICBbW1RBU0tfTkVUV09SS19PVVRfU11dPSdmYW50b20nO1xyXG4gIGJyZWFrIFxyXG59XHJcblxyXG4iLCJjbGFzcyI6ImV4cHJlc3Npb24ifV19*/
         switch(VAR_TASK_NETWORK_IN.toLowerCase().trim()){
         case 'eth':
         VAR_TASK_NETWORK_IN_S='ethereum';
         break
         case 'bsc':
         VAR_TASK_NETWORK_IN_S='bnb';
         break
         case 'avax':
         VAR_TASK_NETWORK_IN_S='avalanche';
         break
         case 'matic':
         VAR_TASK_NETWORK_IN_S='polygon';
         break
         case 'arbi':
         VAR_TASK_NETWORK_IN_S='arbitrum';
         break
         case 'op':
         VAR_TASK_NETWORK_IN_S='optimism';
         break
         case 'ftm':
         VAR_TASK_NETWORK_IN_S='fantom';
         break
         }
         switch(VAR_TASK_NETWORK_OUT.toLowerCase().trim()){
         case 'eth':
         VAR_TASK_NETWORK_OUT_S='ethereum';
         break
         case 'bsc':
         VAR_TASK_NETWORK_OUT_S='bnb';
         break
         case 'avax':
         VAR_TASK_NETWORK_OUT_S='avalanche';
         break
         case 'matic':
         VAR_TASK_NETWORK_OUT_S='polygon';
         break
         case 'arbi':
         VAR_TASK_NETWORK_OUT_S='arbitrum';
         break
         case 'op':
         VAR_TASK_NETWORK_OUT_S='optimism';
         break
         case 'ftm':
         VAR_TASK_NETWORK_OUT_S='fantom';
         break
         }
         section_end()!

         section_start("\u007b\u0022f\u0022:true\u007d", 301275308)!
         /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfVFlQRV1dLnRvTG93ZXJDYXNlKCkudHJpbSgpID09IFwiYnJpZGdlXCIiLCJjbGFzcyI6ImV4cHJlc3Npb24ifSx7ImlkIjoiSWZFbHNlIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9XX0=*/
         _set_if_expression("W1tUQVNLX1RZUEVdXS50b0xvd2VyQ2FzZSgpLnRyaW0oKSA9PSAiYnJpZGdlIg==");
         _if(VAR_TASK_TYPE.toLowerCase().trim() == "bridge",function(){
         section_insert()
            section_start("", 733140750)!
            /*Dat:eyJzIjoiZXhlY3V0ZWZ1bmN0aW9uIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkZ1bmN0aW9uTmFtZSIsInR5cGUiOiJ0ZXh0IiwiZGF0YSI6ImNhbGNfc2l6ZSJ9XX0=*/
            _call_function(calc_size,{})!
            _result_function()
            section_end()!

            section_start("\u007b\u0022c\u0022:\u00221\u0022\u007d", 935066710)!
            /*Dat:eyJzIjoiRW1iZWRkZWRMYW5ndWFnZXNOb2RlSnMiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMSIsInV0aSI6IjEwMDAwMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiTm9kZVZlcnNpb25MaXN0IiwidHlwZSI6InNlbGVjdCIsImRhdGEiOiIxOC4xMC4wIn0seyJpZCI6Ik5hbWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IjRkdTNsY3RvbzJuIiwiY2xhc3MiOiJzdHJpbmcifV19*/
            /*VAR_ETH_RPC VAR_BNB_RPC VAR_AVAX_RPC VAR_MATIC_RPC VAR_ARBI_RPC VAR_OP_RPC VAR_FANTOM_RPC VAR_TASK_COIN_IN VAR_TASK_NETWORK_IN_S VAR_TASK_NETWORK_OUT_S VAR_TASK_SIZE VAR_PRIVATE_KEY VAR_TASK_COIN_IN VAR_TASK_COIN_OUT VAR_TASK_NETWORK_IN_S VAR_TASK_NETWORK_OUT_S VAR_TASK_SIZE VAR_PRIVATE_KEY*/
            _embedded("4du3lctoo2n", "Node", "18.10.0", "ETH_RPC,BNB_RPC,AVAX_RPC,MATIC_RPC,ARBI_RPC,OP_RPC,FANTOM_RPC,TASK_COIN_IN,TASK_NETWORK_IN_S,TASK_NETWORK_OUT_S,TASK_SIZE,PRIVATE_KEY,TASK_COIN_IN,TASK_COIN_OUT,TASK_NETWORK_IN_S,TASK_NETWORK_OUT_S,TASK_SIZE,PRIVATE_KEY", 100000000 )!
            section_end()!

         })!
         section_end()!

         section_start("", 247477592)!
         /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfVFlQRV1dLnRvTG93ZXJDYXNlKCkudHJpbSgpID09IFwibGlxX2luXCIiLCJjbGFzcyI6ImV4cHJlc3Npb24ifSx7ImlkIjoiSWZFbHNlIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9XX0=*/
         _set_if_expression("W1tUQVNLX1RZUEVdXS50b0xvd2VyQ2FzZSgpLnRyaW0oKSA9PSAibGlxX2luIg==");
         _if(VAR_TASK_TYPE.toLowerCase().trim() == "liq_in",function(){
         section_insert()
            section_start("", 255010096)!
            /*Dat:eyJzIjoiZXhlY3V0ZWZ1bmN0aW9uIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkZ1bmN0aW9uTmFtZSIsInR5cGUiOiJ0ZXh0IiwiZGF0YSI6ImNhbGNfc2l6ZSJ9XX0=*/
            _call_function(calc_size,{})!
            _result_function()
            section_end()!

            section_start("\u007b\u0022c\u0022:\u00221\u0022\u007d", 302811131)!
            /*Dat:eyJzIjoiRW1iZWRkZWRMYW5ndWFnZXNOb2RlSnMiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMSIsInV0aSI6IjEwMDAwMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiTm9kZVZlcnNpb25MaXN0IiwidHlwZSI6InNlbGVjdCIsImRhdGEiOiIxOC4xMC4wIn0seyJpZCI6Ik5hbWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ImQ5em8zNDluajgiLCJjbGFzcyI6InN0cmluZyJ9XX0=*/
            /*VAR_ETH_RPC VAR_BNB_RPC VAR_AVAX_RPC VAR_MATIC_RPC VAR_ARBI_RPC VAR_OP_RPC VAR_FANTOM_RPC VAR_TASK_COIN_IN VAR_TASK_NETWORK_IN_S VAR_TASK_SIZE VAR_PRIVATE_KEY VAR_TASK_COIN_IN VAR_TASK_NETWORK_IN_S VAR_TASK_SIZE VAR_PRIVATE_KEY*/
            _embedded("d9zo349nj8", "Node", "18.10.0", "ETH_RPC,BNB_RPC,AVAX_RPC,MATIC_RPC,ARBI_RPC,OP_RPC,FANTOM_RPC,TASK_COIN_IN,TASK_NETWORK_IN_S,TASK_SIZE,PRIVATE_KEY,TASK_COIN_IN,TASK_NETWORK_IN_S,TASK_SIZE,PRIVATE_KEY", 100000000 )!
            section_end()!

         })!
         section_end()!

         section_start("\u007b\u0022f\u0022:true\u007d", 458845570)!
         /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfVFlQRV1dLnRvTG93ZXJDYXNlKCkudHJpbSgpID09IFwibGlxX291dFwiIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
         _set_if_expression("W1tUQVNLX1RZUEVdXS50b0xvd2VyQ2FzZSgpLnRyaW0oKSA9PSAibGlxX291dCI=");
         _if(VAR_TASK_TYPE.toLowerCase().trim() == "liq_out",function(){
         section_insert()
            section_start("\u007b\u0022c\u0022:\u00221\u0022\u007d", 596945387)!
            /*Dat:eyJzIjoiRW1iZWRkZWRMYW5ndWFnZXNOb2RlSnMiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMSIsInV0aSI6IjEwMDAwMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiTm9kZVZlcnNpb25MaXN0IiwidHlwZSI6InNlbGVjdCIsImRhdGEiOiIxOC4xMC4wIn0seyJpZCI6Ik5hbWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Imx0NjB0YThwamF0IiwiY2xhc3MiOiJzdHJpbmcifV19*/
            /*VAR_ETH_RPC VAR_BNB_RPC VAR_AVAX_RPC VAR_MATIC_RPC VAR_ARBI_RPC VAR_OP_RPC VAR_FANTOM_RPC VAR_TASK_COIN_IN VAR_TASK_NETWORK_IN_S VAR_PRIVATE_KEY*/
            _embedded("lt60ta8pjat", "Node", "18.10.0", "ETH_RPC,BNB_RPC,AVAX_RPC,MATIC_RPC,ARBI_RPC,OP_RPC,FANTOM_RPC,TASK_COIN_IN,TASK_NETWORK_IN_S,PRIVATE_KEY", 100000000 )!
            section_end()!

         })!
         section_end()!

         section_start("", 174178242)!
         /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfVFlQRV1dLnRvTG93ZXJDYXNlKCkudHJpbSgpID09IFwiZmFybV9pblwiIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
         _set_if_expression("W1tUQVNLX1RZUEVdXS50b0xvd2VyQ2FzZSgpLnRyaW0oKSA9PSAiZmFybV9pbiI=");
         _if(VAR_TASK_TYPE.toLowerCase().trim() == "farm_in",function(){
         section_insert()
            section_start("\u007b\u0022c\u0022:\u00221\u0022\u007d", 385858003)!
            /*Dat:eyJzIjoiRW1iZWRkZWRMYW5ndWFnZXNOb2RlSnMiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMSIsInV0aSI6IjEwMDAwMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiTm9kZVZlcnNpb25MaXN0IiwidHlwZSI6InNlbGVjdCIsImRhdGEiOiIxOC4xMC4wIn0seyJpZCI6Ik5hbWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6InFrNG1uaGNmN2QiLCJjbGFzcyI6InN0cmluZyJ9XX0=*/
            /*VAR_ETH_RPC VAR_BNB_RPC VAR_AVAX_RPC VAR_MATIC_RPC VAR_ARBI_RPC VAR_OP_RPC VAR_FANTOM_RPC VAR_TASK_COIN_IN VAR_TASK_NETWORK_IN_S VAR_PRIVATE_KEY*/
            _embedded("qk4mnhcf7d", "Node", "18.10.0", "ETH_RPC,BNB_RPC,AVAX_RPC,MATIC_RPC,ARBI_RPC,OP_RPC,FANTOM_RPC,TASK_COIN_IN,TASK_NETWORK_IN_S,PRIVATE_KEY", 100000000 )!
            section_end()!

         })!
         section_end()!

         section_start("\u007b\u0022f\u0022:true\u007d", 532292807)!
         /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfVFlQRV1dLnRvTG93ZXJDYXNlKCkudHJpbSgpID09IFwiZmFybV9vdXRcIiIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9LHsiaWQiOiJJZkVsc2UiLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjpmYWxzZX1dfQ==*/
         _set_if_expression("W1tUQVNLX1RZUEVdXS50b0xvd2VyQ2FzZSgpLnRyaW0oKSA9PSAiZmFybV9vdXQi");
         _if(VAR_TASK_TYPE.toLowerCase().trim() == "farm_out",function(){
         section_insert()
            section_start("\u007b\u0022c\u0022:\u00221\u0022\u007d", 791084916)!
            /*Dat:eyJzIjoiRW1iZWRkZWRMYW5ndWFnZXNOb2RlSnMiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMSIsInV0aSI6IjEwMDAwMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiTm9kZVZlcnNpb25MaXN0IiwidHlwZSI6InNlbGVjdCIsImRhdGEiOiIxOC4xMC4wIn0seyJpZCI6Ik5hbWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ImcyemRmcnMyeG0iLCJjbGFzcyI6InN0cmluZyJ9XX0=*/
            /*VAR_ETH_RPC VAR_BNB_RPC VAR_AVAX_RPC VAR_MATIC_RPC VAR_ARBI_RPC VAR_OP_RPC VAR_FANTOM_RPC VAR_TASK_COIN_IN VAR_TASK_NETWORK_IN_S VAR_PRIVATE_KEY*/
            _embedded("g2zdfrs2xm", "Node", "18.10.0", "ETH_RPC,BNB_RPC,AVAX_RPC,MATIC_RPC,ARBI_RPC,OP_RPC,FANTOM_RPC,TASK_COIN_IN,TASK_NETWORK_IN_S,PRIVATE_KEY", 100000000 )!
            section_end()!

         })!
         section_end()!

         section_start("", 564495613)!
         /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfVFlQRV1dLnRvTG93ZXJDYXNlKCkudHJpbSgpID09IFwiZmFybV9jbGFpbVwiIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
         _set_if_expression("W1tUQVNLX1RZUEVdXS50b0xvd2VyQ2FzZSgpLnRyaW0oKSA9PSAiZmFybV9jbGFpbSI=");
         _if(VAR_TASK_TYPE.toLowerCase().trim() == "farm_claim",function(){
         section_insert()
            section_start("\u007b\u0022c\u0022:\u00221\u0022\u007d", 535542867)!
            /*Dat:eyJzIjoiRW1iZWRkZWRMYW5ndWFnZXNOb2RlSnMiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMSIsInV0aSI6IjEwMDAwMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiTm9kZVZlcnNpb25MaXN0IiwidHlwZSI6InNlbGVjdCIsImRhdGEiOiIxOC4xMC4wIn0seyJpZCI6Ik5hbWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6InYyOWpucGZjOTEiLCJjbGFzcyI6InN0cmluZyJ9XX0=*/
            /*VAR_ETH_RPC VAR_BNB_RPC VAR_AVAX_RPC VAR_MATIC_RPC VAR_ARBI_RPC VAR_FANTOM_RPC VAR_TASK_COIN_IN VAR_TASK_NETWORK_IN_S VAR_PRIVATE_KEY*/
            _embedded("v29jnpfc91", "Node", "18.10.0", "ETH_RPC,BNB_RPC,AVAX_RPC,MATIC_RPC,ARBI_RPC,FANTOM_RPC,TASK_COIN_IN,TASK_NETWORK_IN_S,PRIVATE_KEY", 100000000 )!
            section_end()!

         })!
         section_end()!

         section_start("", 874371158)!
         /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfVFlQRV1dLnRvTG93ZXJDYXNlKCkudHJpbSgpID09IFwic3Rha2luZ19pblwiIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
         _set_if_expression("W1tUQVNLX1RZUEVdXS50b0xvd2VyQ2FzZSgpLnRyaW0oKSA9PSAic3Rha2luZ19pbiI=");
         _if(VAR_TASK_TYPE.toLowerCase().trim() == "staking_in",function(){
         section_insert()
            section_start("\u007b\u0022c\u0022:\u00221\u0022\u007d", 249102958)!
            /*Dat:eyJzIjoiRW1iZWRkZWRMYW5ndWFnZXNOb2RlSnMiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMSIsInV0aSI6IjEwMDAwMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiTm9kZVZlcnNpb25MaXN0IiwidHlwZSI6InNlbGVjdCIsImRhdGEiOiIxOC4xMC4wIn0seyJpZCI6Ik5hbWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6InBqamc1bmZmdTYiLCJjbGFzcyI6InN0cmluZyJ9XX0=*/
            /*VAR_ETH_RPC VAR_BNB_RPC VAR_AVAX_RPC VAR_MATIC_RPC VAR_ARBI_RPC VAR_FANTOM_RPC VAR_TASK_NETWORK_IN_S VAR_TASK_SIZE VAR_TASK_COIN_OUT VAR_PRIVATE_KEY*/
            _embedded("pjjg5nffu6", "Node", "18.10.0", "ETH_RPC,BNB_RPC,AVAX_RPC,MATIC_RPC,ARBI_RPC,FANTOM_RPC,TASK_NETWORK_IN_S,TASK_SIZE,TASK_COIN_OUT,PRIVATE_KEY", 100000000 )!
            section_end()!

         })!
         section_end()!

         section_start("", 45244795)!
         /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfVFlQRV1dLnRvTG93ZXJDYXNlKCkudHJpbSgpID09IFwic3Rha2luZ19vdXRcIiIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9LHsiaWQiOiJJZkVsc2UiLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjpmYWxzZX1dfQ==*/
         _set_if_expression("W1tUQVNLX1RZUEVdXS50b0xvd2VyQ2FzZSgpLnRyaW0oKSA9PSAic3Rha2luZ19vdXQi");
         _if(VAR_TASK_TYPE.toLowerCase().trim() == "staking_out",function(){
         section_insert()
            section_start("\u007b\u0022c\u0022:\u00221\u0022\u007d", 494526595)!
            /*Dat:eyJzIjoiRW1iZWRkZWRMYW5ndWFnZXNOb2RlSnMiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMSIsInV0aSI6IjEwMDAwMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiTm9kZVZlcnNpb25MaXN0IiwidHlwZSI6InNlbGVjdCIsImRhdGEiOiIxOC4xMC4wIn0seyJpZCI6Ik5hbWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Im9ndHlhbDBsaDFzIiwiY2xhc3MiOiJzdHJpbmcifV19*/
            /*VAR_ETH_RPC VAR_BNB_RPC VAR_AVAX_RPC VAR_MATIC_RPC VAR_ARBI_RPC VAR_FANTOM_RPC VAR_TASK_NETWORK_IN_S VAR_PRIVATE_KEY*/
            _embedded("ogtyal0lh1s", "Node", "18.10.0", "ETH_RPC,BNB_RPC,AVAX_RPC,MATIC_RPC,ARBI_RPC,FANTOM_RPC,TASK_NETWORK_IN_S,PRIVATE_KEY", 100000000 )!
            section_end()!

         })!
         section_end()!

      })!
      section_end()!

   }
   section_end()!

   section_start("\u007b\u0022n\u0022:\u0022calc_size\u0022,\u0022fd\u0022:\u0022\u007b\u005c\u0022fd\u005c\u0022:\u005c\u0022\u005c\u0022,\u005c\u0022hr\u005c\u0022:false,\u005c\u0022rd\u005c\u0022:\u005c\u0022\u005c\u0022,\u005c\u0022rv\u005c\u0022:\u005c\u0022FUNCTION_RESULT\u005c\u0022,\u005c\u0022p\u005c\u0022:[]\u007d\u0022\u007d", 150948076)!
   function calc_size()
   {
   section_insert()
      section_start("", 497716644)!
      /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6InN3aXRjaChbW1RBU0tfTkVUV09SS19JTl1dLnRvTG93ZXJDYXNlKCkudHJpbSgpKXtcclxuY2FzZSAnZXRoJzpcclxuICBbW1RBU0tfTkVUV09SS19JTl9TXV09J2V0aGVyZXVtJztcclxuICBicmVha1xyXG5jYXNlICdic2MnOlxyXG4gIFtbVEFTS19ORVRXT1JLX0lOX1NdXT0nYm5iJztcclxuICBicmVha1xyXG5jYXNlICdhdmF4JzpcclxuICBbW1RBU0tfTkVUV09SS19JTl9TXV09J2F2YWxhbmNoZSc7XHJcbiAgYnJlYWtcclxuY2FzZSAnbWF0aWMnOlxyXG4gIFtbVEFTS19ORVRXT1JLX0lOX1NdXT0ncG9seWdvbic7XHJcbiAgYnJlYWtcclxuY2FzZSAnYXJiaSc6XHJcbiAgW1tUQVNLX05FVFdPUktfSU5fU11dPSdhcmJpdHJ1bSc7XHJcbiAgYnJlYWtcclxuY2FzZSAnb3AnOlxyXG4gIFtbVEFTS19ORVRXT1JLX0lOX1NdXT0nb3B0aW1pc20nO1xyXG4gIGJyZWFrXHJcbmNhc2UgJ2Z0bSc6XHJcbiAgW1tUQVNLX05FVFdPUktfSU5fU11dPSdmYW50b20nO1xyXG4gIGJyZWFrIFxyXG5jYXNlICdhcHQnOlxyXG4gIFtbVEFTS19ORVRXT1JLX0lOX1NdXT0nYXB0b3MnO1xyXG4gIGJyZWFrXHJcbn1cclxuXHJcblxyXG5cclxuXHJcbiIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
      switch(VAR_TASK_NETWORK_IN.toLowerCase().trim()){
      case 'eth':
      VAR_TASK_NETWORK_IN_S='ethereum';
      break
      case 'bsc':
      VAR_TASK_NETWORK_IN_S='bnb';
      break
      case 'avax':
      VAR_TASK_NETWORK_IN_S='avalanche';
      break
      case 'matic':
      VAR_TASK_NETWORK_IN_S='polygon';
      break
      case 'arbi':
      VAR_TASK_NETWORK_IN_S='arbitrum';
      break
      case 'op':
      VAR_TASK_NETWORK_IN_S='optimism';
      break
      case 'ftm':
      VAR_TASK_NETWORK_IN_S='fantom';
      break
      case 'apt':
      VAR_TASK_NETWORK_IN_S='aptos';
      break
      }
      section_end()!

      section_start("", 318368221)!
      /*Dat:eyJzIjoiRW1iZWRkZWRMYW5ndWFnZXNOb2RlSnMiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMSIsInV0aSI6IjEwMDAwMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiTm9kZVZlcnNpb25MaXN0IiwidHlwZSI6InNlbGVjdCIsImRhdGEiOiIxOC4xMC4wIn0seyJpZCI6Ik5hbWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ImpnNWN4dzZkNzkiLCJjbGFzcyI6InN0cmluZyJ9XX0=*/
      /*VAR_ETH_RPC VAR_BNB_RPC VAR_AVAX_RPC VAR_MATIC_RPC VAR_ARBI_RPC VAR_OP_RPC VAR_FANTOM_RPC VAR_TASK_NETWORK_IN VAR_TASK_COIN_IN VAR_TASK_NETWORK_IN_S VAR_PRIVATE_KEY_APT VAR_COIN_FOR_WORK VAR_TASK_COIN_IN VAR_TASK_NETWORK_IN_S VAR_PRIVATE_KEY VAR_COIN_FOR_WORK*/
      _embedded("jg5cxw6d79", "Node", "18.10.0", "ETH_RPC,BNB_RPC,AVAX_RPC,MATIC_RPC,ARBI_RPC,OP_RPC,FANTOM_RPC,TASK_NETWORK_IN,TASK_COIN_IN,TASK_NETWORK_IN_S,PRIVATE_KEY_APT,COIN_FOR_WORK,TASK_COIN_IN,TASK_NETWORK_IN_S,PRIVATE_KEY,COIN_FOR_WORK", 100000000 )!
      section_end()!

      section_start("", 876913005)!
      /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIrW1tDT0lOX0ZPUl9XT1JLXV0gPCAwLjAwMDAxIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
      _set_if_expression("K1tbQ09JTl9GT1JfV09SS11dIDwgMC4wMDAwMQ==");
      _if(+VAR_COIN_FOR_WORK < 0.00001,function(){
      section_insert()
         section_start("", 532414478)!
         /*Dat:eyJzIjoiZmFpbCIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJGYWlsTWVzc2FnZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiTm8gYmFsYW5jZSBvbiB0aGlzIG5ldHdvcmsiLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJDaGVjayIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
         fail_user("No balance on this network",false)
         section_end()!

      })!
      section_end()!

      section_start("", 387392335)!
      /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbVEFTS19TSVpFXV0gPSBNYXRoLmZsb29yKFtbUEVSQ0VOVF1dLzEwMCpbW1RBU0tfU0laRV9QRVJDRU5UXV0vMTAwKltbQ09JTl9GT1JfV09SS11dKjEwMDAwMCkvMTAwMDAwIiwiY2xhc3MiOiJleHByZXNzaW9uIn1dfQ==*/
      VAR_TASK_SIZE = Math.floor(VAR_PERCENT/100*VAR_TASK_SIZE_PERCENT/100*VAR_COIN_FOR_WORK*100000)/100000
      section_end()!

      section_start("", 939729566)!
      /*Dat:eyJzIjoibG9nIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkxvZ1RleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ItCh0YPQvNC80LAgLSBbW1RBU0tfU0laRV1dIFtbVEFTS19DT0lOX0lOXV0iLCJjbGFzcyI6InN0cmluZyJ9XX0=*/
      log("Сумма - " + VAR_TASK_SIZE + " " + VAR_TASK_COIN_IN)
      section_end()!

      section_start("", 788678905)!
      /*Dat:eyJzIjoic2V0dmFyaWFibGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2V0VmFyaWFibGVOYW1lIiwidHlwZSI6InZhciIsImRhdGEiOiJ0YXNrX3NpemUifSx7ImlkIjoiU2V0VmFyaWFibGVWYWx1ZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiU3RyaW5nKFtbVEFTS19TSVpFXV0pIiwiY2xhc3MiOiJleHByZXNzaW9uIn1dfQ==*/
      VAR_TASK_SIZE = String(VAR_TASK_SIZE)
      section_end()!

      section_start("\u007b\u0022n\u0022:\u0022OLD\u0022,\u0022c\u0022:\u00225\u0022,\u0022f\u0022:true\u007d", 22012785)!
      /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIwIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
      _set_if_expression("MA==");
      _if(0,function(){
      section_insert()
         section_start("\u007b\u0022f\u0022:true\u007d", 550195710)!
         /*Dat:eyJzIjoiZm9yIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkZvckZyb20iLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IjEiLCJjbGFzcyI6ImV4cHJlc3Npb24ifSx7ImlkIjoiRm9yVG8iLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IjUiLCJjbGFzcyI6ImV4cHJlc3Npb24ifV19*/
         _do(function(){
         _set_action_info({ name: "For" });
         VAR_CYCLE_INDEX = _iterator() - 1 + parseInt(1)
         if(VAR_CYCLE_INDEX > parseInt(5))_break();
         section_insert()
            section_start("", 217941331)!
            /*Dat:eyJzIjoiaWdub3JlZXJyb3JzIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbXX0=*/
            _call(function()
            {
            _on_fail(function(){
            VAR_LAST_ERROR = _result()
            VAR_ERROR_ID = ScriptWorker.GetCurrentAction()
            VAR_WAS_ERROR = false
            _break(1,true)
            })
            CYCLES.Current().RemoveLabel("function")
            section_insert()
               section_start("", 620001610)!
               /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJyb2xlIjoibWFzdGVyIiwic2xhdmUiOjk5NjM4MTQ0OSwiaWZfdmFyIjoiX2N5Y2xlX3BhcmFtcygpLmlmX2Vsc2UiLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfTkVUV09SS19JTl1dLnRvTG93ZXJDYXNlKCkudHJpbSgpPT0nYXB0JyIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9LHsiaWQiOiJJZkVsc2UiLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjp0cnVlfV19*/
               _cycle_params().if_else = VAR_TASK_NETWORK_IN.toLowerCase().trim()=='apt';
               _set_if_expression("W1tUQVNLX05FVFdPUktfSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09J2FwdCc=");
               _if(_cycle_params().if_else,function(){
               section_insert()
                  section_start("", 755810452)!
                  /*Dat:eyJzIjoiaHR0cGNsaWVudHBvc3QiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiVmFsdWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Imh0dHBzOi8vaW5kZXhlci5tYWlubmV0LmFwdG9zbGFicy5jb20vdjEvZ3JhcGhxbCIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6IkhlYWRlcnMiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IiIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6IkNoZWNrMiIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfSx7ImlkIjoiUG9zdE5hbWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IiIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6IlBvc3RWYWx1ZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiIiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiUG9zdERhdGFBcnJheSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IkNvbnRlbnRUeXBlIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJ1cmxlbmNvZGUiLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJQb3N0RGF0YVJhdyIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoie1wib3BlcmF0aW9uTmFtZVwiOlwiQ29pbnNEYXRhXCIsXCJ2YXJpYWJsZXNcIjp7XCJvd25lcl9hZGRyZXNzXCI6XCJbW1dBTExFVF9BRERSRVNTXV1cIn0sXCJxdWVyeVwiOlwicXVlcnkgQ29pbnNEYXRhKCRvd25lcl9hZGRyZXNzOiBTdHJpbmcsICRsaW1pdDogSW50LCAkb2Zmc2V0OiBJbnQpIHtcXG4gIGN1cnJlbnRfY29pbl9iYWxhbmNlcyhcXG4gICAgd2hlcmU6IHtvd25lcl9hZGRyZXNzOiB7X2VxOiAkb3duZXJfYWRkcmVzc319XFxuICAgIGxpbWl0OiAkbGltaXRcXG4gICAgb2Zmc2V0OiAkb2Zmc2V0XFxuICApIHtcXG4gICAgYW1vdW50XFxuICAgIGNvaW5fdHlwZVxcbiAgICBjb2luX2luZm8ge1xcbiAgICAgIG5hbWVcXG4gICAgICBkZWNpbWFsc1xcbiAgICAgIHN5bWJvbFxcbiAgICAgIF9fdHlwZW5hbWVcXG4gICAgfVxcbiAgICBfX3R5cGVuYW1lXFxuICB9XFxufVwifSIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6IkNvbnRlbnRUeXBlUmF3IiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJhcHBsaWNhdGlvbi9qc29uIiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiRW5jb2RpbmciLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IlVURi04IiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiTWV0aG9kIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJQT1NUIiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiQ2hlY2siLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjp0cnVlfV19*/
                  _switch_http_client_main()
                  http_client_post("https://indexer.mainnet.aptoslabs.com/v1/graphql", ["data", "\u007b\u0022operationName\u0022:\u0022CoinsData\u0022,\u0022variables\u0022:\u007b\u0022owner_address\u0022:\u0022" + VAR_WALLET_ADDRESS + "\u0022\u007d,\u0022query\u0022:\u0022query CoinsData($owner_address: String, $limit: Int, $offset: Int) \u007b\u005cn  current_coin_balances(\u005cn    where: \u007bowner_address: \u007b_eq: $owner_address\u007d\u007d\u005cn    limit: $limit\u005cn    offset: $offset\u005cn  ) \u007b\u005cn    amount\u005cn    coin_type\u005cn    coin_info \u007b\u005cn      name\u005cn      decimals\u005cn      symbol\u005cn      __typename\u005cn    \u007d\u005cn    __typename\u005cn  \u007d\u005cn\u007d\u0022\u007d"], {"content-type":"custom/" + ("application/json"), "encoding":("UTF-8"), "method":("POST"),headers:("")})!
                  section_end()!

                  section_start("", 355298943)!
                  /*Dat:eyJzIjoiaHR0cGNsaWVudGNvbnRlbnQiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2F2ZSIsInR5cGUiOiJ2YXIiLCJkYXRhIjoiU0FWRURfQ09OVEVOVCJ9LHsiaWQiOiJFbmNvZGluZyIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiYXV0byIsImNsYXNzIjoic3RyaW5nIn1dfQ==*/
                  _switch_http_client_main()
                  VAR_SAVED_CONTENT = http_client_encoded_content("auto")
                  section_end()!

               })!
               section_end()!

               section_start("\u007b\u0022n\u0022:\u0022Else\u0022\u007d", 996381449)!
               /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJyb2xlIjoic2xhdmUiLCJzbGF2ZSI6OTk2MzgxNDQ5LCJtYXN0ZXIiOjYyMDAwMTYxMCwiaWZfdmFyIjoiX2N5Y2xlX3BhcmFtcygpLmlmX2Vsc2UiLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfTkVUV09SS19JTl1dLnRvTG93ZXJDYXNlKCkudHJpbSgpPT0nYXB0JyIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9LHsiaWQiOiJJZkVsc2UiLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjp0cnVlfV19*/
               _if(!_cycle_params().if_else,function(){
               section_insert()
                  section_start("", 721189182)!
                  /*Dat:eyJzIjoiaHR0cGNsaWVudGdldCIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJWYWx1ZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiW1tVUkxfRVhQTE9SRVJdXS9hZGRyZXNzL1tbV0FMTEVUX0FERFJFU1NdXSIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6IkhlYWRlcnMiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IiIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6Ik1ldGhvZCIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiR0VUIiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiQ2hlY2siLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjp0cnVlfV19*/
                  _switch_http_client_main()
                  http_client_get2(VAR_URL_EXPLORER + "/address/" + VAR_WALLET_ADDRESS,{method:("GET"),headers:("")})!
                  section_end()!

                  section_start("", 510147859)!
                  /*Dat:eyJzIjoiaHR0cGNsaWVudGNvbnRlbnQiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2F2ZSIsInR5cGUiOiJ2YXIiLCJkYXRhIjoiU0FWRURfQ09OVEVOVCJ9LHsiaWQiOiJFbmNvZGluZyIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiYXV0byIsImNsYXNzIjoic3RyaW5nIn1dfQ==*/
                  _switch_http_client_main()
                  VAR_SAVED_CONTENT = http_client_encoded_content("auto")
                  section_end()!

               })!
               delete _cycle_params().if_else;
               section_end()!

            },null)!
            section_end()!

            section_start("\u007b\u0022c\u0022:\u00225\u0022\u007d", 78974582)!
            /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJyb2xlIjoibWFzdGVyIiwic2xhdmUiOjE0OTU4Nzc0NSwiaWZfdmFyIjoiX2N5Y2xlX3BhcmFtcygpLmlmX2Vsc2UiLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1dBU19FUlJPUl1dIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOnRydWV9XX0=*/
            _cycle_params().if_else = typeof(VAR_WAS_ERROR) !== "undefined" ? (VAR_WAS_ERROR) : undefined;
            _set_if_expression("W1tXQVNfRVJST1JdXQ==");
            _if(_cycle_params().if_else,function(){
            section_insert()
               section_start("\u007b\u0022c\u0022:\u00225\u0022\u007d", 631387892)!
               /*Dat:eyJzIjoibG9nIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkxvZ1RleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ItCf0YDQvtC40LfQvtGI0LvQsCDQvtGI0LjQsdC60LAgOiBbW0xBU1RfRVJST1JdXSIsImNsYXNzIjoic3RyaW5nIn1dfQ==*/
               log("Произошла ошибка : " + VAR_LAST_ERROR)
               section_end()!

               section_start("", 723215732)!
               /*Dat:eyJzIjoic2xlZXAiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoic2xlZXBmcm9tIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIxMDAwIiwiY2xhc3MiOiJpbnQifSx7ImlkIjoic2xlZXB0byIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiMTAwMCIsImNsYXNzIjoiaW50In0seyJpZCI6InNsZWVwZnJvbXRvIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiI1MDAwIiwiY2xhc3MiOiJpbnQifSx7ImlkIjoic2xlZXByYW5kb20iLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjpmYWxzZX1dfQ==*/
               sleep(5000)!
               section_end()!

            })!
            section_end()!

            section_start("\u007b\u0022n\u0022:\u0022Else\u0022\u007d", 149587745)!
            /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJyb2xlIjoic2xhdmUiLCJzbGF2ZSI6MTQ5NTg3NzQ1LCJtYXN0ZXIiOjc4OTc0NTgyLCJpZl92YXIiOiJfY3ljbGVfcGFyYW1zKCkuaWZfZWxzZSIsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJJZkV4cHJlc3Npb24iLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbV0FTX0VSUk9SXV0iLCJjbGFzcyI6ImV4cHJlc3Npb24ifSx7ImlkIjoiSWZFbHNlIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6dHJ1ZX1dfQ==*/
            _if(!_cycle_params().if_else,function(){
            section_insert()
               section_start("", 327278538)!
               /*Dat:eyJzIjoiYnJlYWsiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOltdfQ==*/
               _break("function")
               section_end()!

            })!
            delete _cycle_params().if_else;
            section_end()!

         })!
         section_end()!

         section_start("", 624929932)!
         /*Dat:eyJzIjoic2V0dmFyaWFibGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2V0VmFyaWFibGVOYW1lIiwidHlwZSI6InZhciIsImRhdGEiOiJ0YXNrX2NvaW5faW4ifSx7ImlkIjoiU2V0VmFyaWFibGVWYWx1ZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiW1tUQVNLX0NPSU5fSU5dXS50b1VwcGVyQ2FzZSgpIiwiY2xhc3MiOiJleHByZXNzaW9uIn1dfQ==*/
         VAR_TASK_COIN_IN = VAR_TASK_COIN_IN.toUpperCase()
         section_end()!

         section_start("\u007b\u0022n\u0022:\u0022EVM eth based (add zksync)\u0022,\u0022c\u0022:\u00224\u0022\u007d", 670422396)!
         /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfTkVUV09SS19JTl1dLnRvTG93ZXJDYXNlKCkudHJpbSgpPT1cImV0aFwiIHx8IFtbVEFTS19ORVRXT1JLX0lOXV0udG9Mb3dlckNhc2UoKS50cmltKCk9PVwib3BcIiB8fCBbW1RBU0tfTkVUV09SS19JTl1dLnRvTG93ZXJDYXNlKCkudHJpbSgpPT1cImFyYmlcIiB8fCBbW1RBU0tfTkVUV09SS19JTl1dLnRvTG93ZXJDYXNlKCkudHJpbSgpPT1cImFyYmkgbm92YVwiIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
         _set_if_expression("W1tUQVNLX05FVFdPUktfSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09ImV0aCIgfHwgW1tUQVNLX05FVFdPUktfSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09Im9wIiB8fCBbW1RBU0tfTkVUV09SS19JTl1dLnRvTG93ZXJDYXNlKCkudHJpbSgpPT0iYXJiaSIgfHwgW1tUQVNLX05FVFdPUktfSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09ImFyYmkgbm92YSI=");
         _if(VAR_TASK_NETWORK_IN.toLowerCase().trim()=="eth" || VAR_TASK_NETWORK_IN.toLowerCase().trim()=="op" || VAR_TASK_NETWORK_IN.toLowerCase().trim()=="arbi" || VAR_TASK_NETWORK_IN.toLowerCase().trim()=="arbi nova",function(){
         section_insert()
            section_start("", 777334229)!
            /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJyb2xlIjoibWFzdGVyIiwic2xhdmUiOjU5Njk2ODE5MSwibWFzdGVyIjo3NzczMzQyMjksImlmX3ZhciI6Il9jeWNsZV9wYXJhbXMoKS5pZl9lbHNlIiwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IklmRXhwcmVzc2lvbiIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiW1tUQVNLX0NPSU5fSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09XCJldGhcIiIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9LHsiaWQiOiJJZkVsc2UiLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjp0cnVlfV19*/
            _cycle_params().if_else = VAR_TASK_COIN_IN.toLowerCase().trim()=="eth";
            _set_if_expression("W1tUQVNLX0NPSU5fSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09ImV0aCI=");
            _if(_cycle_params().if_else,function(){
            section_insert()
               section_start("", 921017002)!
               /*Dat:eyJzIjoiWHBhdGhUZXh0IiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IlRleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbU0FWRURfQ09OVEVOVF1dIiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiVmFsdWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Ii8vZGl2W2NvbnRhaW5zKEBjbGFzcyxcImNhcmQtYm9keVwiKV0vLypbY29udGFpbnModGV4dCgpLFwiQmFsYW5jZVwiKSBvciBjb250YWlucyh0ZXh0KCksXCJFVEggQkFMQU5DRVwiKSBdL2ZvbGxvd2luZy1zaWJsaW5nOjpkaXYiLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJTYXZlIiwidHlwZSI6InZhciIsImRhdGEiOiJYUEFUSF9URVhUIn0seyJpZCI6IkNoZWNrIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6dHJ1ZX1dfQ==*/
               html_parser_xpath_parse(VAR_SAVED_CONTENT)
               if((true) && !html_parser_xpath_exist("//div[contains(@class,\u0022card-body\u0022)]//*[contains(text(),\u0022Balance\u0022) or contains(text(),\u0022ETH BALANCE\u0022) ]/following-sibling::div"))
               fail("Can't resolve query " + "//div[contains(@class,\u0022card-body\u0022)]//*[contains(text(),\u0022Balance\u0022) or contains(text(),\u0022ETH BALANCE\u0022) ]/following-sibling::div");
               VAR_XPATH_TEXT = html_parser_xpath_text("//div[contains(@class,\u0022card-body\u0022)]//*[contains(text(),\u0022Balance\u0022) or contains(text(),\u0022ETH BALANCE\u0022) ]/following-sibling::div")
               section_end()!

               section_start("", 637140853)!
               /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbQ09JTl9GT1JfV09SS11dID0rKFtbWFBBVEhfVEVYVF1dLnNwbGl0KFwiIFwiKVswXS5yZXBsYWNlKC8sL2csIFwiXCIpKSIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
               VAR_COIN_FOR_WORK =+(VAR_XPATH_TEXT.split(" ")[0].replace(/,/g, ""))
               section_end()!

               section_start("", 959082457)!
               /*Dat:eyJzIjoic2V0dmFyaWFibGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2V0VmFyaWFibGVOYW1lIiwidHlwZSI6InZhciIsImRhdGEiOiJUQVNLX1NJWkUifSx7ImlkIjoiU2V0VmFyaWFibGVWYWx1ZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiTWF0aC5mbG9vcihbW1BFUkNFTlRdXS8xMDAqW1tDT0lOX0ZPUl9XT1JLXV0qW1tUQVNLX1NJWkVfUEVSQ0VOVF1dLzEwMCoxMDAwMDApLzEwMDAwMCIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
               VAR_TASK_SIZE = Math.floor(VAR_PERCENT/100*VAR_COIN_FOR_WORK*VAR_TASK_SIZE_PERCENT/100*100000)/100000
               section_end()!

            })!
            section_end()!

            section_start("\u007b\u0022n\u0022:\u0022Else\u0022\u007d", 596968191)!
            /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJyb2xlIjoic2xhdmUiLCJzbGF2ZSI6NTk2OTY4MTkxLCJtYXN0ZXIiOjc3NzMzNDIyOSwiaWZfdmFyIjoiX2N5Y2xlX3BhcmFtcygpLmlmX2Vsc2UiLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfQ09JTl9JTl1dPT1cIkVUSFwiIHx8IFtbVEFTS19DT0lOX0lOXV09PVwiV0VUSFwiIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOnRydWV9XX0=*/
            _if(!_cycle_params().if_else,function(){
            section_insert()
               section_start("", 733563907)!
               /*Dat:eyJzIjoiaWdub3JlZXJyb3JzIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbXX0=*/
               _call(function()
               {
               _on_fail(function(){
               VAR_LAST_ERROR = _result()
               VAR_ERROR_ID = ScriptWorker.GetCurrentAction()
               VAR_WAS_ERROR = false
               _break(1,true)
               })
               CYCLES.Current().RemoveLabel("function")
               section_insert()
                  section_start("", 372070194)!
                  /*Dat:eyJzIjoiWHBhdGhUZXh0IiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IlRleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbU0FWRURfQ09OVEVOVF1dIiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiVmFsdWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Ii8vbGlbY29udGFpbnMoQGNsYXNzLFwiY3VzdG9tLUVSQzIwXCIpXS9hL2Rpdi9zcGFuW2NvbnRhaW5zKHRleHQoKSxcIltbVEFTS19DT0lOX0lOXV1cIildIiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiU2F2ZSIsInR5cGUiOiJ2YXIiLCJkYXRhIjoiWFBBVEhfVEVYVCJ9LHsiaWQiOiJDaGVjayIsInR5cGUiOiJjaGVjayIsImRhdGEiOnRydWV9XX0=*/
                  html_parser_xpath_parse(VAR_SAVED_CONTENT)
                  if((true) && !html_parser_xpath_exist("//li[contains(@class,\u0022custom-ERC20\u0022)]/a/div/span[contains(text(),\u0022" + VAR_TASK_COIN_IN + "\u0022)]"))
                  fail("Can't resolve query " + "//li[contains(@class,\u0022custom-ERC20\u0022)]/a/div/span[contains(text(),\u0022" + VAR_TASK_COIN_IN + "\u0022)]");
                  VAR_XPATH_TEXT = html_parser_xpath_text("//li[contains(@class,\u0022custom-ERC20\u0022)]/a/div/span[contains(text(),\u0022" + VAR_TASK_COIN_IN + "\u0022)]")
                  section_end()!

               },null)!
               section_end()!

               section_start("", 887723818)!
               /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIoW1tYUEFUSF9URVhUXV0uc3BsaXQoXCIgXCIpWzFdLnRvTG93ZXJDYXNlKCkgIT0gW1tUQVNLX0NPSU5fSU5dXS50b0xvd2VyQ2FzZSgpKSB8fCBbW1dBU19FUlJPUl1dIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
               _set_if_expression("KFtbWFBBVEhfVEVYVF1dLnNwbGl0KCIgIilbMV0udG9Mb3dlckNhc2UoKSAhPSBbW1RBU0tfQ09JTl9JTl1dLnRvTG93ZXJDYXNlKCkpIHx8IFtbV0FTX0VSUk9SXV0=");
               _if((VAR_XPATH_TEXT.split(" ")[1].toLowerCase() != VAR_TASK_COIN_IN.toLowerCase()) || VAR_WAS_ERROR,function(){
               section_insert()
                  section_start("", 77161963)!
                  /*Dat:eyJzIjoiZmFpbCIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJGYWlsTWVzc2FnZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiTm8gYmFsYW5jZSBvbiB0aGlzIG5ldHdvcmsiLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJDaGVjayIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
                  fail_user("No balance on this network",false)
                  section_end()!

               })!
               section_end()!

               section_start("", 670955971)!
               /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbQ09JTl9GT1JfV09SS11dID0rKFtbWFBBVEhfVEVYVF1dLnNwbGl0KFwiIFwiKVswXS5yZXBsYWNlKC8sL2csIFwiXCIpKSIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
               VAR_COIN_FOR_WORK =+(VAR_XPATH_TEXT.split(" ")[0].replace(/,/g, ""))
               section_end()!

               section_start("", 258044314)!
               /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbVEFTS19TSVpFXV0gPSBNYXRoLmZsb29yKFtbUEVSQ0VOVF1dLzEwMCpbW1RBU0tfU0laRV9QRVJDRU5UXV0vMTAwKltbQ09JTl9GT1JfV09SS11dKjEwMDAwMCkvMTAwMDAwIiwiY2xhc3MiOiJleHByZXNzaW9uIn1dfQ==*/
               VAR_TASK_SIZE = Math.floor(VAR_PERCENT/100*VAR_TASK_SIZE_PERCENT/100*VAR_COIN_FOR_WORK*100000)/100000
               section_end()!

            })!
            delete _cycle_params().if_else;
            section_end()!

         })!
         section_end()!

         section_start("\u007b\u0022n\u0022:\u0022bsc\u0022,\u0022c\u0022:\u00224\u0022,\u0022f\u0022:true\u007d", 549400541)!
         /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfTkVUV09SS19JTl1dLnRvTG93ZXJDYXNlKCkudHJpbSgpPT1cImJzY1wiIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
         _set_if_expression("W1tUQVNLX05FVFdPUktfSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09ImJzYyI=");
         _if(VAR_TASK_NETWORK_IN.toLowerCase().trim()=="bsc",function(){
         section_insert()
            section_start("", 447408938)!
            /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJyb2xlIjoibWFzdGVyIiwic2xhdmUiOjU3NDk3NjIyOCwibWFzdGVyIjo0NDc0MDg5MzgsImlmX3ZhciI6Il9jeWNsZV9wYXJhbXMoKS5pZl9lbHNlIiwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IklmRXhwcmVzc2lvbiIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiW1tUQVNLX0NPSU5fSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09XCJibmJcIiIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9LHsiaWQiOiJJZkVsc2UiLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjp0cnVlfV19*/
            _cycle_params().if_else = VAR_TASK_COIN_IN.toLowerCase().trim()=="bnb";
            _set_if_expression("W1tUQVNLX0NPSU5fSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09ImJuYiI=");
            _if(_cycle_params().if_else,function(){
            section_insert()
               section_start("", 741095123)!
               /*Dat:eyJzIjoiWHBhdGhUZXh0IiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IlRleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbU0FWRURfQ09OVEVOVF1dIiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiVmFsdWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Ii8vZGl2W2NvbnRhaW5zKEBjbGFzcyxcImNhcmQtYm9keVwiKV0vLypbY29udGFpbnModGV4dCgpLFwiQmFsYW5jZVwiKSBvciBjb250YWlucyh0ZXh0KCksXCJFVEggQkFMQU5DRVwiKSBdL2ZvbGxvd2luZy1zaWJsaW5nOjpkaXYiLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJTYXZlIiwidHlwZSI6InZhciIsImRhdGEiOiJYUEFUSF9URVhUIn0seyJpZCI6IkNoZWNrIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6dHJ1ZX1dfQ==*/
               html_parser_xpath_parse(VAR_SAVED_CONTENT)
               if((true) && !html_parser_xpath_exist("//div[contains(@class,\u0022card-body\u0022)]//*[contains(text(),\u0022Balance\u0022) or contains(text(),\u0022ETH BALANCE\u0022) ]/following-sibling::div"))
               fail("Can't resolve query " + "//div[contains(@class,\u0022card-body\u0022)]//*[contains(text(),\u0022Balance\u0022) or contains(text(),\u0022ETH BALANCE\u0022) ]/following-sibling::div");
               VAR_XPATH_TEXT = html_parser_xpath_text("//div[contains(@class,\u0022card-body\u0022)]//*[contains(text(),\u0022Balance\u0022) or contains(text(),\u0022ETH BALANCE\u0022) ]/following-sibling::div")
               section_end()!

               section_start("", 945322785)!
               /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbQ09JTl9GT1JfV09SS11dID0rKFtbWFBBVEhfVEVYVF1dLnNwbGl0KFwiIFwiKVswXS5yZXBsYWNlKC8sL2csIFwiXCIpKSIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
               VAR_COIN_FOR_WORK =+(VAR_XPATH_TEXT.split(" ")[0].replace(/,/g, ""))
               section_end()!

               section_start("", 716679121)!
               /*Dat:eyJzIjoic2V0dmFyaWFibGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2V0VmFyaWFibGVOYW1lIiwidHlwZSI6InZhciIsImRhdGEiOiJUQVNLX1NJWkUifSx7ImlkIjoiU2V0VmFyaWFibGVWYWx1ZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiTWF0aC5mbG9vcihbW1BFUkNFTlRdXS8xMDAqW1tDT0lOX0ZPUl9XT1JLXV0qW1tUQVNLX1NJWkVfUEVSQ0VOVF1dLzEwMCoxMDAwMDApLzEwMDAwMCIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
               VAR_TASK_SIZE = Math.floor(VAR_PERCENT/100*VAR_COIN_FOR_WORK*VAR_TASK_SIZE_PERCENT/100*100000)/100000
               section_end()!

            })!
            section_end()!

            section_start("\u007b\u0022n\u0022:\u0022Else\u0022\u007d", 574976228)!
            /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJyb2xlIjoic2xhdmUiLCJzbGF2ZSI6NTc0OTc2MjI4LCJtYXN0ZXIiOjQ0NzQwODkzOCwiaWZfdmFyIjoiX2N5Y2xlX3BhcmFtcygpLmlmX2Vsc2UiLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfQ09JTl9JTl1dPT1cIkVUSFwiIHx8IFtbVEFTS19DT0lOX0lOXV09PVwiV0VUSFwiIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOnRydWV9XX0=*/
            _if(!_cycle_params().if_else,function(){
            section_insert()
               section_start("", 726346712)!
               /*Dat:eyJzIjoiaWdub3JlZXJyb3JzIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbXX0=*/
               _call(function()
               {
               _on_fail(function(){
               VAR_LAST_ERROR = _result()
               VAR_ERROR_ID = ScriptWorker.GetCurrentAction()
               VAR_WAS_ERROR = false
               _break(1,true)
               })
               CYCLES.Current().RemoveLabel("function")
               section_insert()
                  section_start("", 659895395)!
                  /*Dat:eyJzIjoiWHBhdGhUZXh0IiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IlRleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbU0FWRURfQ09OVEVOVF1dIiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiVmFsdWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Ii8vbGlbY29udGFpbnMoQGNsYXNzLFwiY3VzdG9tLUJFUC0yMFwiKV0vYS9kaXYvc3Bhbltjb250YWlucyh0ZXh0KCksXCJbW1RBU0tfQ09JTl9JTl1dXCIpXSIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6IlNhdmUiLCJ0eXBlIjoidmFyIiwiZGF0YSI6IlhQQVRIX1RFWFQifSx7ImlkIjoiQ2hlY2siLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjp0cnVlfV19*/
                  html_parser_xpath_parse(VAR_SAVED_CONTENT)
                  if((true) && !html_parser_xpath_exist("//li[contains(@class,\u0022custom-BEP-20\u0022)]/a/div/span[contains(text(),\u0022" + VAR_TASK_COIN_IN + "\u0022)]"))
                  fail("Can't resolve query " + "//li[contains(@class,\u0022custom-BEP-20\u0022)]/a/div/span[contains(text(),\u0022" + VAR_TASK_COIN_IN + "\u0022)]");
                  VAR_XPATH_TEXT = html_parser_xpath_text("//li[contains(@class,\u0022custom-BEP-20\u0022)]/a/div/span[contains(text(),\u0022" + VAR_TASK_COIN_IN + "\u0022)]")
                  section_end()!

               },null)!
               section_end()!

               section_start("", 626391053)!
               /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIoW1tYUEFUSF9URVhUXV0uc3BsaXQoXCIgXCIpWzFdLnRvTG93ZXJDYXNlKCkgIT0gW1tUQVNLX0NPSU5fSU5dXS50b0xvd2VyQ2FzZSgpKSB8fCBbW1dBU19FUlJPUl1dIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
               _set_if_expression("KFtbWFBBVEhfVEVYVF1dLnNwbGl0KCIgIilbMV0udG9Mb3dlckNhc2UoKSAhPSBbW1RBU0tfQ09JTl9JTl1dLnRvTG93ZXJDYXNlKCkpIHx8IFtbV0FTX0VSUk9SXV0=");
               _if((VAR_XPATH_TEXT.split(" ")[1].toLowerCase() != VAR_TASK_COIN_IN.toLowerCase()) || VAR_WAS_ERROR,function(){
               section_insert()
                  section_start("", 510425442)!
                  /*Dat:eyJzIjoiZmFpbCIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJGYWlsTWVzc2FnZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiTm8gYmFsYW5jZSBvbiB0aGlzIG5ldHdvcmsiLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJDaGVjayIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
                  fail_user("No balance on this network",false)
                  section_end()!

               })!
               section_end()!

               section_start("", 855518591)!
               /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbQ09JTl9GT1JfV09SS11dID0rKFtbWFBBVEhfVEVYVF1dLnNwbGl0KFwiIFwiKVswXS5yZXBsYWNlKC8sL2csIFwiXCIpKSIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
               VAR_COIN_FOR_WORK =+(VAR_XPATH_TEXT.split(" ")[0].replace(/,/g, ""))
               section_end()!

               section_start("", 174458283)!
               /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbVEFTS19TSVpFXV0gPSBNYXRoLmZsb29yKFtbUEVSQ0VOVF1dLzEwMCpbW1RBU0tfU0laRV9QRVJDRU5UXV0vMTAwKltbQ09JTl9GT1JfV09SS11dKjEwMDAwMCkvMTAwMDAwIiwiY2xhc3MiOiJleHByZXNzaW9uIn1dfQ==*/
               VAR_TASK_SIZE = Math.floor(VAR_PERCENT/100*VAR_TASK_SIZE_PERCENT/100*VAR_COIN_FOR_WORK*100000)/100000
               section_end()!

            })!
            delete _cycle_params().if_else;
            section_end()!

         })!
         section_end()!

         section_start("\u007b\u0022n\u0022:\u0022avax\u0022,\u0022c\u0022:\u00224\u0022,\u0022f\u0022:true\u007d", 864836964)!
         /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfTkVUV09SS19JTl1dLnRvTG93ZXJDYXNlKCkudHJpbSgpPT1cImF2YXhcIiIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9LHsiaWQiOiJJZkVsc2UiLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjpmYWxzZX1dfQ==*/
         _set_if_expression("W1tUQVNLX05FVFdPUktfSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09ImF2YXgi");
         _if(VAR_TASK_NETWORK_IN.toLowerCase().trim()=="avax",function(){
         section_insert()
            section_start("", 412177930)!
            /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJyb2xlIjoibWFzdGVyIiwic2xhdmUiOjk1OTc3MDE5OSwibWFzdGVyIjo0MTIxNzc5MzAsImlmX3ZhciI6Il9jeWNsZV9wYXJhbXMoKS5pZl9lbHNlIiwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IklmRXhwcmVzc2lvbiIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiW1tUQVNLX0NPSU5fSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09XCJhdmF4XCIiLCJjbGFzcyI6ImV4cHJlc3Npb24ifSx7ImlkIjoiSWZFbHNlIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6dHJ1ZX1dfQ==*/
            _cycle_params().if_else = VAR_TASK_COIN_IN.toLowerCase().trim()=="avax";
            _set_if_expression("W1tUQVNLX0NPSU5fSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09ImF2YXgi");
            _if(_cycle_params().if_else,function(){
            section_insert()
               section_start("", 964243088)!
               /*Dat:eyJzIjoiWHBhdGhUZXh0IiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IlRleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbU0FWRURfQ09OVEVOVF1dIiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiVmFsdWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Ii8vZGl2W2NvbnRhaW5zKEBjbGFzcyxcImNhcmQtYm9keVwiKV0vLypbY29udGFpbnModGV4dCgpLFwiQmFsYW5jZVwiKSBvciBjb250YWlucyh0ZXh0KCksXCJFVEggQkFMQU5DRVwiKSBdL2ZvbGxvd2luZy1zaWJsaW5nOjpkaXYiLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJTYXZlIiwidHlwZSI6InZhciIsImRhdGEiOiJYUEFUSF9URVhUIn0seyJpZCI6IkNoZWNrIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6dHJ1ZX1dfQ==*/
               html_parser_xpath_parse(VAR_SAVED_CONTENT)
               if((true) && !html_parser_xpath_exist("//div[contains(@class,\u0022card-body\u0022)]//*[contains(text(),\u0022Balance\u0022) or contains(text(),\u0022ETH BALANCE\u0022) ]/following-sibling::div"))
               fail("Can't resolve query " + "//div[contains(@class,\u0022card-body\u0022)]//*[contains(text(),\u0022Balance\u0022) or contains(text(),\u0022ETH BALANCE\u0022) ]/following-sibling::div");
               VAR_XPATH_TEXT = html_parser_xpath_text("//div[contains(@class,\u0022card-body\u0022)]//*[contains(text(),\u0022Balance\u0022) or contains(text(),\u0022ETH BALANCE\u0022) ]/following-sibling::div")
               section_end()!

               section_start("", 178734348)!
               /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbQ09JTl9GT1JfV09SS11dID0rKFtbWFBBVEhfVEVYVF1dLnNwbGl0KFwiIFwiKVswXS5yZXBsYWNlKC8sL2csIFwiXCIpKSIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
               VAR_COIN_FOR_WORK =+(VAR_XPATH_TEXT.split(" ")[0].replace(/,/g, ""))
               section_end()!

               section_start("", 162087041)!
               /*Dat:eyJzIjoic2V0dmFyaWFibGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2V0VmFyaWFibGVOYW1lIiwidHlwZSI6InZhciIsImRhdGEiOiJUQVNLX1NJWkUifSx7ImlkIjoiU2V0VmFyaWFibGVWYWx1ZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiTWF0aC5mbG9vcihbW1BFUkNFTlRdXS8xMDAqW1tDT0lOX0ZPUl9XT1JLXV0qW1tUQVNLX1NJWkVfUEVSQ0VOVF1dLzEwMCoxMDAwMDApLzEwMDAwMCIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
               VAR_TASK_SIZE = Math.floor(VAR_PERCENT/100*VAR_COIN_FOR_WORK*VAR_TASK_SIZE_PERCENT/100*100000)/100000
               section_end()!

            })!
            section_end()!

            section_start("\u007b\u0022n\u0022:\u0022Else\u0022\u007d", 959770199)!
            /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJyb2xlIjoic2xhdmUiLCJzbGF2ZSI6OTU5NzcwMTk5LCJtYXN0ZXIiOjQxMjE3NzkzMCwiaWZfdmFyIjoiX2N5Y2xlX3BhcmFtcygpLmlmX2Vsc2UiLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfQ09JTl9JTl1dPT1cIkVUSFwiIHx8IFtbVEFTS19DT0lOX0lOXV09PVwiV0VUSFwiIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOnRydWV9XX0=*/
            _if(!_cycle_params().if_else,function(){
            section_insert()
               section_start("", 970559855)!
               /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ImlmIChbW1RBU0tfQ09JTl9JTl1dPT1cIlVTRFRcIikge1xyXG4gICAgW1tUQVNLX0NPSU5fSU5dXT09XCJVU0R0XCJcclxufSIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
               if (VAR_TASK_COIN_IN=="USDT") {
               VAR_TASK_COIN_IN=="USDt"
               }
               section_end()!

               section_start("", 77005254)!
               /*Dat:eyJzIjoiaWdub3JlZXJyb3JzIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbXX0=*/
               _call(function()
               {
               _on_fail(function(){
               VAR_LAST_ERROR = _result()
               VAR_ERROR_ID = ScriptWorker.GetCurrentAction()
               VAR_WAS_ERROR = false
               _break(1,true)
               })
               CYCLES.Current().RemoveLabel("function")
               section_insert()
                  section_start("", 405947809)!
                  /*Dat:eyJzIjoiWHBhdGhUZXh0IiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IlRleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbU0FWRURfQ09OVEVOVF1dIiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiVmFsdWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Ii8vbGlbY29udGFpbnMoQGNsYXNzLFwiY3VzdG9tLUVSQy0yMFwiKV0vYS9kaXYvc3Bhbltjb250YWlucyh0ZXh0KCksXCJbW1RBU0tfQ09JTl9JTl1dXCIpXSIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6IlNhdmUiLCJ0eXBlIjoidmFyIiwiZGF0YSI6IlhQQVRIX1RFWFQifSx7ImlkIjoiQ2hlY2siLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjp0cnVlfV19*/
                  html_parser_xpath_parse(VAR_SAVED_CONTENT)
                  if((true) && !html_parser_xpath_exist("//li[contains(@class,\u0022custom-ERC-20\u0022)]/a/div/span[contains(text(),\u0022" + VAR_TASK_COIN_IN + "\u0022)]"))
                  fail("Can't resolve query " + "//li[contains(@class,\u0022custom-ERC-20\u0022)]/a/div/span[contains(text(),\u0022" + VAR_TASK_COIN_IN + "\u0022)]");
                  VAR_XPATH_TEXT = html_parser_xpath_text("//li[contains(@class,\u0022custom-ERC-20\u0022)]/a/div/span[contains(text(),\u0022" + VAR_TASK_COIN_IN + "\u0022)]")
                  section_end()!

               },null)!
               section_end()!

               section_start("", 51691683)!
               /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIoW1tYUEFUSF9URVhUXV0uc3BsaXQoXCIgXCIpWzFdLnRvTG93ZXJDYXNlKCkgIT0gW1tUQVNLX0NPSU5fSU5dXS50b0xvd2VyQ2FzZSgpKSB8fCBbW1dBU19FUlJPUl1dIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
               _set_if_expression("KFtbWFBBVEhfVEVYVF1dLnNwbGl0KCIgIilbMV0udG9Mb3dlckNhc2UoKSAhPSBbW1RBU0tfQ09JTl9JTl1dLnRvTG93ZXJDYXNlKCkpIHx8IFtbV0FTX0VSUk9SXV0=");
               _if((VAR_XPATH_TEXT.split(" ")[1].toLowerCase() != VAR_TASK_COIN_IN.toLowerCase()) || VAR_WAS_ERROR,function(){
               section_insert()
                  section_start("", 317760682)!
                  /*Dat:eyJzIjoiZmFpbCIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJGYWlsTWVzc2FnZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiTm8gYmFsYW5jZSBvbiB0aGlzIG5ldHdvcmsiLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJDaGVjayIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
                  fail_user("No balance on this network",false)
                  section_end()!

               })!
               section_end()!

               section_start("", 648294838)!
               /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbQ09JTl9GT1JfV09SS11dID0rKFtbWFBBVEhfVEVYVF1dLnNwbGl0KFwiIFwiKVswXS5yZXBsYWNlKC8sL2csIFwiXCIpKSIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
               VAR_COIN_FOR_WORK =+(VAR_XPATH_TEXT.split(" ")[0].replace(/,/g, ""))
               section_end()!

               section_start("", 802630948)!
               /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbVEFTS19TSVpFXV0gPSBNYXRoLmZsb29yKFtbUEVSQ0VOVF1dLzEwMCpbW1RBU0tfU0laRV9QRVJDRU5UXV0vMTAwKltbQ09JTl9GT1JfV09SS11dKjEwMDAwMCkvMTAwMDAwIiwiY2xhc3MiOiJleHByZXNzaW9uIn1dfQ==*/
               VAR_TASK_SIZE = Math.floor(VAR_PERCENT/100*VAR_TASK_SIZE_PERCENT/100*VAR_COIN_FOR_WORK*100000)/100000
               section_end()!

            })!
            delete _cycle_params().if_else;
            section_end()!

         })!
         section_end()!

         section_start("\u007b\u0022n\u0022:\u0022matic\u0022,\u0022c\u0022:\u00224\u0022,\u0022f\u0022:true\u007d", 973159264)!
         /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfTkVUV09SS19JTl1dLnRvTG93ZXJDYXNlKCkudHJpbSgpPT1cIm1hdGljXCIiLCJjbGFzcyI6ImV4cHJlc3Npb24ifSx7ImlkIjoiSWZFbHNlIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9XX0=*/
         _set_if_expression("W1tUQVNLX05FVFdPUktfSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09Im1hdGljIg==");
         _if(VAR_TASK_NETWORK_IN.toLowerCase().trim()=="matic",function(){
         section_insert()
            section_start("", 9103899)!
            /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJyb2xlIjoibWFzdGVyIiwic2xhdmUiOjM3MDk1Mzc2NiwibWFzdGVyIjo5MTAzODk5LCJpZl92YXIiOiJfY3ljbGVfcGFyYW1zKCkuaWZfZWxzZSIsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJJZkV4cHJlc3Npb24iLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbVEFTS19DT0lOX0lOXV0udG9Mb3dlckNhc2UoKS50cmltKCk9PVwibWF0aWNcIiIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9LHsiaWQiOiJJZkVsc2UiLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjp0cnVlfV19*/
            _cycle_params().if_else = VAR_TASK_COIN_IN.toLowerCase().trim()=="matic";
            _set_if_expression("W1tUQVNLX0NPSU5fSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09Im1hdGljIg==");
            _if(_cycle_params().if_else,function(){
            section_insert()
               section_start("", 763117363)!
               /*Dat:eyJzIjoiWHBhdGhUZXh0IiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IlRleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbU0FWRURfQ09OVEVOVF1dIiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiVmFsdWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Ii8vZGl2W2NvbnRhaW5zKEBjbGFzcyxcImNhcmQtYm9keVwiKV0vLypbY29udGFpbnModGV4dCgpLFwiQmFsYW5jZVwiKSBvciBjb250YWlucyh0ZXh0KCksXCJFVEggQkFMQU5DRVwiKSBdL2ZvbGxvd2luZy1zaWJsaW5nOjpkaXYiLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJTYXZlIiwidHlwZSI6InZhciIsImRhdGEiOiJYUEFUSF9URVhUIn0seyJpZCI6IkNoZWNrIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6dHJ1ZX1dfQ==*/
               html_parser_xpath_parse(VAR_SAVED_CONTENT)
               if((true) && !html_parser_xpath_exist("//div[contains(@class,\u0022card-body\u0022)]//*[contains(text(),\u0022Balance\u0022) or contains(text(),\u0022ETH BALANCE\u0022) ]/following-sibling::div"))
               fail("Can't resolve query " + "//div[contains(@class,\u0022card-body\u0022)]//*[contains(text(),\u0022Balance\u0022) or contains(text(),\u0022ETH BALANCE\u0022) ]/following-sibling::div");
               VAR_XPATH_TEXT = html_parser_xpath_text("//div[contains(@class,\u0022card-body\u0022)]//*[contains(text(),\u0022Balance\u0022) or contains(text(),\u0022ETH BALANCE\u0022) ]/following-sibling::div")
               section_end()!

               section_start("", 635173880)!
               /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbQ09JTl9GT1JfV09SS11dID0rKFtbWFBBVEhfVEVYVF1dLnNwbGl0KFwiIFwiKVswXS5yZXBsYWNlKC8sL2csIFwiXCIpKSIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
               VAR_COIN_FOR_WORK =+(VAR_XPATH_TEXT.split(" ")[0].replace(/,/g, ""))
               section_end()!

               section_start("", 785590510)!
               /*Dat:eyJzIjoic2V0dmFyaWFibGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2V0VmFyaWFibGVOYW1lIiwidHlwZSI6InZhciIsImRhdGEiOiJUQVNLX1NJWkUifSx7ImlkIjoiU2V0VmFyaWFibGVWYWx1ZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiTWF0aC5mbG9vcihbW1BFUkNFTlRdXS8xMDAqW1tDT0lOX0ZPUl9XT1JLXV0qW1tUQVNLX1NJWkVfUEVSQ0VOVF1dLzEwMCoxMDAwMDApLzEwMDAwMCIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
               VAR_TASK_SIZE = Math.floor(VAR_PERCENT/100*VAR_COIN_FOR_WORK*VAR_TASK_SIZE_PERCENT/100*100000)/100000
               section_end()!

            })!
            section_end()!

            section_start("\u007b\u0022n\u0022:\u0022Else\u0022\u007d", 370953766)!
            /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJyb2xlIjoic2xhdmUiLCJzbGF2ZSI6MzcwOTUzNzY2LCJtYXN0ZXIiOjkxMDM4OTksImlmX3ZhciI6Il9jeWNsZV9wYXJhbXMoKS5pZl9lbHNlIiwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IklmRXhwcmVzc2lvbiIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiW1tUQVNLX0NPSU5fSU5dXT09XCJFVEhcIiB8fCBbW1RBU0tfQ09JTl9JTl1dPT1cIldFVEhcIiIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9LHsiaWQiOiJJZkVsc2UiLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjp0cnVlfV19*/
            _if(!_cycle_params().if_else,function(){
            section_insert()
               section_start("", 493923227)!
               /*Dat:eyJzIjoiaWdub3JlZXJyb3JzIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbXX0=*/
               _call(function()
               {
               _on_fail(function(){
               VAR_LAST_ERROR = _result()
               VAR_ERROR_ID = ScriptWorker.GetCurrentAction()
               VAR_WAS_ERROR = false
               _break(1,true)
               })
               CYCLES.Current().RemoveLabel("function")
               section_insert()
                  section_start("", 71124312)!
                  /*Dat:eyJzIjoiWHBhdGhUZXh0IiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IlRleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbU0FWRURfQ09OVEVOVF1dIiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiVmFsdWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Ii8vbGlbY29udGFpbnMoQGNsYXNzLFwiY3VzdG9tLUVSQy0yMFwiKV0vYS9kaXYvc3Bhbltjb250YWlucyh0ZXh0KCksXCJbW1RBU0tfQ09JTl9JTl1dXCIpXSIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6IlNhdmUiLCJ0eXBlIjoidmFyIiwiZGF0YSI6IlhQQVRIX1RFWFQifSx7ImlkIjoiQ2hlY2siLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjp0cnVlfV19*/
                  html_parser_xpath_parse(VAR_SAVED_CONTENT)
                  if((true) && !html_parser_xpath_exist("//li[contains(@class,\u0022custom-ERC-20\u0022)]/a/div/span[contains(text(),\u0022" + VAR_TASK_COIN_IN + "\u0022)]"))
                  fail("Can't resolve query " + "//li[contains(@class,\u0022custom-ERC-20\u0022)]/a/div/span[contains(text(),\u0022" + VAR_TASK_COIN_IN + "\u0022)]");
                  VAR_XPATH_TEXT = html_parser_xpath_text("//li[contains(@class,\u0022custom-ERC-20\u0022)]/a/div/span[contains(text(),\u0022" + VAR_TASK_COIN_IN + "\u0022)]")
                  section_end()!

               },null)!
               section_end()!

               section_start("", 840330465)!
               /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIoW1tYUEFUSF9URVhUXV0uc3BsaXQoXCIgXCIpWzFdLnRvTG93ZXJDYXNlKCkgIT0gW1tUQVNLX0NPSU5fSU5dXS50b0xvd2VyQ2FzZSgpKSB8fCBbW1dBU19FUlJPUl1dIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
               _set_if_expression("KFtbWFBBVEhfVEVYVF1dLnNwbGl0KCIgIilbMV0udG9Mb3dlckNhc2UoKSAhPSBbW1RBU0tfQ09JTl9JTl1dLnRvTG93ZXJDYXNlKCkpIHx8IFtbV0FTX0VSUk9SXV0=");
               _if((VAR_XPATH_TEXT.split(" ")[1].toLowerCase() != VAR_TASK_COIN_IN.toLowerCase()) || VAR_WAS_ERROR,function(){
               section_insert()
                  section_start("", 567691170)!
                  /*Dat:eyJzIjoiZmFpbCIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJGYWlsTWVzc2FnZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiTm8gYmFsYW5jZSBvbiB0aGlzIG5ldHdvcmsiLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJDaGVjayIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
                  fail_user("No balance on this network",false)
                  section_end()!

               })!
               section_end()!

               section_start("", 379140695)!
               /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbQ09JTl9GT1JfV09SS11dID0rKFtbWFBBVEhfVEVYVF1dLnNwbGl0KFwiIFwiKVswXS5yZXBsYWNlKC8sL2csIFwiXCIpKSIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
               VAR_COIN_FOR_WORK =+(VAR_XPATH_TEXT.split(" ")[0].replace(/,/g, ""))
               section_end()!

               section_start("", 937471410)!
               /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbVEFTS19TSVpFXV0gPSBNYXRoLmZsb29yKFtbUEVSQ0VOVF1dLzEwMCpbW1RBU0tfU0laRV9QRVJDRU5UXV0vMTAwKltbQ09JTl9GT1JfV09SS11dKjEwMDAwMCkvMTAwMDAwIiwiY2xhc3MiOiJleHByZXNzaW9uIn1dfQ==*/
               VAR_TASK_SIZE = Math.floor(VAR_PERCENT/100*VAR_TASK_SIZE_PERCENT/100*VAR_COIN_FOR_WORK*100000)/100000
               section_end()!

            })!
            delete _cycle_params().if_else;
            section_end()!

         })!
         section_end()!

         section_start("\u007b\u0022n\u0022:\u0022ftm\u0022,\u0022c\u0022:\u00224\u0022,\u0022f\u0022:true\u007d", 495074196)!
         /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfTkVUV09SS19JTl1dLnRvTG93ZXJDYXNlKCkudHJpbSgpPT1cImZ0bVwiIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
         _set_if_expression("W1tUQVNLX05FVFdPUktfSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09ImZ0bSI=");
         _if(VAR_TASK_NETWORK_IN.toLowerCase().trim()=="ftm",function(){
         section_insert()
            section_start("", 856286932)!
            /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJyb2xlIjoibWFzdGVyIiwic2xhdmUiOjQxMjgwMjg2LCJtYXN0ZXIiOjg1NjI4NjkzMiwiaWZfdmFyIjoiX2N5Y2xlX3BhcmFtcygpLmlmX2Vsc2UiLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfQ09JTl9JTl1dLnRvTG93ZXJDYXNlKCkudHJpbSgpPT1cImZ0bVwiIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOnRydWV9XX0=*/
            _cycle_params().if_else = VAR_TASK_COIN_IN.toLowerCase().trim()=="ftm";
            _set_if_expression("W1tUQVNLX0NPSU5fSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09ImZ0bSI=");
            _if(_cycle_params().if_else,function(){
            section_insert()
               section_start("", 770027109)!
               /*Dat:eyJzIjoiWHBhdGhUZXh0IiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IlRleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbU0FWRURfQ09OVEVOVF1dIiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiVmFsdWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Ii8vZGl2W2NvbnRhaW5zKEBjbGFzcyxcImNhcmQtYm9keVwiKV0vLypbY29udGFpbnModGV4dCgpLFwiQmFsYW5jZVwiKSBvciBjb250YWlucyh0ZXh0KCksXCJFVEggQkFMQU5DRVwiKSBdL2ZvbGxvd2luZy1zaWJsaW5nOjpkaXYiLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJTYXZlIiwidHlwZSI6InZhciIsImRhdGEiOiJYUEFUSF9URVhUIn0seyJpZCI6IkNoZWNrIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6dHJ1ZX1dfQ==*/
               html_parser_xpath_parse(VAR_SAVED_CONTENT)
               if((true) && !html_parser_xpath_exist("//div[contains(@class,\u0022card-body\u0022)]//*[contains(text(),\u0022Balance\u0022) or contains(text(),\u0022ETH BALANCE\u0022) ]/following-sibling::div"))
               fail("Can't resolve query " + "//div[contains(@class,\u0022card-body\u0022)]//*[contains(text(),\u0022Balance\u0022) or contains(text(),\u0022ETH BALANCE\u0022) ]/following-sibling::div");
               VAR_XPATH_TEXT = html_parser_xpath_text("//div[contains(@class,\u0022card-body\u0022)]//*[contains(text(),\u0022Balance\u0022) or contains(text(),\u0022ETH BALANCE\u0022) ]/following-sibling::div")
               section_end()!

               section_start("", 860122665)!
               /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbQ09JTl9GT1JfV09SS11dID0rKFtbWFBBVEhfVEVYVF1dLnNwbGl0KFwiIFwiKVswXS5yZXBsYWNlKC8sL2csIFwiXCIpKSIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
               VAR_COIN_FOR_WORK =+(VAR_XPATH_TEXT.split(" ")[0].replace(/,/g, ""))
               section_end()!

               section_start("", 502676250)!
               /*Dat:eyJzIjoic2V0dmFyaWFibGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2V0VmFyaWFibGVOYW1lIiwidHlwZSI6InZhciIsImRhdGEiOiJUQVNLX1NJWkUifSx7ImlkIjoiU2V0VmFyaWFibGVWYWx1ZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiTWF0aC5mbG9vcihbW1BFUkNFTlRdXS8xMDAqW1tDT0lOX0ZPUl9XT1JLXV0qW1tUQVNLX1NJWkVfUEVSQ0VOVF1dLzEwMCoxMDAwMDApLzEwMDAwMCIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
               VAR_TASK_SIZE = Math.floor(VAR_PERCENT/100*VAR_COIN_FOR_WORK*VAR_TASK_SIZE_PERCENT/100*100000)/100000
               section_end()!

            })!
            section_end()!

            section_start("\u007b\u0022n\u0022:\u0022Else\u0022\u007d", 41280286)!
            /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJyb2xlIjoic2xhdmUiLCJzbGF2ZSI6NDEyODAyODYsIm1hc3RlciI6ODU2Mjg2OTMyLCJpZl92YXIiOiJfY3ljbGVfcGFyYW1zKCkuaWZfZWxzZSIsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJJZkV4cHJlc3Npb24iLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbVEFTS19DT0lOX0lOXV09PVwiRVRIXCIgfHwgW1tUQVNLX0NPSU5fSU5dXT09XCJXRVRIXCIiLCJjbGFzcyI6ImV4cHJlc3Npb24ifSx7ImlkIjoiSWZFbHNlIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6dHJ1ZX1dfQ==*/
            _if(!_cycle_params().if_else,function(){
            section_insert()
               section_start("", 627852496)!
               /*Dat:eyJzIjoiaWdub3JlZXJyb3JzIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbXX0=*/
               _call(function()
               {
               _on_fail(function(){
               VAR_LAST_ERROR = _result()
               VAR_ERROR_ID = ScriptWorker.GetCurrentAction()
               VAR_WAS_ERROR = false
               _break(1,true)
               })
               CYCLES.Current().RemoveLabel("function")
               section_insert()
                  section_start("", 519511769)!
                  /*Dat:eyJzIjoiWHBhdGhUZXh0IiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IlRleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbU0FWRURfQ09OVEVOVF1dIiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiVmFsdWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Ii8vbGlbY29udGFpbnMoQGNsYXNzLFwiY3VzdG9tLUVSQy0yMFwiKV0vYS9kaXYvc3Bhbltjb250YWlucyh0ZXh0KCksXCJbW1RBU0tfQ09JTl9JTl1dXCIpXSIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6IlNhdmUiLCJ0eXBlIjoidmFyIiwiZGF0YSI6IlhQQVRIX1RFWFQifSx7ImlkIjoiQ2hlY2siLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjp0cnVlfV19*/
                  html_parser_xpath_parse(VAR_SAVED_CONTENT)
                  if((true) && !html_parser_xpath_exist("//li[contains(@class,\u0022custom-ERC-20\u0022)]/a/div/span[contains(text(),\u0022" + VAR_TASK_COIN_IN + "\u0022)]"))
                  fail("Can't resolve query " + "//li[contains(@class,\u0022custom-ERC-20\u0022)]/a/div/span[contains(text(),\u0022" + VAR_TASK_COIN_IN + "\u0022)]");
                  VAR_XPATH_TEXT = html_parser_xpath_text("//li[contains(@class,\u0022custom-ERC-20\u0022)]/a/div/span[contains(text(),\u0022" + VAR_TASK_COIN_IN + "\u0022)]")
                  section_end()!

               },null)!
               section_end()!

               section_start("", 294326673)!
               /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIoW1tYUEFUSF9URVhUXV0uc3BsaXQoXCIgXCIpWzFdLnRvTG93ZXJDYXNlKCkgIT0gW1tUQVNLX0NPSU5fSU5dXS50b0xvd2VyQ2FzZSgpKSB8fCBbW1dBU19FUlJPUl1dIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
               _set_if_expression("KFtbWFBBVEhfVEVYVF1dLnNwbGl0KCIgIilbMV0udG9Mb3dlckNhc2UoKSAhPSBbW1RBU0tfQ09JTl9JTl1dLnRvTG93ZXJDYXNlKCkpIHx8IFtbV0FTX0VSUk9SXV0=");
               _if((VAR_XPATH_TEXT.split(" ")[1].toLowerCase() != VAR_TASK_COIN_IN.toLowerCase()) || VAR_WAS_ERROR,function(){
               section_insert()
                  section_start("", 650337094)!
                  /*Dat:eyJzIjoiZmFpbCIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJGYWlsTWVzc2FnZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiTm8gYmFsYW5jZSBvbiB0aGlzIG5ldHdvcmsiLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJDaGVjayIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
                  fail_user("No balance on this network",false)
                  section_end()!

               })!
               section_end()!

               section_start("", 948650737)!
               /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbQ09JTl9GT1JfV09SS11dID0rKFtbWFBBVEhfVEVYVF1dLnNwbGl0KFwiIFwiKVswXS5yZXBsYWNlKC8sL2csIFwiXCIpKSIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
               VAR_COIN_FOR_WORK =+(VAR_XPATH_TEXT.split(" ")[0].replace(/,/g, ""))
               section_end()!

               section_start("", 715357080)!
               /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbVEFTS19TSVpFXV0gPSBNYXRoLmZsb29yKFtbUEVSQ0VOVF1dLzEwMCpbW1RBU0tfU0laRV9QRVJDRU5UXV0vMTAwKltbQ09JTl9GT1JfV09SS11dKjEwMDAwMCkvMTAwMDAwIiwiY2xhc3MiOiJleHByZXNzaW9uIn1dfQ==*/
               VAR_TASK_SIZE = Math.floor(VAR_PERCENT/100*VAR_TASK_SIZE_PERCENT/100*VAR_COIN_FOR_WORK*100000)/100000
               section_end()!

            })!
            delete _cycle_params().if_else;
            section_end()!

         })!
         section_end()!

         section_start("\u007b\u0022n\u0022:\u0022apt\u0022,\u0022c\u0022:\u00224\u0022,\u0022f\u0022:true\u007d", 38612139)!
         /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfTkVUV09SS19JTl1dLnRvTG93ZXJDYXNlKCkudHJpbSgpPT1cImFwdFwiIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
         _set_if_expression("W1tUQVNLX05FVFdPUktfSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09ImFwdCI=");
         _if(VAR_TASK_NETWORK_IN.toLowerCase().trim()=="apt",function(){
         section_insert()
            section_start("", 137646358)!
            /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IlxyXG52YXIgZGF0YSA9IEpTT04ucGFyc2UoW1tTQVZFRF9DT05URU5UXV0pO1xyXG5cclxudmFyIEFtb3VudCwgZGVjaW1hbHMgPSAwO1xyXG52YXIgUmVhZGFibGVBbW91bnQgPSBmYWxzZVxyXG5sb2coQW1vdW50KVxyXG5mb3IgKHZhciBpID0gMDsgaSA8IGRhdGEuZGF0YS5jdXJyZW50X2NvaW5fYmFsYW5jZXMubGVuZ3RoOyBpKyspIHtcclxuICB2YXIgY29pbiA9IGRhdGEuZGF0YS5jdXJyZW50X2NvaW5fYmFsYW5jZXNbaV07XHJcbiAgaWYgKGNvaW4uY29pbl9pbmZvLnN5bWJvbCA9PSBbW1RBU0tfQ09JTl9JTl1dKSB7XHJcbiAgICBBbW91bnQgPSBjb2luLmFtb3VudDtcclxuICAgIGRlY2ltYWxzID0gY29pbi5jb2luX2luZm8uZGVjaW1hbHM7XHJcbiAgICBicmVhaztcclxuICB9XHJcbn1cclxuXHJcblJlYWRhYmxlQW1vdW50ID0gQW1vdW50IC8gTWF0aC5wb3coMTAsIGRlY2ltYWxzKTtcclxuXHJcbltbQ09JTl9GT1JfV09SS11dID0gUmVhZGFibGVBbW91bnQiLCJjbGFzcyI6ImV4cHJlc3Npb24ifV19*/
            var data = JSON.parse(VAR_SAVED_CONTENT);
            var Amount, decimals = 0;
            var ReadableAmount = false
            log(Amount)
            for (var i = 0; i < data.data.current_coin_balances.length; i++) {
            var coin = data.data.current_coin_balances[i];
            if (coin.coin_info.symbol == VAR_TASK_COIN_IN) {
            Amount = coin.amount;
            decimals = coin.coin_info.decimals;
            break;
            }
            }
            ReadableAmount = Amount / Math.pow(10, decimals);
            VAR_COIN_FOR_WORK = ReadableAmount
            section_end()!

            section_start("", 41854730)!
            /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJpc05hTihbW0NPSU5fRk9SX1dPUktdXSkiLCJjbGFzcyI6ImV4cHJlc3Npb24ifSx7ImlkIjoiSWZFbHNlIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9XX0=*/
            _set_if_expression("aXNOYU4oW1tDT0lOX0ZPUl9XT1JLXV0p");
            _if(isNaN(VAR_COIN_FOR_WORK),function(){
            section_insert()
               section_start("", 376392699)!
               /*Dat:eyJzIjoibG9nIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkxvZ1RleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ItC90LXRgiDRgtC+0LrQtdC90LAgW1tUQVNLX0NPSU5fSU5dXSIsImNsYXNzIjoic3RyaW5nIn1dfQ==*/
               log("нет токена " + VAR_TASK_COIN_IN)
               section_end()!

            })!
            section_end()!

            section_start("", 611579333)!
            /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbVEFTS19TSVpFXV0gPSBNYXRoLmZsb29yKFtbUEVSQ0VOVF1dLzEwMCpbW1RBU0tfU0laRV9QRVJDRU5UXV0vMTAwKltbQ09JTl9GT1JfV09SS11dKjEwMDAwMCkvMTAwMDAwIiwiY2xhc3MiOiJleHByZXNzaW9uIn1dfQ==*/
            VAR_TASK_SIZE = Math.floor(VAR_PERCENT/100*VAR_TASK_SIZE_PERCENT/100*VAR_COIN_FOR_WORK*100000)/100000
            section_end()!

         })!
         section_end()!

      })!
      section_end()!

   }
   section_end()!

   section_start("\u007b\u0022n\u0022:\u0022check_gas_price\u0022,\u0022fd\u0022:\u0022\u007b\u005c\u0022fd\u005c\u0022:\u005c\u0022\u005c\u0022,\u005c\u0022hr\u005c\u0022:false,\u005c\u0022rd\u005c\u0022:\u005c\u0022\u005c\u0022,\u005c\u0022rv\u005c\u0022:\u005c\u0022FUNCTION_RESULT\u005c\u0022,\u005c\u0022p\u005c\u0022:[]\u007d\u0022\u007d", 17342563)!
   function check_gas_price()
   {
   section_insert()
      section_start("", 506784316)!
      /*Dat:eyJzIjoiaWdub3JlZXJyb3JzIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbXX0=*/
      _call(function()
      {
      _on_fail(function(){
      VAR_LAST_ERROR = _result()
      VAR_ERROR_ID = ScriptWorker.GetCurrentAction()
      VAR_WAS_ERROR = false
      _break(1,true)
      })
      CYCLES.Current().RemoveLabel("function")
      section_insert()
         section_start("\u007b\u0022n\u0022:\u0022ETH gasPrice\u0022,\u0022c\u0022:\u00225\u0022\u007d", 247240948)!
         /*Dat:eyJzIjoiaHR0cGNsaWVudHBvc3QiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiVmFsdWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbR0FTX0VORFBPSU5UXV0iLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJIZWFkZXJzIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIiLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJDaGVjazIiLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjpmYWxzZX0seyJpZCI6IlBvc3ROYW1lIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIiLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJQb3N0VmFsdWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IiIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6IlBvc3REYXRhQXJyYXkiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IiIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9LHsiaWQiOiJDb250ZW50VHlwZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoidXJsZW5jb2RlIiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiUG9zdERhdGFSYXciLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IntcImlkXCI6MSxcImpzb25ycGNcIjpcIjIuMFwiLFwibWV0aG9kXCI6XCJldGhfZ2FzUHJpY2VcIn0iLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJDb250ZW50VHlwZVJhdyIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiYXBwbGljYXRpb24vanNvbiIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6IkVuY29kaW5nIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJVVEYtOCIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6Ik1ldGhvZCIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiUE9TVCIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6IkNoZWNrIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6dHJ1ZX1dfQ==*/
         _switch_http_client_main()
         http_client_post(VAR_GAS_ENDPOINT, ["data", "\u007b\u0022id\u0022:1,\u0022jsonrpc\u0022:\u00222.0\u0022,\u0022method\u0022:\u0022eth_gasPrice\u0022\u007d"], {"content-type":"custom/" + ("application/json"), "encoding":("UTF-8"), "method":("POST"),headers:("")})!
         section_end()!

         section_start("", 515649036)!
         /*Dat:eyJzIjoiaHR0cGNsaWVudGNvbnRlbnQiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2F2ZSIsInR5cGUiOiJ2YXIiLCJkYXRhIjoiU0FWRURfQ09OVEVOVCJ9LHsiaWQiOiJFbmNvZGluZyIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiYXV0byIsImNsYXNzIjoic3RyaW5nIn1dfQ==*/
         _switch_http_client_main()
         VAR_SAVED_CONTENT = http_client_encoded_content("auto")
         section_end()!

         section_start("", 648785043)!
         /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbR0FTX1BSSUNFXV0gPXBhcnNlSW50KEpTT04ucGFyc2UoW1tTQVZFRF9DT05URU5UXV0pLnJlc3VsdC5zcGxpdChcInhcIilbMV0sMTYpKjFlLTkiLCJjbGFzcyI6ImV4cHJlc3Npb24ifV19*/
         VAR_GAS_PRICE =parseInt(JSON.parse(VAR_SAVED_CONTENT).result.split("x")[1],16)*1e-9
         section_end()!

         section_start("", 916533053)!
         /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJ7e9Cb0L7QsyDQv9GA0Lgg0L7QttC40LTQsNC90LjQuCDQs9Cw0LfQsH19ID09IFwiT25cIiIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9LHsiaWQiOiJJZkVsc2UiLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjpmYWxzZX1dfQ==*/
         RS("Лог при ожидании газа", false, false)!
         RESOURCE_568106 = _result().get()
         _set_if_expression("e3vQm9C+0LMg0L/RgNC4INC+0LbQuNC00LDQvdC40Lgg0LPQsNC30LB9fSA9PSAiT24i");
         _if(RESOURCE_568106 == "On",function(){
         section_insert()
            section_start("", 941110818)!
            /*Dat:eyJzIjoibG9nIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkxvZ1RleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ItCm0LXQvdCwINCz0LDQt9CwIFtbR0FTX1BSSUNFXV0gIiwiY2xhc3MiOiJzdHJpbmcifV19*/
            log("Цена газа " + VAR_GAS_PRICE + " ")
            section_end()!

         })!
         section_end()!

         section_start("", 382449642)!
         /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJyb2xlIjoibWFzdGVyIiwic2xhdmUiOjk3MTY5NzM5NCwibWFzdGVyIjozODI0NDk2NDIsImlmX3ZhciI6Il9jeWNsZV9wYXJhbXMoKS5pZl9lbHNlIiwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IklmRXhwcmVzc2lvbiIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiW1tUQVNLX05FVFdPUktfSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09XCJldGhcIiB8fCBbW1RBU0tfTkVUV09SS19JTl1dLnRvTG93ZXJDYXNlKCkudHJpbSgpPT1cImFyYmlcIiB8fCBbW1RBU0tfTkVUV09SS19JTl1dLnRvTG93ZXJDYXNlKCkudHJpbSgpPT1cIm9wXCIgIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOnRydWV9XX0=*/
         _cycle_params().if_else = VAR_TASK_NETWORK_IN.toLowerCase().trim()=="eth" || VAR_TASK_NETWORK_IN.toLowerCase().trim()=="arbi" || VAR_TASK_NETWORK_IN.toLowerCase().trim()=="op" ;
         _set_if_expression("W1tUQVNLX05FVFdPUktfSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09ImV0aCIgfHwgW1tUQVNLX05FVFdPUktfSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09ImFyYmkiIHx8IFtbVEFTS19ORVRXT1JLX0lOXV0udG9Mb3dlckNhc2UoKS50cmltKCk9PSJvcCIg");
         _if(_cycle_params().if_else,function(){
         section_insert()
            section_start("", 320794468)!
            /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJyb2xlIjoibWFzdGVyIiwic2xhdmUiOjcxNDkxNjQ2MywibWFzdGVyIjo4NTA5MzA4MDcsImlmX3ZhciI6Il9jeWNsZV9wYXJhbXMoKS5pZl9lbHNlIiwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IklmRXhwcmVzc2lvbiIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiW1tHQVNfUFJJQ0VdXTw9e3tnYXNfbGltaXRfbDJ9fSIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9LHsiaWQiOiJJZkVsc2UiLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjp0cnVlfV19*/
            RS("gas_limit_l2", false, false)!
            RESOURCE_780517 = _result().get()
            _cycle_params().if_else = VAR_GAS_PRICE<=RESOURCE_780517;
            _set_if_expression("W1tHQVNfUFJJQ0VdXTw9e3tnYXNfbGltaXRfbDJ9fQ==");
            _if(_cycle_params().if_else,function(){
            section_insert()
            })!
            section_end()!

            section_start("\u007b\u0022n\u0022:\u0022Else\u0022\u007d", 714916463)!
            /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJyb2xlIjoic2xhdmUiLCJzbGF2ZSI6NzE0OTE2NDYzLCJtYXN0ZXIiOjMyMDc5NDQ2OCwiaWZfdmFyIjoiX2N5Y2xlX3BhcmFtcygpLmlmX2Vsc2UiLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW0dBU19QUklDRV1dPD17e2dhc19saW1pdH19IiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOnRydWV9XX0=*/
            _if(!_cycle_params().if_else,function(){
            section_insert()
               section_start("\u007b\u0022f\u0022:true\u007d", 424658856)!
               /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJ7e9Cb0L7QsyDQv9GA0Lgg0L7QttC40LTQsNC90LjQuCDQs9Cw0LfQsH19ID09IFwiT25cIiIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9LHsiaWQiOiJJZkVsc2UiLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjpmYWxzZX1dfQ==*/
               RS("Лог при ожидании газа", false, false)!
               RESOURCE_568106 = _result().get()
               _set_if_expression("e3vQm9C+0LMg0L/RgNC4INC+0LbQuNC00LDQvdC40Lgg0LPQsNC30LB9fSA9PSAiT24i");
               _if(RESOURCE_568106 == "On",function(){
               section_insert()
                  section_start("", 456150282)!
                  /*Dat:eyJzIjoibG9nIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkxvZ1RleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ItCm0LXQvdCwINCz0LDQt9CwIFtbR0FTX1BSSUNFXV0gPiB7e2dhc19saW1pdF9sMn19LiDQltC00YMuLi4iLCJjbGFzcyI6InN0cmluZyJ9XX0=*/
                  RS("gas_limit_l2", false, false)!
                  RESOURCE_802501 = _result().get()
                  log("Цена газа " + VAR_GAS_PRICE + " \u003e " + RESOURCE_802501 + ". Жду...")
                  section_end()!

               })!
               section_end()!

               section_start("", 149487394)!
               /*Dat:eyJzIjoic2xlZXAiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoic2xlZXBmcm9tIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIxMDAwIiwiY2xhc3MiOiJpbnQifSx7ImlkIjoic2xlZXB0byIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiMTAwMCIsImNsYXNzIjoiaW50In0seyJpZCI6InNsZWVwZnJvbXRvIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiI2MDAwMCIsImNsYXNzIjoiaW50In0seyJpZCI6InNsZWVwcmFuZG9tIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9XX0=*/
               sleep(60000)!
               section_end()!

               section_start("", 761363174)!
               /*Dat:eyJzIjoiZXhlY3V0ZWZ1bmN0aW9uIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkZ1bmN0aW9uTmFtZSIsInR5cGUiOiJ0ZXh0IiwiZGF0YSI6ImNoZWNrX2dhc19wcmljZSJ9XX0=*/
               _call_function(check_gas_price,{})!
               _result_function()
               section_end()!

            })!
            delete _cycle_params().if_else;
            section_end()!

         })!
         section_end()!

         section_start("\u007b\u0022n\u0022:\u0022Else\u0022\u007d", 971697394)!
         /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJyb2xlIjoic2xhdmUiLCJzbGF2ZSI6OTcxNjk3Mzk0LCJtYXN0ZXIiOjM4MjQ0OTY0MiwiaWZfdmFyIjoiX2N5Y2xlX3BhcmFtcygpLmlmX2Vsc2UiLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfTkVUV09SS19JTl1dLnRvTG93ZXJDYXNlKCkudHJpbSgpPT1cImV0aFwiIHx8IFtbVEFTS19ORVRXT1JLX0lOXV0udG9Mb3dlckNhc2UoKS50cmltKCk9PVwiYXJiaVwiIHx8IFtbVEFTS19ORVRXT1JLX0lOXV0udG9Mb3dlckNhc2UoKS50cmltKCk9PVwib3BcIiAiLCJjbGFzcyI6ImV4cHJlc3Npb24ifSx7ImlkIjoiSWZFbHNlIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6dHJ1ZX1dfQ==*/
         _if(!_cycle_params().if_else,function(){
         section_insert()
            section_start("", 565957748)!
            /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJyb2xlIjoibWFzdGVyIiwic2xhdmUiOjE4ODA2NzUyNywibWFzdGVyIjoxOTk0MzI4NjMsImlmX3ZhciI6Il9jeWNsZV9wYXJhbXMoKS5pZl9lbHNlIiwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IklmRXhwcmVzc2lvbiIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiW1tHQVNfUFJJQ0VdXTw9e3tnYXNfbGltaXRfb3RoZXJfZXZtfX0iLCJjbGFzcyI6ImV4cHJlc3Npb24ifSx7ImlkIjoiSWZFbHNlIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6dHJ1ZX1dfQ==*/
            RS("gas_limit_other_evm", false, false)!
            RESOURCE_133299 = _result().get()
            _cycle_params().if_else = VAR_GAS_PRICE<=RESOURCE_133299;
            _set_if_expression("W1tHQVNfUFJJQ0VdXTw9e3tnYXNfbGltaXRfb3RoZXJfZXZtfX0=");
            _if(_cycle_params().if_else,function(){
            section_insert()
            })!
            section_end()!

            section_start("\u007b\u0022n\u0022:\u0022Else\u0022\u007d", 188067527)!
            /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJyb2xlIjoic2xhdmUiLCJzbGF2ZSI6MTg4MDY3NTI3LCJtYXN0ZXIiOjU2NTk1Nzc0OCwiaWZfdmFyIjoiX2N5Y2xlX3BhcmFtcygpLmlmX2Vsc2UiLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW0dBU19QUklDRV1dPD17e2dhc19saW1pdH19IiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOnRydWV9XX0=*/
            _if(!_cycle_params().if_else,function(){
            section_insert()
               section_start("\u007b\u0022f\u0022:true\u007d", 500868507)!
               /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJ7e9Cb0L7QsyDQv9GA0Lgg0L7QttC40LTQsNC90LjQuCDQs9Cw0LfQsH19ID09IFwiT25cIiIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9LHsiaWQiOiJJZkVsc2UiLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjpmYWxzZX1dfQ==*/
               RS("Лог при ожидании газа", false, false)!
               RESOURCE_568106 = _result().get()
               _set_if_expression("e3vQm9C+0LMg0L/RgNC4INC+0LbQuNC00LDQvdC40Lgg0LPQsNC30LB9fSA9PSAiT24i");
               _if(RESOURCE_568106 == "On",function(){
               section_insert()
                  section_start("", 289299402)!
                  /*Dat:eyJzIjoibG9nIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkxvZ1RleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ItCm0LXQvdCwINCz0LDQt9CwIFtbR0FTX1BSSUNFXV0gPiB7e2dhc19saW1pdF9vdGhlcl9ldm19fSAsINC20LTRgyDQuCDQv9GA0L7QstC10YDRj9GOINC10YnQtSDRgNCw0LciLCJjbGFzcyI6InN0cmluZyJ9XX0=*/
                  RS("gas_limit_other_evm", false, false)!
                  RESOURCE_881621 = _result().get()
                  log("Цена газа " + VAR_GAS_PRICE + " \u003e " + RESOURCE_881621 + " , жду и проверяю еще раз")
                  section_end()!

               })!
               section_end()!

               section_start("", 529718545)!
               /*Dat:eyJzIjoic2xlZXAiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoic2xlZXBmcm9tIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIxMDAwIiwiY2xhc3MiOiJpbnQifSx7ImlkIjoic2xlZXB0byIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiMTAwMCIsImNsYXNzIjoiaW50In0seyJpZCI6InNsZWVwZnJvbXRvIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiI2MDAwMCIsImNsYXNzIjoiaW50In0seyJpZCI6InNsZWVwcmFuZG9tIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9XX0=*/
               sleep(60000)!
               section_end()!

               section_start("", 530450)!
               /*Dat:eyJzIjoiZXhlY3V0ZWZ1bmN0aW9uIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkZ1bmN0aW9uTmFtZSIsInR5cGUiOiJ0ZXh0IiwiZGF0YSI6ImNoZWNrX2dhc19wcmljZSJ9XX0=*/
               _call_function(check_gas_price,{})!
               _result_function()
               section_end()!

            })!
            delete _cycle_params().if_else;
            section_end()!

         })!
         delete _cycle_params().if_else;
         section_end()!

      },null)!
      section_end()!

      section_start("\u007b\u0022c\u0022:\u00225\u0022\u007d", 141311055)!
      /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1dBU19FUlJPUl1dIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
      _set_if_expression("W1tXQVNfRVJST1JdXQ==");
      _if(VAR_WAS_ERROR,function(){
      section_insert()
         section_start("\u007b\u0022c\u0022:\u00225\u0022\u007d", 882650991)!
         /*Dat:eyJzIjoibG9nIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkxvZ1RleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ItCf0YDQvtC40LfQvtGI0LvQsCDQvtGI0LjQsdC60LAgOiBbW0xBU1RfRVJST1JdXSIsImNsYXNzIjoic3RyaW5nIn1dfQ==*/
         log("Произошла ошибка : " + VAR_LAST_ERROR)
         section_end()!

         section_start("", 671877227)!
         /*Dat:eyJzIjoiZXhlY3V0ZWZ1bmN0aW9uIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkZ1bmN0aW9uTmFtZSIsInR5cGUiOiJ0ZXh0IiwiZGF0YSI6ImNoZWNrX2dhc19wcmljZSJ9XX0=*/
         _call_function(check_gas_price,{})!
         _result_function()
         section_end()!

      })!
      section_end()!

   }
   section_end()!

   section_start("\u007b\u0022n\u0022:\u0022OnApplicationStart\u0022,\u0022fd\u0022:\u0022\u007b\u005c\u0022fd\u005c\u0022:\u005c\u0022\u005c\u0022,\u005c\u0022hr\u005c\u0022:false,\u005c\u0022rd\u005c\u0022:\u005c\u0022\u005c\u0022,\u005c\u0022rv\u005c\u0022:\u005c\u0022FUNCTION_RESULT\u005c\u0022,\u005c\u0022p\u005c\u0022:[]\u007d\u0022\u007d", 821221768)!
   function OnApplicationStart()
   {
   section_insert()
      section_start("", 759177089)!
      /*Dat:eyJzIjoibG9nIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkxvZ1RleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ItCU0L7QsdGA0L4g0L/QvtC20LDQu9C+0LLQsNGC0YwhINCh0L/QtdGG0LjQu9Cw0YzQvdC+INC00LvRjyDQstCw0YEsINC+0YIgSVpJIERBTyIsImNsYXNzIjoic3RyaW5nIn1dfQ==*/
      log("Добро пожаловать! Специлаьно для вас, от IZI DAO")
      section_end()!

      section_start("\u007b\u0022n\u0022:\u0022RPC\u0022,\u0022c\u0022:\u00221\u0022\u007d", 780960715)!
      /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ImlmICh7e9Ci0LjQvyDQoNCf0KF9fSA9PSBcIkRlZmF1bHRcIikge1xyXG5bW0VUSF9SUENdXSA9ICdodHRwczovL3JwYy5hbmtyLmNvbS9ldGgnXHJcbltbT1BfUlBDXV0gPSAnaHR0cHM6Ly9ycGMuYW5rci5jb20vb3B0aW1pc20nXHJcbltbQVJCSV9SUENdXSA9ICdodHRwczovL3JwYy5hbmtyLmNvbS9hcmJpdHJ1bSdcclxuW1tGQU5UT01fUlBDXV0gPSAnaHR0cHM6Ly9ycGMuYW5rci5jb20vZmFudG9tJ1xyXG5bW0JOQl9SUENdXSA9ICdodHRwczovL3JwYy5hbmtyLmNvbS9ic2MnXHJcbltbTUFUSUNfUlBDXV0gPSAnaHR0cHM6Ly9ycGMuYW5rci5jb20vcG9seWdvbidcclxuW1tBVkFYX1JQQ11dID0gJ2h0dHBzOi8vcnBjLmFua3IuY29tL2F2YWxhbmNoZSdcclxuW1tBUFRPU19SUENdXSA9ICdodHRwczovL3JwYy5hbmtyLmNvbS9odHRwL2FwdG9zL3YxJ1xyXG5sb2coJ9Ce0LPRgNCw0L3QuNGH0LXQvdC40LUg0L3QsCDQtNC10YTQvtC70YLQvdC+0LwgUlBDIC0gMzAwINC30LDQv9GA0L7RgdC+0LIg0LIg0LzQuNC90YPRgtGDLiDQndC1INGB0L7QstC10YLRg9C10Lwg0LfQsNC/0YPRgdC60LDRgtGMINCx0L7Qu9GM0YjQtSA0INC/0L7RgtC+0LrQvtCyJylcclxuXHJcbn0gZWxzZSB7XHJcbltbRVRIX1JQQ11dID0ge3tldGh9fVxyXG5bW09QX1JQQ11dID0ge3tvcH19XHJcbltbQVJCSV9SUENdXSA9IHt7YXJiaX19XHJcbltbRkFOVE9NX1JQQ11dID0ge3tmYW50b219fVxyXG5bW0JOQl9SUENdXSA9IHt7Ym5ifX1cclxuW1tNQVRJQ19SUENdXSA9IHt7bWF0aWN9fVxyXG5bW0FWQVhfUlBDXV0gPSB7e2F2YXh9fVxyXG5bW0FQVE9TX1JQQ11dID0ge3thcHRvc319XHJcblxyXG4gICAgaWYgKHt7ZXRofX0gPT0gXCJcIikge1xyXG4gICAgICAgIFtbRVRIX1JQQ11dID0gJ2h0dHBzOi8vcnBjLmFua3IuY29tL2V0aCdcclxuICAgIH0gIGlmICh7e29wfX0gPT0gXCJcIikge1xyXG5cdFx0W1tPUF9SUENdXSA9ICdodHRwczovL3JwYy5hbmtyLmNvbS9vcHRpbWlzbSdcclxuXHR9ICBpZiAoe3thcmJpfX0gPT0gXCJcIikge1xyXG5cdFx0W1tBUkJJX1JQQ11dID0gJ2h0dHBzOi8vcnBjLmFua3IuY29tL2FyYml0cnVtJ1xyXG5cdH0gIGlmICh7e2ZhbnRvbX19ID09IFwiXCIpIHtcclxuXHRcdFtbRkFOVE9NX1JQQ11dID0gJ2h0dHBzOi8vcnBjLmFua3IuY29tL2ZhbnRvbSdcclxuXHR9ICBpZiAoe3tibmJ9fSA9PSBcIlwiKSB7XHJcblx0XHRbW0JOQl9SUENdXSA9ICdodHRwczovL3JwYy5hbmtyLmNvbS9ic2MnXHJcblx0fSAgaWYgKHt7bWF0aWN9fSA9PSBcIlwiKSB7XHJcblx0XHRbW01BVElDX1JQQ11dID0gJ2h0dHBzOi8vcnBjLmFua3IuY29tL3BvbHlnb24nXHJcblx0fSAgaWYgKHt7YXZheH19ID09IFwiXCIpIHtcclxuXHRcdFtbQVZBWF9SUENdXSA9ICdodHRwczovL3JwYy5hbmtyLmNvbS9hdmFsYW5jaGUnXHJcblx0fSAgaWYgKHt7YXB0b3N9fSA9PSBcIlwiKSB7XHJcblx0XHRbW0FQVE9TX1JQQ11dID0gJ2h0dHBzOi8vcnBjLmFua3IuY29tL2h0dHAvYXB0b3MvdjEnXHJcblx0fVxyXG59XHJcblxyXG4iLCJjbGFzcyI6ImV4cHJlc3Npb24ifV19*/
      RS("Тип РПС", false, false)!
      RESOURCE_623355 = _result().get()
      RS("eth", false, false)!
      RESOURCE_384635 = _result().get()
      RS("op", false, false)!
      RESOURCE_359770 = _result().get()
      RS("arbi", false, false)!
      RESOURCE_470794 = _result().get()
      RS("fantom", false, false)!
      RESOURCE_351283 = _result().get()
      RS("bnb", false, false)!
      RESOURCE_859038 = _result().get()
      RS("matic", false, false)!
      RESOURCE_237303 = _result().get()
      RS("avax", false, false)!
      RESOURCE_539942 = _result().get()
      RS("aptos", false, false)!
      RESOURCE_864186 = _result().get()
      RS("eth", false, false)!
      RESOURCE_111308 = _result().get()
      RS("op", false, false)!
      RESOURCE_890106 = _result().get()
      RS("arbi", false, false)!
      RESOURCE_220263 = _result().get()
      RS("fantom", false, false)!
      RESOURCE_237420 = _result().get()
      RS("bnb", false, false)!
      RESOURCE_457035 = _result().get()
      RS("matic", false, false)!
      RESOURCE_500503 = _result().get()
      RS("avax", false, false)!
      RESOURCE_377338 = _result().get()
      RS("aptos", false, false)!
      RESOURCE_612170 = _result().get()
      if (RESOURCE_623355 == "Default") {
      VAR_ETH_RPC = 'https://rpc.ankr.com/eth'
      VAR_OP_RPC = 'https://rpc.ankr.com/optimism'
      VAR_ARBI_RPC = 'https://rpc.ankr.com/arbitrum'
      VAR_FANTOM_RPC = 'https://rpc.ankr.com/fantom'
      VAR_BNB_RPC = 'https://rpc.ankr.com/bsc'
      VAR_MATIC_RPC = 'https://rpc.ankr.com/polygon'
      VAR_AVAX_RPC = 'https://rpc.ankr.com/avalanche'
      VAR_APTOS_RPC = 'https://rpc.ankr.com/http/aptos/v1'
      log('Ограничение на дефолтном RPC - 300 запросов в минуту. Не советуем запускать больше 4 потоков')
      } else {
      VAR_ETH_RPC = RESOURCE_384635
      VAR_OP_RPC = RESOURCE_359770
      VAR_ARBI_RPC = RESOURCE_470794
      VAR_FANTOM_RPC = RESOURCE_351283
      VAR_BNB_RPC = RESOURCE_859038
      VAR_MATIC_RPC = RESOURCE_237303
      VAR_AVAX_RPC = RESOURCE_539942
      VAR_APTOS_RPC = RESOURCE_864186
      if (RESOURCE_111308 == "") {
      VAR_ETH_RPC = 'https://rpc.ankr.com/eth'
      }  if (RESOURCE_890106 == "") {
      VAR_OP_RPC = 'https://rpc.ankr.com/optimism'
      }  if (RESOURCE_220263 == "") {
      VAR_ARBI_RPC = 'https://rpc.ankr.com/arbitrum'
      }  if (RESOURCE_237420 == "") {
      VAR_FANTOM_RPC = 'https://rpc.ankr.com/fantom'
      }  if (RESOURCE_457035 == "") {
      VAR_BNB_RPC = 'https://rpc.ankr.com/bsc'
      }  if (RESOURCE_500503 == "") {
      VAR_MATIC_RPC = 'https://rpc.ankr.com/polygon'
      }  if (RESOURCE_377338 == "") {
      VAR_AVAX_RPC = 'https://rpc.ankr.com/avalanche'
      }  if (RESOURCE_612170 == "") {
      VAR_APTOS_RPC = 'https://rpc.ankr.com/http/aptos/v1'
      }
      }
      section_end()!

      section_start("", 392604197)!
      /*Dat:eyJzIjoiaWdub3JlZXJyb3JzIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbXX0=*/
      _call(function()
      {
      _on_fail(function(){
      VAR_LAST_ERROR = _result()
      VAR_ERROR_ID = ScriptWorker.GetCurrentAction()
      VAR_WAS_ERROR = false
      _break(1,true)
      })
      CYCLES.Current().RemoveLabel("function")
      section_insert()
         section_start("\u007b\u0022n\u0022:\u0022Check rpc\u0022\u007d", 922680972)!
         /*Dat:eyJzIjoiRW1iZWRkZWRMYW5ndWFnZXNOb2RlSnMiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiTm9kZVZlcnNpb25MaXN0IiwidHlwZSI6InNlbGVjdCIsImRhdGEiOiIxOC4xMC4wIn0seyJpZCI6Ik5hbWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6InY1MG5kODNqaGMiLCJjbGFzcyI6InN0cmluZyJ9XX0=*/
         /*VAR_ETH_RPC VAR_OP_RPC VAR_ARBI_RPC VAR_FANTOM_RPC VAR_BNB_RPC VAR_MATIC_RPC VAR_AVAX_RPC*/
         _embedded("v50nd83jhc", "Node", "18.10.0", "ETH_RPC,OP_RPC,ARBI_RPC,FANTOM_RPC,BNB_RPC,MATIC_RPC,AVAX_RPC", 60000 )!
         section_end()!

      },null)!
      section_end()!

      section_start("\u007b\u0022c\u0022:\u00225\u0022\u007d", 125496822)!
      /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1dBU19FUlJPUl1dIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
      _set_if_expression("W1tXQVNfRVJST1JdXQ==");
      _if(VAR_WAS_ERROR,function(){
      section_insert()
         section_start("", 502945192)!
         /*Dat:eyJzIjoiZGllIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkZhaWxNZXNzYWdlIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW0xBU1RfRVJST1JdXSIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6IkNoZWNrIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6dHJ1ZX1dfQ==*/
         die(VAR_LAST_ERROR,true)
         section_end()!

      })!
      section_end()!

      section_start("", 971126300)!
      /*Dat:eyJzIjoic2xlZXAiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoic2xlZXBmcm9tIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIxMDAwIiwiY2xhc3MiOiJpbnQifSx7ImlkIjoic2xlZXB0byIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiMTAwMCIsImNsYXNzIjoiaW50In0seyJpZCI6InNsZWVwZnJvbXRvIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiI1MDAwIiwiY2xhc3MiOiJpbnQifSx7ImlkIjoic2xlZXByYW5kb20iLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjpmYWxzZX1dfQ==*/
      sleep(5000)!
      section_end()!

      section_start("", 819738275)!
      /*Dat:eyJzIjoibG9nIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkxvZ1RleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ItCS0YHQtSBSUEMg0YDQsNCx0L7RgtCw0Y7RgiIsImNsYXNzIjoic3RyaW5nIn1dfQ==*/
      log("Все RPC работают")
      section_end()!

      section_start("", 670011219)!
      /*Dat:eyJzIjoiR2V0UmVzb3VjZUxvY2F0aW9uIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IlJlc291cmNlTmFtZSIsInR5cGUiOiJ2YXIiLCJkYXRhIjoi0J/QsNC/0LrQsCDQtNC70Y8g0LrQtdGI0LAifSx7ImlkIjoiU2F2ZSIsInR5cGUiOiJ2YXIiLCJkYXRhIjoiZm9sZGVyX3RvX3NhdmUifV19*/
      VAR_FOLDER_TO_SAVE =RInfo("Папка для кеша","Location")
      section_end()!

      section_start("", 786127339)!
      /*Dat:eyJzIjoiZ2xvYmFsc2V0IiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6Ik5hbWUiLCJ0eXBlIjoidmFyIiwiZGF0YSI6ImZvbGRlcl90b19zYXZlIn0seyJpZCI6IlZhbHVlIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW0ZPTERFUl9UT19TQVZFXV0iLCJjbGFzcyI6InN0cmluZyJ9XX0=*/
      var val = JSON.stringify(VAR_FOLDER_TO_SAVE);
      PSet("basglobal", "FOLDER_TO_SAVE", val)
      section_end()!

      section_start("", 592947103)!
      /*Dat:eyJzIjoiZ2xvYmFsc2V0IiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6Ik5hbWUiLCJ0eXBlIjoidmFyIiwiZGF0YSI6ImxvY2sifSx7ImlkIjoiVmFsdWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ImZhbHNlIiwiY2xhc3MiOiJleHByZXNzaW9uIn1dfQ==*/
      var val = JSON.stringify(false);
      PSet("basglobal", "LOCK", val)
      section_end()!

      section_start("", 468549739)!
      /*Dat:eyJzIjoiR2V0UmVzb3VjZUxvY2F0aW9uIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IlJlc291cmNlTmFtZSIsInR5cGUiOiJ2YXIiLCJkYXRhIjoiYWNjX2ZmaWxlIn0seyJpZCI6IlNhdmUiLCJ0eXBlIjoidmFyIiwiZGF0YSI6IlJFU09VUkNFX0xPQ0FUSU9OIn1dfQ==*/
      VAR_RESOURCE_LOCATION =RInfo("acc_ffile","Location")
      section_end()!

      section_start("", 115106248)!
      /*Dat:eyJzIjoiRXhjZWxfUmVhZFJvd3MiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiRmlsZVBhdGgiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbUkVTT1VSQ0VfTE9DQVRJT05dXSIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6IlNoZWV0SW5kZXhPck5hbWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IjAiLCJjbGFzcyI6ImludCJ9LHsiaWQiOiJGcm9tUm93IiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIiLCJjbGFzcyI6ImludCJ9LHsiaWQiOiJUb1JvdyIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiIiwiY2xhc3MiOiJpbnQifSx7ImlkIjoiU2F2ZSIsInR5cGUiOiJ2YXIiLCJkYXRhIjoiYWNjcyJ9LHsiaWQiOiJEYXRhRm9ybWF0IiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJDU1YgbGlzdCIsImNsYXNzIjoic3RyaW5nIn1dfQ==*/
      _call_function(Excel_ReadRows,{"FilePath":(VAR_RESOURCE_LOCATION), "SheetIndexOrName":(0), "FromRow":(""), "ToRow":(""), "DataFormat":("CSV list"), "Timeout":(60000)})!
      VAR_ACCS = _result_function()
      section_end()!

      section_start("", 856667578)!
      /*Dat:eyJzIjoiRGVsZXRlQnlWYWx1ZSIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJWYXJpYWJsZSIsInR5cGUiOiJ2YXIiLCJkYXRhIjoiQUNDUyJ9LHsiaWQiOiJWYWx1ZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiOjo6OiIsImNsYXNzIjoic3RyaW5nIn1dfQ==*/
      VAR_ACCS = VAR_ACCS.filter(function(e){return e!== "::::" })
      section_end()!

      section_start("", 754839370)!
      /*Dat:eyJzIjoiRGVsZXRlQnlWYWx1ZSIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJWYXJpYWJsZSIsInR5cGUiOiJ2YXIiLCJkYXRhIjoiQUNDUyJ9LHsiaWQiOiJWYWx1ZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiXCJcIiIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
      VAR_ACCS = VAR_ACCS.filter(function(e){return e!== "" })
      section_end()!

      section_start("", 596879603)!
      /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJ7e9Cc0LXRiNCw0YLRjCDQsNC60LrQsNGD0L3RgtGLfX0gPT0gXCJPblwiIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
      RS("Мешать аккаунты", false, false)!
      RESOURCE_261696 = _result().get()
      _set_if_expression("e3vQnNC10YjQsNGC0Ywg0LDQutC60LDRg9C90YLRi319ID09ICJPbiI=");
      _if(RESOURCE_261696 == "On",function(){
      section_insert()
         section_start("", 237264176)!
         /*Dat:eyJzIjoiU2h1ZmZsZUxpc3QiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiVmFyaWFibGUiLCJ0eXBlIjoidmFyIiwiZGF0YSI6IkFDQ1MifV19*/
         ;(function (a) {var j, x, i;for (i = a.length; i; i--) {j = Math.floor(Math.random() * i);x = a[i - 1]; a[i - 1] = a[j];a[j] = x;}})(VAR_ACCS)
         section_end()!

      })!
      section_end()!

      section_start("", 983128403)!
      /*Dat:eyJzIjoiQ3JlYXRlUmVzb3VyY2UiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiTmFtZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiYWNjX2ZpbGUiLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJTdWNjZXNzTnVtYmVyIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIxIiwiY2xhc3MiOiJpbnQifSx7ImlkIjoiRmFpbE51bWJlciIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiMSIsImNsYXNzIjoiaW50In0seyJpZCI6IlNpbXVsdGFuZW91c1VzYWdlIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIxIiwiY2xhc3MiOiJpbnQifSx7ImlkIjoiSW50ZXJ2YWwiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IjUwMDAiLCJjbGFzcyI6ImludCJ9LHsiaWQiOiJDaGVjayIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfSx7ImlkIjoiQ2hlY2syIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9XX0=*/
      RCreate("acc_file", 1, 1, 1, 5000, false, false)
      section_end()!

      section_start("", 833466031)!
      /*Dat:eyJzIjoiQXJyYXlUb1Jlc291cmNlIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IlJlc291cmNlTmFtZSIsInR5cGUiOiJ2YXIiLCJkYXRhIjoiYWNjX2ZpbGUifSx7ImlkIjoiVmFyaWFibGUiLCJ0eXBlIjoidmFyIiwiZGF0YSI6IkFDQ1MifV19*/
      RClear("acc_file")
      RSync("acc_file")
      for(var i = 0;i<(VAR_ACCS).length;i++)
      {
      RInsert("acc_file",(VAR_ACCS)[i],false)
      }
      RSync("acc_file")
      section_end()!

   }
   section_end()!

   _call(_on_start, null)!

   section_start("\u007b\u0022n\u0022:\u0022RPC\u0022,\u0022c\u0022:\u00221\u0022\u007d", 838778117)!
   /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ImlmICh7e9Ci0LjQvyDQoNCf0KF9fSA9PSBcIkRlZmF1bHRcIikge1xyXG5bW0VUSF9SUENdXSA9ICdodHRwczovL3JwYy5hbmtyLmNvbS9ldGgnXHJcbltbT1BfUlBDXV0gPSAnaHR0cHM6Ly9ycGMuYW5rci5jb20vb3B0aW1pc20nXHJcbltbQVJCSV9SUENdXSA9ICdodHRwczovL3JwYy5hbmtyLmNvbS9hcmJpdHJ1bSdcclxuW1tGQU5UT01fUlBDXV0gPSAnaHR0cHM6Ly9ycGMuYW5rci5jb20vZmFudG9tJ1xyXG5bW0JOQl9SUENdXSA9ICdodHRwczovL3JwYy5hbmtyLmNvbS9ic2MnXHJcbltbTUFUSUNfUlBDXV0gPSAnaHR0cHM6Ly9ycGMuYW5rci5jb20vcG9seWdvbidcclxuW1tBVkFYX1JQQ11dID0gJ2h0dHBzOi8vcnBjLmFua3IuY29tL2F2YWxhbmNoZSdcclxuW1tBUFRPU19SUENdXSA9ICdodHRwczovL3JwYy5hbmtyLmNvbS9odHRwL2FwdG9zL3YxJ1xyXG5bW0dBU19FTkRQT0lOVF1dID0gJ2h0dHBzOi8vcnBjLmFua3IuY29tL2V0aCdcclxubG9nKCfQntCz0YDQsNC90LjRh9C10L3QuNC1INC90LAg0LTQtdGE0L7Qu9GC0L3QvtC8IFJQQyAtIDMwMCDQt9Cw0L/RgNC+0YHQvtCyINCyINC80LjQvdGD0YLRgy4g0J3QtSDRgdC+0LLQtdGC0YPQtdC8INC30LDQv9GD0YHQutCw0YLRjCDQsdC+0LvRjNGI0LUgNCDQv9C+0YLQvtC60L7QsicpXHJcblxyXG59IGVsc2Uge1xyXG5bW0VUSF9SUENdXSA9IHt7ZXRofX1cclxuW1tPUF9SUENdXSA9IHt7b3B9fVxyXG5bW0FSQklfUlBDXV0gPSB7e2FyYml9fVxyXG5bW0ZBTlRPTV9SUENdXSA9IHt7ZmFudG9tfX1cclxuW1tCTkJfUlBDXV0gPSB7e2JuYn19XHJcbltbTUFUSUNfUlBDXV0gPSB7e21hdGljfX1cclxuW1tBVkFYX1JQQ11dID0ge3thdmF4fX1cclxuW1tBUFRPU19SUENdXSA9IHt7YXB0b3N9fVxyXG5bW0dBU19FTkRQT0lOVF1dID0ge3tnYXNfZW5kcG9pbnR9fVxyXG5cclxuICAgIGlmICh7e2V0aH19ID09IFwiXCIpIHtcclxuICAgICAgICBbW0VUSF9SUENdXSA9ICdodHRwczovL3JwYy5hbmtyLmNvbS9ldGgnXHJcbiAgICB9ICBpZiAoe3tvcH19ID09IFwiXCIpIHtcclxuXHRcdFtbT1BfUlBDXV0gPSAnaHR0cHM6Ly9ycGMuYW5rci5jb20vb3B0aW1pc20nXHJcblx0fSAgaWYgKHt7YXJiaX19ID09IFwiXCIpIHtcclxuXHRcdFtbQVJCSV9SUENdXSA9ICdodHRwczovL3JwYy5hbmtyLmNvbS9hcmJpdHJ1bSdcclxuXHR9ICBpZiAoe3tmYW50b219fSA9PSBcIlwiKSB7XHJcblx0XHRbW0ZBTlRPTV9SUENdXSA9ICdodHRwczovL3JwYy5hbmtyLmNvbS9mYW50b20nXHJcblx0fSAgaWYgKHt7Ym5ifX0gPT0gXCJcIikge1xyXG5cdFx0W1tCTkJfUlBDXV0gPSAnaHR0cHM6Ly9ycGMuYW5rci5jb20vYnNjJ1xyXG5cdH0gIGlmICh7e21hdGljfX0gPT0gXCJcIikge1xyXG5cdFx0W1tNQVRJQ19SUENdXSA9ICdodHRwczovL3JwYy5hbmtyLmNvbS9wb2x5Z29uJ1xyXG5cdH0gIGlmICh7e2F2YXh9fSA9PSBcIlwiKSB7XHJcblx0XHRbW0FWQVhfUlBDXV0gPSAnaHR0cHM6Ly9ycGMuYW5rci5jb20vYXZhbGFuY2hlJ1xyXG5cdH0gIGlmICh7e2FwdG9zfX0gPT0gXCJcIikge1xyXG5cdFx0W1tBUFRPU19SUENdXSA9ICdodHRwczovL3JwYy5hbmtyLmNvbS9odHRwL2FwdG9zL3YxJ1xyXG5cdH0gaWYgKHt7Z2FzX2VuZHBvaW50fX0gPT0gXCJcIikge1xyXG4gICAgICAgIFtbR0FTX0VORFBPSU5UXV0gPSAnaHR0cHM6Ly9ycGMuYW5rci5jb20vZXRoJ1xyXG4gICAgfVxyXG59XHJcblxyXG4iLCJjbGFzcyI6ImV4cHJlc3Npb24ifV19*/
   RS("Тип РПС", false, false)!
   RESOURCE_913685 = _result().get()
   RS("eth", false, false)!
   RESOURCE_183373 = _result().get()
   RS("op", false, false)!
   RESOURCE_280472 = _result().get()
   RS("arbi", false, false)!
   RESOURCE_763638 = _result().get()
   RS("fantom", false, false)!
   RESOURCE_524492 = _result().get()
   RS("bnb", false, false)!
   RESOURCE_922722 = _result().get()
   RS("matic", false, false)!
   RESOURCE_287179 = _result().get()
   RS("avax", false, false)!
   RESOURCE_746844 = _result().get()
   RS("aptos", false, false)!
   RESOURCE_587288 = _result().get()
   RS("gas_endpoint", false, false)!
   RESOURCE_910850 = _result().get()
   RS("eth", false, false)!
   RESOURCE_350782 = _result().get()
   RS("op", false, false)!
   RESOURCE_311270 = _result().get()
   RS("arbi", false, false)!
   RESOURCE_604915 = _result().get()
   RS("fantom", false, false)!
   RESOURCE_558334 = _result().get()
   RS("bnb", false, false)!
   RESOURCE_332402 = _result().get()
   RS("matic", false, false)!
   RESOURCE_682606 = _result().get()
   RS("avax", false, false)!
   RESOURCE_903053 = _result().get()
   RS("aptos", false, false)!
   RESOURCE_312663 = _result().get()
   RS("gas_endpoint", false, false)!
   RESOURCE_326271 = _result().get()
   if (RESOURCE_913685 == "Default") {
   VAR_ETH_RPC = 'https://rpc.ankr.com/eth'
   VAR_OP_RPC = 'https://rpc.ankr.com/optimism'
   VAR_ARBI_RPC = 'https://rpc.ankr.com/arbitrum'
   VAR_FANTOM_RPC = 'https://rpc.ankr.com/fantom'
   VAR_BNB_RPC = 'https://rpc.ankr.com/bsc'
   VAR_MATIC_RPC = 'https://rpc.ankr.com/polygon'
   VAR_AVAX_RPC = 'https://rpc.ankr.com/avalanche'
   VAR_APTOS_RPC = 'https://rpc.ankr.com/http/aptos/v1'
   VAR_GAS_ENDPOINT = 'https://rpc.ankr.com/eth'
   log('Ограничение на дефолтном RPC - 300 запросов в минуту. Не советуем запускать больше 4 потоков')
   } else {
   VAR_ETH_RPC = RESOURCE_183373
   VAR_OP_RPC = RESOURCE_280472
   VAR_ARBI_RPC = RESOURCE_763638
   VAR_FANTOM_RPC = RESOURCE_524492
   VAR_BNB_RPC = RESOURCE_922722
   VAR_MATIC_RPC = RESOURCE_287179
   VAR_AVAX_RPC = RESOURCE_746844
   VAR_APTOS_RPC = RESOURCE_587288
   VAR_GAS_ENDPOINT = RESOURCE_910850
   if (RESOURCE_350782 == "") {
   VAR_ETH_RPC = 'https://rpc.ankr.com/eth'
   }  if (RESOURCE_311270 == "") {
   VAR_OP_RPC = 'https://rpc.ankr.com/optimism'
   }  if (RESOURCE_604915 == "") {
   VAR_ARBI_RPC = 'https://rpc.ankr.com/arbitrum'
   }  if (RESOURCE_558334 == "") {
   VAR_FANTOM_RPC = 'https://rpc.ankr.com/fantom'
   }  if (RESOURCE_332402 == "") {
   VAR_BNB_RPC = 'https://rpc.ankr.com/bsc'
   }  if (RESOURCE_682606 == "") {
   VAR_MATIC_RPC = 'https://rpc.ankr.com/polygon'
   }  if (RESOURCE_903053 == "") {
   VAR_AVAX_RPC = 'https://rpc.ankr.com/avalanche'
   }  if (RESOURCE_312663 == "") {
   VAR_APTOS_RPC = 'https://rpc.ankr.com/http/aptos/v1'
   } if (RESOURCE_326271 == "") {
   VAR_GAS_ENDPOINT = 'https://rpc.ankr.com/eth'
   }
   }
   section_end()!

   section_start("", 274793652)!
   /*Dat:eyJzIjoic2V0dmFyaWFibGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2V0VmFyaWFibGVOYW1lIiwidHlwZSI6InZhciIsImRhdGEiOiJlbnRlcl9zdHIifSx7ImlkIjoiU2V0VmFyaWFibGVWYWx1ZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoie3thY2NfZmlsZXxub3RyZXVzZX19IiwiY2xhc3MiOiJzdHJpbmcifV19*/
   RS("acc_file", true, false)!
   RESOURCE_492253 = _result().get()
   VAR_ENTER_STR = RESOURCE_492253
   section_end()!

   section_start("", 301758748)!
   /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ImFyciA9IFtbRU5URVJfU1RSXV0uc3BsaXQoXCI6XCIpO1xyXG5bW1BST0ZJTEVfRk9MREVSX05BTUVdXT0gYXJyWzBdO1xyXG5bW1BSSVZBVEVfS0VZXV0gPSBhcnJbMV07XHJcblxyXG4iLCJjbGFzcyI6ImV4cHJlc3Npb24ifV19*/
   arr = VAR_ENTER_STR.split(":");
   VAR_PROFILE_FOLDER_NAME= arr[0];
   VAR_PRIVATE_KEY = arr[1];
   section_end()!

   section_start("", 222985531)!
   /*Dat:eyJzIjoic2V0dmFyaWFibGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2V0VmFyaWFibGVOYW1lIiwidHlwZSI6InZhciIsImRhdGEiOiJwcm9maWxlX2ZvbGRlciJ9LHsiaWQiOiJTZXRWYXJpYWJsZVZhbHVlIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW0dMT0JBTDpGT0xERVJfVE9fU0FWRV1dL2NhY2hlL1tbUFJPRklMRV9GT0xERVJfTkFNRV1dIiwiY2xhc3MiOiJzdHJpbmcifV19*/
   VAR_PROFILE_FOLDER = JSON.parse(P("basglobal", "FOLDER_TO_SAVE") || '""') + "/cache/" + VAR_PROFILE_FOLDER_NAME
   section_end()!

   section_start("", 696443729)!
   /*Dat:eyJzIjoic2V0dmFyaWFibGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2V0VmFyaWFibGVOYW1lIiwidHlwZSI6InZhciIsImRhdGEiOiJsb2dzX2ZvbGRlciJ9LHsiaWQiOiJTZXRWYXJpYWJsZVZhbHVlIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW0dMT0JBTDpGT0xERVJfVE9fU0FWRV1dL2xvZ3MiLCJjbGFzcyI6InN0cmluZyJ9XX0=*/
   VAR_LOGS_FOLDER = JSON.parse(P("basglobal", "FOLDER_TO_SAVE") || '""') + "/logs"
   section_end()!

   section_start("\u007b\u0022n\u0022:\u0022get address\u0022\u007d", 926539647)!
   /*Dat:eyJzIjoiRW1iZWRkZWRMYW5ndWFnZXNOb2RlSnMiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiTm9kZVZlcnNpb25MaXN0IiwidHlwZSI6InNlbGVjdCIsImRhdGEiOiIxOC4xMC4wIn0seyJpZCI6Ik5hbWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Im9hNzhlcGdoZGRlIiwiY2xhc3MiOiJzdHJpbmcifV19*/
   /*VAR_PRIVATE_KEY VAR_WALLET_ADDRESS*/
   _embedded("oa78epghdde", "Node", "18.10.0", "PRIVATE_KEY,WALLET_ADDRESS", 60000 )!
   section_end()!

   section_start("", 803374425)!
   /*Dat:eyJzIjoic2V0dmFyaWFibGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2V0VmFyaWFibGVOYW1lIiwidHlwZSI6InZhciIsImRhdGEiOiJlcnJvcl9jb3VudGVyIn0seyJpZCI6IlNldFZhcmlhYmxlVmFsdWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IjAiLCJjbGFzcyI6ImV4cHJlc3Npb24ifV19*/
   VAR_ERROR_COUNTER = 0
   section_end()!

   section_start("", 859117914)!
   /*Dat:eyJzIjoic2V0dmFyaWFibGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2V0VmFyaWFibGVOYW1lIiwidHlwZSI6InZhciIsImRhdGEiOiJwZXJjZW50In0seyJpZCI6IlNldFZhcmlhYmxlVmFsdWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IjEwMCIsImNsYXNzIjoiaW50In1dfQ==*/
   VAR_PERCENT = 100
   section_end()!

   section_start("", 507634026)!
   /*Dat:eyJzIjoiZXhlY3V0ZWZ1bmN0aW9uIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkZ1bmN0aW9uTmFtZSIsInR5cGUiOiJ0ZXh0IiwiZGF0YSI6InRhc2tzX2xpc3QifV19*/
   _call_function(tasks_list,{})!
   _result_function()
   section_end()!

   section_start("", 630557689)!
   /*Dat:eyJzIjoiZmlsZXN5c3RlbV9maWxlX3RvX2xpc3QiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiVmFsdWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbUFJPRklMRV9GT0xERVJdXS90YXNrcy5jc3YiLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJTYXZlIiwidHlwZSI6InZhciIsImRhdGEiOiJUQVNLX0xJU1QifV19*/
   {
   var d = native("filesystem", "readfile", JSON.stringify({value: VAR_PROFILE_FOLDER + "/tasks.csv",base64:false,from:0,to:0}))
   VAR_TASK_LIST	= (d.length == 0) ? [] : d.split(/\r?\n/)
   }
   section_end()!

   section_start("", 130104359)!
   /*Dat:eyJzIjoiTGlzdExlbmd0aCIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJWYXJpYWJsZSIsInR5cGUiOiJ2YXIiLCJkYXRhIjoiVEFTS19MSVNUIn0seyJpZCI6IlZhcmlhYmxlTGVuZ3RoIiwidHlwZSI6InZhciIsImRhdGEiOiJ0YXNrc19hbW91bnRfc3RhcnQifV19*/
   VAR_TASKS_AMOUNT_START = (VAR_TASK_LIST).length
   section_end()!

   section_start("", 210486434)!
   /*Dat:eyJzIjoid2hpbGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiV2hpbGVFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJ0cnVlIiwiY2xhc3MiOiJleHByZXNzaW9uIn1dfQ==*/
   _do(function(){
   _set_action_info({ name: "While" });
   VAR_CYCLE_INDEX = _iterator() - 1
   BREAK_CONDITION = true;
   if(!BREAK_CONDITION)_break();
   section_insert()
      section_start("", 340926906)!
      /*Dat:eyJzIjoic2V0dmFyaWFibGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2V0VmFyaWFibGVOYW1lIiwidHlwZSI6InZhciIsImRhdGEiOiJiYWxhbmNlX2JlZm9yZSJ9LHsiaWQiOiJTZXRWYXJpYWJsZVZhbHVlIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJ1bmRlZmluZWQiLCJjbGFzcyI6ImV4cHJlc3Npb24ifV19*/
      VAR_BALANCE_BEFORE = undefined
      section_end()!

      section_start("", 819566269)!
      /*Dat:eyJzIjoic2xlZXAiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoic2xlZXBmcm9tIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIxMDAwIiwiY2xhc3MiOiJpbnQifSx7ImlkIjoic2xlZXB0byIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiMTAwMCIsImNsYXNzIjoiaW50In0seyJpZCI6InNsZWVwZnJvbXRvIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiI1MDAwIiwiY2xhc3MiOiJpbnQifSx7ImlkIjoic2xlZXByYW5kb20iLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjpmYWxzZX1dfQ==*/
      sleep(5000)!
      section_end()!

      section_start("\u007b\u0022f\u0022:true\u007d", 107088365)!
      /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW0VSUk9SX0NPVU5URVJdXSA+PSA3IiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
      _set_if_expression("W1tFUlJPUl9DT1VOVEVSXV0gPj0gNw==");
      _if(VAR_ERROR_COUNTER >= 7,function(){
      section_insert()
         section_start("", 785044568)!
         /*Dat:eyJzIjoiaWdub3JlZXJyb3JzIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbXX0=*/
         _call(function()
         {
         _on_fail(function(){
         VAR_LAST_ERROR = _result()
         VAR_ERROR_ID = ScriptWorker.GetCurrentAction()
         VAR_WAS_ERROR = false
         _break(1,true)
         })
         CYCLES.Current().RemoveLabel("function")
         section_insert()
            section_start("", 399325555)!
            /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJ7e2FsZXJ0X3RnfX0gPT0gXCJPblwiIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
            RS("alert_tg", false, false)!
            RESOURCE_595677 = _result().get()
            _set_if_expression("e3thbGVydF90Z319ID09ICJPbiI=");
            _if(RESOURCE_595677 == "On",function(){
            section_insert()
               section_start("", 351742710)!
               /*Dat:eyJzIjoiU2VuZE1lc3NhZ2UiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiVG9rZW4iLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Int7dGdfYm90X3Rva2VufX0iLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJJZENoYXQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Int7dGdfY2hhdF9pZH19IiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiTWVzc2FnZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiW1tUQVNLXV0gLSDQntGI0LjQsdC60LAsINC60L7RiNC10LvQtdC6IFtbV0FMTEVUX0FERFJFU1NdXS4gW1tMQVNUX0VSUk9SXV0iLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJDaGVjayIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfSx7ImlkIjoiQ2hlY2sxIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9XX0=*/
               RS("tg_bot_token", false, false)!
               RESOURCE_471332 = _result().get()
               RS("tg_chat_id", false, false)!
               RESOURCE_303990 = _result().get()
               var getTime = function() {
               var checkTime = function (i) {
               return (i < 10) ? "0" + i : i;
               }
               var d = new Date();
               var hh = checkTime(d.getHours());
               var mm = checkTime(d.getMinutes());
               var ss = checkTime(d.getSeconds());
               return '[' + hh + ':' + mm + ':' + ss + ']'
               }
               var mess, _url_temp, json, tmp = "";
               tmp = encodeURIComponent(VAR_TASK + " - Ошибка, кошелек " + VAR_WALLET_ADDRESS + ". " + VAR_LAST_ERROR)
               mess = tmp
               _url_temp = "https://api.telegram.org/bot"+ RESOURCE_471332 + "/sendMessage?chat_id=" + RESOURCE_303990 + "&text=" + mess + (false === true || false === true ? '&parse_mode=HTML' : '')
               _switch_http_client_internal()
               http_client_get2(_url_temp, {method:("GET")})!
               var json = JSON.parse(http_client_content())
               _switch_http_client_main()
               if (!json['ok'])
               fail(json['description'], false)
               section_end()!

            })!
            section_end()!

         },null)!
         section_end()!

         section_start("\u007b\u0022c\u0022:\u00225\u0022\u007d", 37991951)!
         /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1dBU19FUlJPUl1dIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
         _set_if_expression("W1tXQVNfRVJST1JdXQ==");
         _if(VAR_WAS_ERROR,function(){
         section_insert()
            section_start("", 224373294)!
            /*Dat:eyJzIjoiZmFpbCIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJGYWlsTWVzc2FnZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoi0J7RiNC40LHQutCwIDcg0YDQsNC3IiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiQ2hlY2siLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjp0cnVlfV19*/
            fail_user("Ошибка 7 раз",true)
            section_end()!

         })!
         section_end()!

         section_start("", 331707065)!
         /*Dat:eyJzIjoiZmFpbCIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJGYWlsTWVzc2FnZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoi0J7RiNC40LHQutCwIDcg0YDQsNC3IiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiQ2hlY2siLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjp0cnVlfV19*/
         fail_user("Ошибка 7 раз",true)
         section_end()!

      })!
      section_end()!

      section_start("", 325340641)!
      /*Dat:eyJzIjoiZmlsZXN5c3RlbV9maWxlX3RvX2xpc3QiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiVmFsdWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbUFJPRklMRV9GT0xERVJdXS90YXNrcy5jc3YiLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJTYXZlIiwidHlwZSI6InZhciIsImRhdGEiOiJUQVNLX0xJU1QifV19*/
      {
      var d = native("filesystem", "readfile", JSON.stringify({value: VAR_PROFILE_FOLDER + "/tasks.csv",base64:false,from:0,to:0}))
      VAR_TASK_LIST	= (d.length == 0) ? [] : d.split(/\r?\n/)
      }
      section_end()!

      section_start("", 987669314)!
      /*Dat:eyJzIjoiRGVsZXRlQnlWYWx1ZSIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJWYXJpYWJsZSIsInR5cGUiOiJ2YXIiLCJkYXRhIjoiVEFTS19MSVNUIn0seyJpZCI6IlZhbHVlIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJcIlwiIiwiY2xhc3MiOiJleHByZXNzaW9uIn1dfQ==*/
      VAR_TASK_LIST = VAR_TASK_LIST.filter(function(e){return e!== "" })
      section_end()!

      section_start("", 898817585)!
      /*Dat:eyJzIjoiRGVsZXRlQnlWYWx1ZSIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJWYXJpYWJsZSIsInR5cGUiOiJ2YXIiLCJkYXRhIjoiVEFTS19MSVNUIn0seyJpZCI6IlZhbHVlIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJcIiBcIiIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
      VAR_TASK_LIST = VAR_TASK_LIST.filter(function(e){return e!== " " })
      section_end()!

      section_start("\u007b\u0022f\u0022:true\u007d", 755664088)!
      /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfTElTVF1dLmxlbmd0aD09MCIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9LHsiaWQiOiJJZkVsc2UiLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjpmYWxzZX1dfQ==*/
      _set_if_expression("W1tUQVNLX0xJU1RdXS5sZW5ndGg9PTA=");
      _if(VAR_TASK_LIST.length==0,function(){
      section_insert()
         section_start("", 475851644)!
         /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJ7e2FsZXJ0X3RnfX09PVwi0LTQsFwiIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
         RS("alert_tg", false, false)!
         RESOURCE_351581 = _result().get()
         _set_if_expression("e3thbGVydF90Z319PT0i0LTQsCI=");
         _if(RESOURCE_351581=="да",function(){
         section_insert()
            section_start("", 314079576)!
            /*Dat:eyJzIjoiU2VuZE1lc3NhZ2UiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiVG9rZW4iLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Int7dGdfYm90X3Rva2VufX0iLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJJZENoYXQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Int7dGdfY2hhdF9pZH19IiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiTWVzc2FnZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiW1tQUk9GSUxFX0ZPTERFUl9OQU1FXV0g0JfQsNCy0LXRgNGI0LjQuyDQstGB0LUg0LfQsNC00LDRh9C4ICIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6IkNoZWNrIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9LHsiaWQiOiJDaGVjazEiLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjpmYWxzZX1dfQ==*/
            RS("tg_bot_token", false, false)!
            RESOURCE_289031 = _result().get()
            RS("tg_chat_id", false, false)!
            RESOURCE_650836 = _result().get()
            var getTime = function() {
            var checkTime = function (i) {
            return (i < 10) ? "0" + i : i;
            }
            var d = new Date();
            var hh = checkTime(d.getHours());
            var mm = checkTime(d.getMinutes());
            var ss = checkTime(d.getSeconds());
            return '[' + hh + ':' + mm + ':' + ss + ']'
            }
            var mess, _url_temp, json, tmp = "";
            tmp = encodeURIComponent(VAR_PROFILE_FOLDER_NAME + " Завершил все задачи ")
            mess = tmp
            _url_temp = "https://api.telegram.org/bot"+ RESOURCE_289031 + "/sendMessage?chat_id=" + RESOURCE_650836 + "&text=" + mess + (false === true || false === true ? '&parse_mode=HTML' : '')
            _switch_http_client_internal()
            http_client_get2(_url_temp, {method:("GET")})!
            var json = JSON.parse(http_client_content())
            _switch_http_client_main()
            if (!json['ok'])
            fail(json['description'], false)
            section_end()!

         })!
         section_end()!

         section_start("", 1680733)!
         /*Dat:eyJzIjoic3VjY2VzcyIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJTdWNjZXNzTWVzc2FnZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoi0JfQsNCy0LXRgNGI0LjQuyDQstGB0LUg0LfQsNC00LDRh9C4IiwiY2xhc3MiOiJzdHJpbmcifV19*/
         success("Завершил все задачи")
         section_end()!

      })!
      section_end()!

      section_start("", 393371123)!
      /*Dat:eyJzIjoiRmlyc3RMaXN0RWxlbWVudCIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJWYXJpYWJsZSIsInR5cGUiOiJ2YXIiLCJkYXRhIjoiVEFTS19MSVNUIn0seyJpZCI6IkNoZWNrIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9LHsiaWQiOiJWYXJpYWJsZVJlc3VsdCIsInR5cGUiOiJ2YXIiLCJkYXRhIjoidGFzayJ9XX0=*/
      VAR_TASK = (VAR_TASK_LIST)[0];
      section_end()!

      section_start("", 814588527)!
      /*Dat:eyJzIjoiTGlzdExlbmd0aCIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJWYXJpYWJsZSIsInR5cGUiOiJ2YXIiLCJkYXRhIjoiVEFTS19MSVNUIn0seyJpZCI6IlZhcmlhYmxlTGVuZ3RoIiwidHlwZSI6InZhciIsImRhdGEiOiJ0YXNrc19hbW91bnQifV19*/
      VAR_TASKS_AMOUNT = (VAR_TASK_LIST).length
      section_end()!

      section_start("", 627210623)!
      /*Dat:eyJzIjoic2V0dmFyaWFibGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2V0VmFyaWFibGVOYW1lIiwidHlwZSI6InZhciIsImRhdGEiOiJ0YXNrc19hbW91bnQifSx7ImlkIjoiU2V0VmFyaWFibGVWYWx1ZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiTnVtYmVyKFtbVEFTS1NfQU1PVU5UX1NUQVJUXV0pLU51bWJlcihbW1RBU0tTX0FNT1VOVF1dKSIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
      VAR_TASKS_AMOUNT = Number(VAR_TASKS_AMOUNT_START)-Number(VAR_TASKS_AMOUNT)
      section_end()!

      section_start("", 521369114)!
      /*Dat:eyJzIjoic2V0dmFyaWFibGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2V0VmFyaWFibGVOYW1lIiwidHlwZSI6InZhciIsImRhdGEiOiJ0YXNrX3BlcmNlbnQifSx7ImlkIjoiU2V0VmFyaWFibGVWYWx1ZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiKChOdW1iZXIoW1tUQVNLU19BTU9VTlRdXSkvTnVtYmVyKFtbVEFTS1NfQU1PVU5UX1NUQVJUXV0pKSoxMDApLnRvRml4ZWQoMSkrXCIlXCIiLCJjbGFzcyI6ImV4cHJlc3Npb24ifV19*/
      VAR_TASK_PERCENT = ((Number(VAR_TASKS_AMOUNT)/Number(VAR_TASKS_AMOUNT_START))*100).toFixed(1)+"%"
      section_end()!

      section_start("\u007b\u0022n\u0022:\u0022Обозначение переменных\u0022,\u0022c\u0022:\u00221\u0022\u007d", 558129395)!
      /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ImFyciA9IFtbVEFTS11dLnNwbGl0KFwiO1wiKVxyXG5bW1RBU0tfQUNUSVZJVFldXSA9IGFyclswXVxyXG5bW1RBU0tfVFlQRV1dID0gYXJyWzFdO1xyXG5bW1RBU0tfU0laRV9QRVJDRU5UXV0gPSArYXJyWzJdLnNwbGl0KFwiLFwiKS5qb2luKFwiLlwiKTtcclxuW1tUQVNLX05FVFdPUktfSU5dXSA9IGFyclszXTtcclxuW1tUQVNLX0NPSU5fSU5dXSA9IGFycls0XS50cmltKCk7XHJcbltbVEFTS19DT0lOX09VVF1dID0gYXJyWzVdLnRyaW0oKTtcclxuW1tUQVNLX05FVFdPUktfT1VUXV0gPSBhcnJbNl1cclxuXHJcblxyXG4iLCJjbGFzcyI6ImV4cHJlc3Npb24ifV19*/
      arr = VAR_TASK.split(";")
      VAR_TASK_ACTIVITY = arr[0]
      VAR_TASK_TYPE = arr[1];
      VAR_TASK_SIZE_PERCENT = +arr[2].split(",").join(".");
      VAR_TASK_NETWORK_IN = arr[3];
      VAR_TASK_COIN_IN = arr[4].trim();
      VAR_TASK_COIN_OUT = arr[5].trim();
      VAR_TASK_NETWORK_OUT = arr[6]
      section_end()!

      section_start("", 989384738)!
      /*Dat:eyJzIjoibG9nIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkxvZ1RleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Ii0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIiwiY2xhc3MiOiJzdHJpbmcifV19*/
      log("-----------------------------------------------------------------------------------------------------------")
      section_end()!

      section_start("", 811628178)!
      /*Dat:eyJzIjoibG9nIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkxvZ1RleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IltbVEFTS19QRVJDRU5UXV0rIFwiIFtcIitbW1RBU0tTX0FNT1VOVF1dK1wiIC8gXCIrW1tUQVNLU19BTU9VTlRfU1RBUlRdXStcIl0gICAo0LDQutC60LDRg9C90YIgXCIrW1tQUk9GSUxFX0ZPTERFUl9OQU1FXV0rXCIpIFwiIiwiY2xhc3MiOiJleHByZXNzaW9uIn1dfQ==*/
      log(VAR_TASK_PERCENT+ " ["+VAR_TASKS_AMOUNT+" / "+VAR_TASKS_AMOUNT_START+"]   (аккаунт "+VAR_PROFILE_FOLDER_NAME+") ")
      section_end()!

      section_start("", 282436484)!
      /*Dat:eyJzIjoibG9nIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkxvZ1RleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Ilwi0JfQsNC00LDRh9CwIFwiICsgW1tUQVNLXV0ucmVwbGFjZSgvOy9nLFwiIFwiKSIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
      log("Задача " + VAR_TASK.replace(/;/g," "))
      section_end()!

      section_start("", 787276705)!
      /*Dat:eyJzIjoibG9nIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkxvZ1RleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ItCa0L7RiNC10LvQtdC6IFtbV0FMTEVUX0FERFJFU1NdXSIsImNsYXNzIjoic3RyaW5nIn1dfQ==*/
      log("Кошелек " + VAR_WALLET_ADDRESS)
      section_end()!

      section_start("\u007b\u0022n\u0022:\u0022STOP IF NO TASKS\u0022,\u0022c\u0022:\u00225\u0022,\u0022f\u0022:true\u007d", 575909981)!
      /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfQUNUSVZJVFldXSA9PSBcIlwiIHx8IFtbVEFTS19BQ1RJVklUWV1dID09IFwiIFwiIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
      _set_if_expression("W1tUQVNLX0FDVElWSVRZXV0gPT0gIiIgfHwgW1tUQVNLX0FDVElWSVRZXV0gPT0gIiAi");
      _if(VAR_TASK_ACTIVITY == "" || VAR_TASK_ACTIVITY == " ",function(){
      section_insert()
         section_start("", 961329234)!
         /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJ7e2FsZXJ0X3RnfX09PVwi0LTQsFwiIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
         RS("alert_tg", false, false)!
         RESOURCE_351581 = _result().get()
         _set_if_expression("e3thbGVydF90Z319PT0i0LTQsCI=");
         _if(RESOURCE_351581=="да",function(){
         section_insert()
            section_start("", 939737038)!
            /*Dat:eyJzIjoiU2VuZE1lc3NhZ2UiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiVG9rZW4iLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Int7dGdfYm90X3Rva2VufX0iLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJJZENoYXQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Int7dGdfY2hhdF9pZH19IiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiTWVzc2FnZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiW1tQUk9GSUxFX0ZPTERFUl9OQU1FXV0g0JfQsNCy0LXRgNGI0LjQuyDQstGB0LUg0LfQsNC00LDRh9C4ICIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6IkNoZWNrIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9LHsiaWQiOiJDaGVjazEiLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjpmYWxzZX1dfQ==*/
            RS("tg_bot_token", false, false)!
            RESOURCE_289031 = _result().get()
            RS("tg_chat_id", false, false)!
            RESOURCE_650836 = _result().get()
            var getTime = function() {
            var checkTime = function (i) {
            return (i < 10) ? "0" + i : i;
            }
            var d = new Date();
            var hh = checkTime(d.getHours());
            var mm = checkTime(d.getMinutes());
            var ss = checkTime(d.getSeconds());
            return '[' + hh + ':' + mm + ':' + ss + ']'
            }
            var mess, _url_temp, json, tmp = "";
            tmp = encodeURIComponent(VAR_PROFILE_FOLDER_NAME + " Завершил все задачи ")
            mess = tmp
            _url_temp = "https://api.telegram.org/bot"+ RESOURCE_289031 + "/sendMessage?chat_id=" + RESOURCE_650836 + "&text=" + mess + (false === true || false === true ? '&parse_mode=HTML' : '')
            _switch_http_client_internal()
            http_client_get2(_url_temp, {method:("GET")})!
            var json = JSON.parse(http_client_content())
            _switch_http_client_main()
            if (!json['ok'])
            fail(json['description'], false)
            section_end()!

         })!
         section_end()!

         section_start("", 967492436)!
         /*Dat:eyJzIjoic3VjY2VzcyIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJTdWNjZXNzTWVzc2FnZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoi0JfQsNCy0LXRgNGI0LjQuyDQstGB0LUg0LfQsNC00LDRh9C4IiwiY2xhc3MiOiJzdHJpbmcifV19*/
         success("Завершил все задачи")
         section_end()!

      })!
      section_end()!

      section_start("\u007b\u0022n\u0022:\u0022SLEEP\u0022,\u0022c\u0022:\u00224\u0022,\u0022f\u0022:true\u007d", 704777220)!
      /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJTdHJpbmcoW1tUQVNLX0FDVElWSVRZXV0pLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihcInNsZWVwXCIpID49IDAiLCJjbGFzcyI6ImV4cHJlc3Npb24ifSx7ImlkIjoiSWZFbHNlIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9XX0=*/
      _set_if_expression("U3RyaW5nKFtbVEFTS19BQ1RJVklUWV1dKS50b0xvd2VyQ2FzZSgpLmluZGV4T2YoInNsZWVwIikgPj0gMA==");
      _if(String(VAR_TASK_ACTIVITY).toLowerCase().indexOf("sleep") >= 0,function(){
      section_insert()
         section_start("", 960950280)!
         /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6InZhciB0aW1lID0gW1tUQVNLX1RZUEVdXS5zcGxpdChcIixcIikuam9pbihcIi5cIikuc3BsaXQoXCItXCIpXHJcbnRpbWVbMF0gPSB0aW1lWzBdKjYwKjYwKjEwMDBcclxudGltZVsxXSA9IHRpbWVbMV0qNjAqNjAqMTAwMFxyXG5cclxuZnVuY3Rpb24gZ2VuZXJhdGVSYW5kb21OdW1iZXIobWluLCBtYXgsIGRlY2ltYWxQbGFjZXMpIHtcclxuICB2YXIgcmFuZG9tTnVtID0gTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pICsgbWluO1xyXG4gIHJldHVybiByYW5kb21OdW0udG9GaXhlZChkZWNpbWFsUGxhY2VzKTtcclxufVxyXG52YXIgYSA9IFN0cmluZygrKGdlbmVyYXRlUmFuZG9tTnVtYmVyKCt0aW1lWzBdLCt0aW1lWzFdLDApKSlcclxuW1tTTEVFUF1dID0gYVxyXG5bW01JTlVURVNdXSA9IChhLzEwMDAvNjApLnRvRml4ZWQoMikiLCJjbGFzcyI6ImV4cHJlc3Npb24ifV19*/
         var time = VAR_TASK_TYPE.split(",").join(".").split("-")
         time[0] = time[0]*60*60*1000
         time[1] = time[1]*60*60*1000
         function generateRandomNumber(min, max, decimalPlaces) {
         var randomNum = Math.random() * (max - min) + min;
         return randomNum.toFixed(decimalPlaces);
         }
         var a = String(+(generateRandomNumber(+time[0],+time[1],0)))
         VAR_SLEEP = a
         VAR_MINUTES = (a/1000/60).toFixed(2)
         section_end()!

         section_start("", 887338824)!
         /*Dat:eyJzIjoibG9nIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkxvZ1RleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Ii0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tINCh0J/Qm9CuIFtbTUlOVVRFU11dINC80LjQvdGD0YIiLCJjbGFzcyI6InN0cmluZyJ9XX0=*/
         log("-------------------------------- СПЛЮ " + VAR_MINUTES + " минут")
         section_end()!

         section_start("", 478508358)!
         /*Dat:eyJzIjoic2xlZXAiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoic2xlZXBmcm9tIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIxMDAwIiwiY2xhc3MiOiJpbnQifSx7ImlkIjoic2xlZXB0byIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiMTAwMCIsImNsYXNzIjoiaW50In0seyJpZCI6InNsZWVwZnJvbXRvIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1NMRUVQXV0iLCJjbGFzcyI6ImV4cHJlc3Npb24ifSx7ImlkIjoic2xlZXByYW5kb20iLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjpmYWxzZX1dfQ==*/
         sleep(VAR_SLEEP)!
         section_end()!

      })!
      section_end()!

      section_start("", 413233558)!
      /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1RBU0tfTkVUV09SS19JTl1dLnRvTG93ZXJDYXNlKCkudHJpbSgpPT1cImV0aFwiIHx8IFtbVEFTS19ORVRXT1JLX0lOXV0udG9Mb3dlckNhc2UoKS50cmltKCk9PVwiYXJiaVwiIHx8IFtbVEFTS19ORVRXT1JLX0lOXV0udG9Mb3dlckNhc2UoKS50cmltKCk9PVwib3BcIiB8fCBbW1RBU0tfTkVUV09SS19JTl1dLnRvTG93ZXJDYXNlKCkudHJpbSgpPT1cImF2YXhcIiB8fCBbW1RBU0tfTkVUV09SS19JTl1dLnRvTG93ZXJDYXNlKCkudHJpbSgpPT1cImZ0bVwiIHx8IFtbVEFTS19ORVRXT1JLX0lOXV0udG9Mb3dlckNhc2UoKS50cmltKCk9PVwibWF0aWNcIiB8fCBbW1RBU0tfTkVUV09SS19JTl1dLnRvTG93ZXJDYXNlKCkudHJpbSgpPT1cImJzY1wiIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
      _set_if_expression("W1tUQVNLX05FVFdPUktfSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09ImV0aCIgfHwgW1tUQVNLX05FVFdPUktfSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09ImFyYmkiIHx8IFtbVEFTS19ORVRXT1JLX0lOXV0udG9Mb3dlckNhc2UoKS50cmltKCk9PSJvcCIgfHwgW1tUQVNLX05FVFdPUktfSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09ImF2YXgiIHx8IFtbVEFTS19ORVRXT1JLX0lOXV0udG9Mb3dlckNhc2UoKS50cmltKCk9PSJmdG0iIHx8IFtbVEFTS19ORVRXT1JLX0lOXV0udG9Mb3dlckNhc2UoKS50cmltKCk9PSJtYXRpYyIgfHwgW1tUQVNLX05FVFdPUktfSU5dXS50b0xvd2VyQ2FzZSgpLnRyaW0oKT09ImJzYyI=");
      _if(VAR_TASK_NETWORK_IN.toLowerCase().trim()=="eth" || VAR_TASK_NETWORK_IN.toLowerCase().trim()=="arbi" || VAR_TASK_NETWORK_IN.toLowerCase().trim()=="op" || VAR_TASK_NETWORK_IN.toLowerCase().trim()=="avax" || VAR_TASK_NETWORK_IN.toLowerCase().trim()=="ftm" || VAR_TASK_NETWORK_IN.toLowerCase().trim()=="matic" || VAR_TASK_NETWORK_IN.toLowerCase().trim()=="bsc",function(){
      section_insert()
         section_start("", 657373074)!
         /*Dat:eyJzIjoibG9nIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkxvZ1RleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ItCe0LbQuNC00LDRjiDQs9Cw0LciLCJjbGFzcyI6InN0cmluZyJ9XX0=*/
         log("Ожидаю газ")
         section_end()!

         section_start("", 632963033)!
         /*Dat:eyJzIjoiZXhlY3V0ZWZ1bmN0aW9uIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkZ1bmN0aW9uTmFtZSIsInR5cGUiOiJ0ZXh0IiwiZGF0YSI6ImNoZWNrX2dhc19wcmljZSJ9XX0=*/
         _call_function(check_gas_price,{})!
         _result_function()
         section_end()!

      })!
      section_end()!

      section_start("\u007b\u0022n\u0022:\u0022TASKS\u0022,\u0022c\u0022:\u00224\u0022\u007d", 654014032)!
      /*Dat:eyJzIjoiaWdub3JlZXJyb3JzIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbXX0=*/
      _call(function()
      {
      _on_fail(function(){
      VAR_LAST_ERROR = _result()
      VAR_ERROR_ID = ScriptWorker.GetCurrentAction()
      VAR_WAS_ERROR = false
      _break(1,true)
      })
      CYCLES.Current().RemoveLabel("function")
      section_insert()
         section_start("", 292329420)!
         /*Dat:eyJzIjoiZXhlY3V0ZWZ1bmN0aW9uIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkZ1bmN0aW9uTmFtZSIsInR5cGUiOiJ0ZXh0IiwiZGF0YSI6ImRvX3Rhc2sifV19*/
         _call_function(do_task,{})!
         _result_function()
         section_end()!

      },null)!
      section_end()!

      section_start("\u007b\u0022n\u0022:\u0022TASKS\u0022,\u0022c\u0022:\u00224\u0022\u007d", 503542637)!
      /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1dBU19FUlJPUl1dIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
      _set_if_expression("W1tXQVNfRVJST1JdXQ==");
      _if(typeof(VAR_WAS_ERROR) !== "undefined" ? (VAR_WAS_ERROR) : undefined,function(){
      section_insert()
         section_start("", 889704693)!
         /*Dat:eyJzIjoibG9nIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkxvZ1RleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ItCe0YjQuNCx0LrQsCDQsiDQutC+0L3RgtGA0LDQutGC0LDRhSwg0L/QvtCy0YLQvtGA0Y/Rji4gW1tMQVNUX0VSUk9SXV0iLCJjbGFzcyI6InN0cmluZyJ9XX0=*/
         log("Ошибка в контрактах, повторяю. " + VAR_LAST_ERROR)
         section_end()!

         section_start("", 930351103)!
         /*Dat:eyJzIjoic2xlZXAiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoic2xlZXBmcm9tIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiI1MDAwMCIsImNsYXNzIjoiaW50In0seyJpZCI6InNsZWVwdG8iLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IjQwMDAwIiwiY2xhc3MiOiJpbnQifSx7ImlkIjoic2xlZXBmcm9tdG8iLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IjQwMDAwIiwiY2xhc3MiOiJpbnQifSx7ImlkIjoic2xlZXByYW5kb20iLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjp0cnVlfV19*/
         sleep(rand(50000,40000))!
         section_end()!

         section_start("", 122071663)!
         /*Dat:eyJzIjoic2V0dmFyaWFibGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2V0VmFyaWFibGVOYW1lIiwidHlwZSI6InZhciIsImRhdGEiOiJub25jZV9BRlRFUiJ9LHsiaWQiOiJTZXRWYXJpYWJsZVZhbHVlIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJuIiwiY2xhc3MiOiJzdHJpbmcifV19*/
         VAR_NONCE_AFTER = "n"
         section_end()!

         section_start("\u007b\u0022n\u0022:\u0022NONCE\u0022,\u0022c\u0022:\u00224\u0022,\u0022f\u0022:true\u007d", 78203237)!
         /*Dat:eyJzIjoiaWdub3JlZXJyb3JzIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbXX0=*/
         _call(function()
         {
         _on_fail(function(){
         VAR_LAST_ERROR = _result()
         VAR_ERROR_ID = ScriptWorker.GetCurrentAction()
         VAR_WAS_ERROR = false
         _break(1,true)
         })
         CYCLES.Current().RemoveLabel("function")
         section_insert()
            section_start("", 489610658)!
            /*Dat:eyJzIjoiRW1iZWRkZWRMYW5ndWFnZXNOb2RlSnMiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMSIsInV0aSI6IjEwMDAwMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiTm9kZVZlcnNpb25MaXN0IiwidHlwZSI6InNlbGVjdCIsImRhdGEiOiIxOC4xMC4wIn0seyJpZCI6Ik5hbWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IjM5cGdxYTlkdGplIiwiY2xhc3MiOiJzdHJpbmcifV19*/
            /*VAR_ETH_RPC VAR_BNB_RPC VAR_AVAX_RPC VAR_MATIC_RPC VAR_ARBI_RPC VAR_OP_RPC VAR_FANTOM_RPC VAR_APTOS_RPC VAR_TASK_NETWORK_IN_S VAR_NONCE_AFTER VAR_TASK_NETWORK_IN_S VAR_PRIVATE_KEY_APT VAR_NONCE_AFTER VAR_TASK_NETWORK_IN_S VAR_PRIVATE_KEY*/
            _embedded("39pgqa9dtje", "Node", "18.10.0", "ETH_RPC,BNB_RPC,AVAX_RPC,MATIC_RPC,ARBI_RPC,OP_RPC,FANTOM_RPC,APTOS_RPC,TASK_NETWORK_IN_S,NONCE_AFTER,TASK_NETWORK_IN_S,PRIVATE_KEY_APT,NONCE_AFTER,TASK_NETWORK_IN_S,PRIVATE_KEY", 100000000 )!
            section_end()!

         },null)!
         section_end()!

         section_start("\u007b\u0022n\u0022:\u0022NONCE\u0022,\u0022c\u0022:\u00224\u0022,\u0022f\u0022:true\u007d", 431610644)!
         /*Dat:eyJzIjoid2hpbGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiV2hpbGVFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1dBU19FUlJPUl1dIHx8IFtbTk9OQ0VfQUZURVJdXSA9PSBcIm5cIiIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
         _do(function(){
         _set_action_info({ name: "While" });
         VAR_CYCLE_INDEX = _iterator() - 1
         BREAK_CONDITION = VAR_WAS_ERROR || VAR_NONCE_AFTER == "n";
         if(!BREAK_CONDITION)_break();
         section_insert()
            section_start("", 624174698)!
            /*Dat:eyJzIjoic2xlZXAiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoic2xlZXBmcm9tIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIxMDAwIiwiY2xhc3MiOiJpbnQifSx7ImlkIjoic2xlZXB0byIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiMTAwMCIsImNsYXNzIjoiaW50In0seyJpZCI6InNsZWVwZnJvbXRvIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIxMDAwIiwiY2xhc3MiOiJpbnQifSx7ImlkIjoic2xlZXByYW5kb20iLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjpmYWxzZX1dfQ==*/
            sleep(1000)!
            section_end()!

            section_start("", 462552426)!
            /*Dat:eyJzIjoiaWdub3JlZXJyb3JzIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbXX0=*/
            _call(function()
            {
            _on_fail(function(){
            VAR_LAST_ERROR = _result()
            VAR_ERROR_ID = ScriptWorker.GetCurrentAction()
            VAR_WAS_ERROR = false
            _break(1,true)
            })
            CYCLES.Current().RemoveLabel("function")
            section_insert()
               section_start("", 696770213)!
               /*Dat:eyJzIjoiRW1iZWRkZWRMYW5ndWFnZXNOb2RlSnMiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMSIsInV0aSI6IjEwMDAwMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiTm9kZVZlcnNpb25MaXN0IiwidHlwZSI6InNlbGVjdCIsImRhdGEiOiIxOC4xMC4wIn0seyJpZCI6Ik5hbWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6InJvZjBsaW5jbXBpIiwiY2xhc3MiOiJzdHJpbmcifV19*/
               /*VAR_ETH_RPC VAR_BNB_RPC VAR_AVAX_RPC VAR_MATIC_RPC VAR_ARBI_RPC VAR_OP_RPC VAR_FANTOM_RPC VAR_APTOS_RPC VAR_TASK_NETWORK_IN_S VAR_NONCE_AFTER VAR_TASK_NETWORK_IN_S VAR_PRIVATE_KEY_APT VAR_NONCE_AFTER VAR_TASK_NETWORK_IN_S VAR_PRIVATE_KEY*/
               _embedded("rof0lincmpi", "Node", "18.10.0", "ETH_RPC,BNB_RPC,AVAX_RPC,MATIC_RPC,ARBI_RPC,OP_RPC,FANTOM_RPC,APTOS_RPC,TASK_NETWORK_IN_S,NONCE_AFTER,TASK_NETWORK_IN_S,PRIVATE_KEY_APT,NONCE_AFTER,TASK_NETWORK_IN_S,PRIVATE_KEY", 100000000 )!
               section_end()!

            },null)!
            section_end()!

         })!
         section_end()!

         section_start("\u007b\u0022n\u0022:\u0022Транза прошла\u0022\u007d", 573129931)!
         /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJyb2xlIjoibWFzdGVyIiwic2xhdmUiOjc3MTYwMjYyNSwibWFzdGVyIjo0ODg2MDM2MTgsImlmX3ZhciI6Il9jeWNsZV9wYXJhbXMoKS5pZl9lbHNlIiwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IklmRXhwcmVzc2lvbiIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiW1tOT05DRV9CRUZPUkVdXSA8IFtbTk9OQ0VfQUZURVJdXSIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9LHsiaWQiOiJJZkVsc2UiLCJ0eXBlIjoiY2hlY2siLCJkYXRhIjp0cnVlfV19*/
         _cycle_params().if_else = VAR_NONCE_BEFORE < VAR_NONCE_AFTER;
         _set_if_expression("W1tOT05DRV9CRUZPUkVdXSA8IFtbTk9OQ0VfQUZURVJdXQ==");
         _if(_cycle_params().if_else,function(){
         section_insert()
            section_start("", 679272302)!
            /*Dat:eyJzIjoic2V0dmFyaWFibGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2V0VmFyaWFibGVOYW1lIiwidHlwZSI6InZhciIsImRhdGEiOiJJU19MQVNUX0FQUFJPVkUifSx7ImlkIjoiU2V0VmFyaWFibGVWYWx1ZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoibiIsImNsYXNzIjoic3RyaW5nIn1dfQ==*/
            VAR_IS_LAST_APPROVE = "n"
            section_end()!

            section_start("\u007b\u0022n\u0022:\u0022is approve?\u0022,\u0022c\u0022:\u00224\u0022\u007d", 49744585)!
            /*Dat:eyJzIjoiaWdub3JlZXJyb3JzIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbXX0=*/
            _call(function()
            {
            _on_fail(function(){
            VAR_LAST_ERROR = _result()
            VAR_ERROR_ID = ScriptWorker.GetCurrentAction()
            VAR_WAS_ERROR = false
            _break(1,true)
            })
            CYCLES.Current().RemoveLabel("function")
            section_insert()
               section_start("", 185207238)!
               /*Dat:eyJzIjoiRW1iZWRkZWRMYW5ndWFnZXNOb2RlSnMiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMSIsInV0aSI6IjEwMDAwMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiTm9kZVZlcnNpb25MaXN0IiwidHlwZSI6InNlbGVjdCIsImRhdGEiOiIxOC4xMC4wIn0seyJpZCI6Ik5hbWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IjZodzNqYTAyMTh3IiwiY2xhc3MiOiJzdHJpbmcifV19*/
               /*VAR_ETH_RPC VAR_BNB_RPC VAR_AVAX_RPC VAR_MATIC_RPC VAR_ARBI_RPC VAR_OP_RPC VAR_FANTOM_RPC VAR_IS_LAST_APPROVE VAR_TASK_NETWORK_IN_S VAR_WALLET_ADDRESS*/
               _embedded("6hw3ja0218w", "Node", "18.10.0", "ETH_RPC,BNB_RPC,AVAX_RPC,MATIC_RPC,ARBI_RPC,OP_RPC,FANTOM_RPC,IS_LAST_APPROVE,TASK_NETWORK_IN_S,WALLET_ADDRESS", 100000000 )!
               section_end()!

            },null)!
            section_end()!

            section_start("\u007b\u0022f\u0022:true\u007d", 325846488)!
            /*Dat:eyJzIjoid2hpbGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiV2hpbGVFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1dBU19FUlJPUl1dIHx8IHR5cGVvZiBbW0lTX0xBU1RfQVBQUk9WRV1dICE9IFwiYm9vbGVhblwiIiwiY2xhc3MiOiJleHByZXNzaW9uIn1dfQ==*/
            _do(function(){
            _set_action_info({ name: "While" });
            VAR_CYCLE_INDEX = _iterator() - 1
            BREAK_CONDITION = VAR_WAS_ERROR || typeof VAR_IS_LAST_APPROVE != "boolean";
            if(!BREAK_CONDITION)_break();
            section_insert()
               section_start("", 276524231)!
               /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW0NZQ0xFX0lOREVYXV0gPiA1IiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
               _set_if_expression("W1tDWUNMRV9JTkRFWF1dID4gNQ==");
               _if(VAR_CYCLE_INDEX > 5,function(){
               section_insert()
                  section_start("\u007b\u0022f\u0022:true\u007d", 191804379)!
                  /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJ7e2FsZXJ0X3RnfX09PVwi0LTQsFwiIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
                  RS("alert_tg", false, false)!
                  RESOURCE_351581 = _result().get()
                  _set_if_expression("e3thbGVydF90Z319PT0i0LTQsCI=");
                  _if(RESOURCE_351581=="да",function(){
                  section_insert()
                     section_start("", 896088474)!
                     /*Dat:eyJzIjoiU2VuZE1lc3NhZ2UiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiVG9rZW4iLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Int7dGdfYm90X3Rva2VufX0iLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJJZENoYXQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6Int7dGdfY2hhdF9pZH19IiwiY2xhc3MiOiJzdHJpbmcifSx7ImlkIjoiTWVzc2FnZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiW1tQUk9GSUxFX0ZPTERFUl9OQU1FXV0gQVBJIEVSUk9SLiDQn9C+0LbQsNC70YPQudGB0YLQsCwg0L7QsdGA0LDRgtC40YLQtdGB0Ywg0Log0LDQtNC80LjQvdC40YHRgtGA0LDRgtC+0YDRgyAiLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJDaGVjayIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfSx7ImlkIjoiQ2hlY2sxIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9XX0=*/
                     RS("tg_bot_token", false, false)!
                     RESOURCE_293524 = _result().get()
                     RS("tg_chat_id", false, false)!
                     RESOURCE_861051 = _result().get()
                     var getTime = function() {
                     var checkTime = function (i) {
                     return (i < 10) ? "0" + i : i;
                     }
                     var d = new Date();
                     var hh = checkTime(d.getHours());
                     var mm = checkTime(d.getMinutes());
                     var ss = checkTime(d.getSeconds());
                     return '[' + hh + ':' + mm + ':' + ss + ']'
                     }
                     var mess, _url_temp, json, tmp = "";
                     tmp = encodeURIComponent(VAR_PROFILE_FOLDER_NAME + " API ERROR. Пожалуйста, обратитесь к администратору ")
                     mess = tmp
                     _url_temp = "https://api.telegram.org/bot"+ RESOURCE_293524 + "/sendMessage?chat_id=" + RESOURCE_861051 + "&text=" + mess + (false === true || false === true ? '&parse_mode=HTML' : '')
                     _switch_http_client_internal()
                     http_client_get2(_url_temp, {method:("GET")})!
                     var json = JSON.parse(http_client_content())
                     _switch_http_client_main()
                     if (!json['ok'])
                     fail(json['description'], false)
                     section_end()!

                  })!
                  section_end()!

                  section_start("", 374961622)!
                  /*Dat:eyJzIjoiZmFpbCIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJGYWlsTWVzc2FnZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiQVBJIEVSUk9SLiDQn9C+0LbQsNC70YPQudGB0YLQsCwg0L7QsdGA0LDRgtC40YLQtdGB0Ywg0Log0LDQtNC80LjQvdC40YHRgtGA0LDRgtC+0YDRgyAiLCJjbGFzcyI6InN0cmluZyJ9LHsiaWQiOiJDaGVjayIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
                  fail_user("API ERROR. Пожалуйста, обратитесь к администратору ",false)
                  section_end()!

               })!
               section_end()!

               section_start("", 620181562)!
               /*Dat:eyJzIjoic2xlZXAiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoic2xlZXBmcm9tIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIxMDAwIiwiY2xhc3MiOiJpbnQifSx7ImlkIjoic2xlZXB0byIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiMTAwMCIsImNsYXNzIjoiaW50In0seyJpZCI6InNsZWVwZnJvbXRvIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIxMDAwMCIsImNsYXNzIjoiaW50In0seyJpZCI6InNsZWVwcmFuZG9tIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9XX0=*/
               sleep(10000)!
               section_end()!

               section_start("", 884470868)!
               /*Dat:eyJzIjoiaWdub3JlZXJyb3JzIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbXX0=*/
               _call(function()
               {
               _on_fail(function(){
               VAR_LAST_ERROR = _result()
               VAR_ERROR_ID = ScriptWorker.GetCurrentAction()
               VAR_WAS_ERROR = false
               _break(1,true)
               })
               CYCLES.Current().RemoveLabel("function")
               section_insert()
                  section_start("", 936550851)!
                  /*Dat:eyJzIjoiRW1iZWRkZWRMYW5ndWFnZXNOb2RlSnMiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMSIsInV0aSI6IjEwMDAwMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiTm9kZVZlcnNpb25MaXN0IiwidHlwZSI6InNlbGVjdCIsImRhdGEiOiIxOC4xMC4wIn0seyJpZCI6Ik5hbWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IjB3ZjZueWl4Z2JhYyIsImNsYXNzIjoic3RyaW5nIn1dfQ==*/
                  /*VAR_ETH_RPC VAR_BNB_RPC VAR_AVAX_RPC VAR_MATIC_RPC VAR_ARBI_RPC VAR_OP_RPC VAR_FANTOM_RPC VAR_IS_LAST_APPROVE VAR_TASK_NETWORK_IN_S VAR_WALLET_ADDRESS*/
                  _embedded("0wf6nyixgbac", "Node", "18.10.0", "ETH_RPC,BNB_RPC,AVAX_RPC,MATIC_RPC,ARBI_RPC,OP_RPC,FANTOM_RPC,IS_LAST_APPROVE,TASK_NETWORK_IN_S,WALLET_ADDRESS", 100000000 )!
                  section_end()!

               },null)!
               section_end()!

            })!
            section_end()!

            section_start("\u007b\u0022f\u0022:true\u007d", 404566837)!
            /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW0lTX0xBU1RfQVBQUk9WRV1dIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfV19*/
            _set_if_expression("W1tJU19MQVNUX0FQUFJPVkVdXQ==");
            _if(typeof(VAR_IS_LAST_APPROVE) !== "undefined" ? (VAR_IS_LAST_APPROVE) : undefined,function(){
            section_insert()
               section_start("", 110027872)!
               /*Dat:eyJzIjoibG9nIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkxvZ1RleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ItCe0YjQuNCx0LrQsCDQsiDQutC+0L3RgtGA0LDQutGC0LDRhSwg0LDQv9GA0YPQsiDQv9GA0L7RiNC10LssINC90L4g0YLRgNCw0L3Qt9Cw0LrRhtC40Y8g0L3QtdGCLiDQn9C+0LLRgtC+0YDRj9GOIFtbTEFTVF9FUlJPUl1dIiwiY2xhc3MiOiJzdHJpbmcifV19*/
               log("Ошибка в контрактах, апрув прошел, но транзакция нет. Повторяю " + VAR_LAST_ERROR)
               section_end()!

               section_start("", 709321785)!
               /*Dat:eyJzIjoiaW5jdmFyaWFibGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2V0VmFyaWFibGVOYW1lIiwidHlwZSI6InZhciIsImRhdGEiOiJFUlJPUl9DT1VOVEVSIn0seyJpZCI6IkluY1ZhcmlhYmxlVmFsdWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IjEiLCJjbGFzcyI6ImludCJ9XX0=*/
               VAR_ERROR_COUNTER = parseInt(VAR_ERROR_COUNTER) + parseInt(1)
               section_end()!

               section_start("", 699124259)!
               /*Dat:eyJzIjoiY29udGludWUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOltdfQ==*/
               _next("function")
               section_end()!

            })!
            section_end()!

            section_start("\u007b\u0022n\u0022:\u0022is bridge with waiting?\u0022,\u0022c\u0022:\u00222\u0022,\u0022f\u0022:true\u007d", 998546421)!
            /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIoW1tUQVNLX0FDVElWSVRZXV0udG9Mb3dlckNhc2UoKS50cmltKCkgPT0gXCJzdGFyZ2F0ZVwiICYmIFtbVEFTS19UWVBFXV0udG9Mb3dlckNhc2UoKS50cmltKCkgPT0gXCJicmlkZ2VcIikiLCJjbGFzcyI6ImV4cHJlc3Npb24ifSx7ImlkIjoiSWZFbHNlIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9XX0=*/
            _set_if_expression("KFtbVEFTS19BQ1RJVklUWV1dLnRvTG93ZXJDYXNlKCkudHJpbSgpID09ICJzdGFyZ2F0ZSIgJiYgW1tUQVNLX1RZUEVdXS50b0xvd2VyQ2FzZSgpLnRyaW0oKSA9PSAiYnJpZGdlIik=");
            _if((VAR_TASK_ACTIVITY.toLowerCase().trim() == "stargate" && VAR_TASK_TYPE.toLowerCase().trim() == "bridge"),function(){
            section_insert()
               section_start("", 897683040)!
               /*Dat:eyJzIjoic2V0dmFyaWFibGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2V0VmFyaWFibGVOYW1lIiwidHlwZSI6InZhciIsImRhdGEiOiJiYWxhbmNlX2FmdGVyIn0seyJpZCI6IlNldFZhcmlhYmxlVmFsdWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6InVuZGVmaW5lZCIsImNsYXNzIjoiZXhwcmVzc2lvbiJ9XX0=*/
               VAR_BALANCE_AFTER = undefined
               section_end()!

               section_start("", 881282318)!
               /*Dat:eyJzIjoibG9nIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkxvZ1RleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ItC20LTRgyDRgdGA0LXQtNGB0YLQstCwINGBINCx0YDQuNC00LbQsCIsImNsYXNzIjoic3RyaW5nIn1dfQ==*/
               log("жду средства с бриджа")
               section_end()!

               section_start("", 502310620)!
               /*Dat:eyJzIjoiaWdub3JlZXJyb3JzIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbXX0=*/
               _call(function()
               {
               _on_fail(function(){
               VAR_LAST_ERROR = _result()
               VAR_ERROR_ID = ScriptWorker.GetCurrentAction()
               VAR_WAS_ERROR = false
               _break(1,true)
               })
               CYCLES.Current().RemoveLabel("function")
               section_insert()
                  section_start("", 118633603)!
                  /*Dat:eyJzIjoiZXhlY3V0ZWZ1bmN0aW9uIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkZ1bmN0aW9uTmFtZSIsInR5cGUiOiJ0ZXh0IiwiZGF0YSI6ImdldF9iYWxhbmNlX05vdXQifSx7ImlkIjoiUGFyYW1JZF81NDc5NzA2NSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiQWZ0ZXIiLCJjbGFzcyI6InN0cmluZyJ9XX0=*/
                  _call_function(get_balance_Nout,{ "Type" : ("After")  })!
                  _result_function()
                  section_end()!

               },null)!
               section_end()!

               section_start("", 517620274)!
               /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ImlmIChbW0JBTEFOQ0VfQUZURVJdXSA9PSB1bmRlZmluZWQgfHwgIVtbQkFMQU5DRV9BRlRFUl1dKSB7W1tCQUxBTkNFX0FGVEVSXV0gPSBbW0JBTEFOQ0VfQkVGT1JFXV19IiwiY2xhc3MiOiJleHByZXNzaW9uIn1dfQ==*/
               if (VAR_BALANCE_AFTER == undefined || !VAR_BALANCE_AFTER) {VAR_BALANCE_AFTER = VAR_BALANCE_BEFORE}
               section_end()!

               section_start("", 257123697)!
               /*Dat:eyJzIjoid2hpbGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiV2hpbGVFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW1dBU19FUlJPUl1dIHx8ICtbW0JBTEFOQ0VfQkVGT1JFXV0gPT0gK1tbQkFMQU5DRV9BRlRFUl1dIiwiY2xhc3MiOiJleHByZXNzaW9uIn1dfQ==*/
               _do(function(){
               _set_action_info({ name: "While" });
               VAR_CYCLE_INDEX = _iterator() - 1
               BREAK_CONDITION = VAR_WAS_ERROR || +VAR_BALANCE_BEFORE == +VAR_BALANCE_AFTER;
               if(!BREAK_CONDITION)_break();
               section_insert()
                  section_start("", 621494053)!
                  /*Dat:eyJzIjoic2xlZXAiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoic2xlZXBmcm9tIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIxMDAwIiwiY2xhc3MiOiJpbnQifSx7ImlkIjoic2xlZXB0byIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiMTAwMCIsImNsYXNzIjoiaW50In0seyJpZCI6InNsZWVwZnJvbXRvIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIxMDAwMCIsImNsYXNzIjoiaW50In0seyJpZCI6InNsZWVwcmFuZG9tIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9XX0=*/
                  sleep(10000)!
                  section_end()!

                  section_start("", 345648727)!
                  /*Dat:eyJzIjoiaWdub3JlZXJyb3JzIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbXX0=*/
                  _call(function()
                  {
                  _on_fail(function(){
                  VAR_LAST_ERROR = _result()
                  VAR_ERROR_ID = ScriptWorker.GetCurrentAction()
                  VAR_WAS_ERROR = false
                  _break(1,true)
                  })
                  CYCLES.Current().RemoveLabel("function")
                  section_insert()
                     section_start("", 718892790)!
                     /*Dat:eyJzIjoiZXhlY3V0ZWZ1bmN0aW9uIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkZ1bmN0aW9uTmFtZSIsInR5cGUiOiJ0ZXh0IiwiZGF0YSI6ImdldF9iYWxhbmNlX05vdXQifSx7ImlkIjoiUGFyYW1JZF81NDc5NzA2NSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiQWZ0ZXIiLCJjbGFzcyI6InN0cmluZyJ9XX0=*/
                     _call_function(get_balance_Nout,{ "Type" : ("After")  })!
                     _result_function()
                     section_end()!

                  },null)!
                  section_end()!

                  section_start("", 68161277)!
                  /*Dat:eyJzIjoiY3VzdG9tIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkNvZGUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ImlmIChbW0JBTEFOQ0VfQUZURVJdXSA9PSB1bmRlZmluZWQgfHwgIVtbQkFMQU5DRV9BRlRFUl1dKSB7W1tCQUxBTkNFX0FGVEVSXV0gPSBbW0JBTEFOQ0VfQkVGT1JFXV19IiwiY2xhc3MiOiJleHByZXNzaW9uIn1dfQ==*/
                  if (VAR_BALANCE_AFTER == undefined || !VAR_BALANCE_AFTER) {VAR_BALANCE_AFTER = VAR_BALANCE_BEFORE}
                  section_end()!

               })!
               section_end()!

            })!
            section_end()!

            section_start("", 827977993)!
            /*Dat:eyJzIjoiRGVsZXRlQnlJbmRleCIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJWYXJpYWJsZSIsInR5cGUiOiJ2YXIiLCJkYXRhIjoiVEFTS19MSVNUIn0seyJpZCI6IlZhbHVlIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIwIiwiY2xhc3MiOiJpbnQifV19*/
            VAR_TASK_LIST.splice(0,1)
            section_end()!

            section_start("", 226941049)!
            /*Dat:eyJzIjoiZmlsZXN5c3RlbV9saXN0X3RvX2ZpbGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiRmlsZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiW1tQUk9GSUxFX0ZPTERFUl1dL3Rhc2tzLmNzdiIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6IlNhdmUiLCJ0eXBlIjoidmFyIiwiZGF0YSI6IlRBU0tfTElTVCJ9LHsiaWQiOiJDaGVjayIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfSx7ImlkIjoiQ2hlY2syIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9XX0=*/
            native("filesystem", "writefile", JSON.stringify({path: VAR_PROFILE_FOLDER + "/tasks.csv",value: (VAR_TASK_LIST).join("\r\n") + ((false) ? "\r\n" : "" ),base64:false,append:false}))
            section_end()!

            section_start("", 38149438)!
            /*Dat:eyJzIjoibG9nIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkxvZ1RleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ItGC0YDQsNC90LfQsCDQv9GA0L7RiNC70LAsINGB0L/Qu9GOIiwiY2xhc3MiOiJzdHJpbmcifV19*/
            log("транза прошла, сплю")
            section_end()!

            section_start("", 605794667)!
            /*Dat:eyJzIjoic2xlZXAiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoic2xlZXBmcm9tIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIxMDAwIiwiY2xhc3MiOiJpbnQifSx7ImlkIjoic2xlZXB0byIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiMTAwMCIsImNsYXNzIjoiaW50In0seyJpZCI6InNsZWVwZnJvbXRvIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJ7e3RpbWVvdXR9fSo2MCoxMDAwIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6InNsZWVwcmFuZG9tIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9XX0=*/
            RS("timeout", false, false)!
            RESOURCE_852733 = _result().get()
            sleep(RESOURCE_852733*60*1000)!
            section_end()!

            section_start("", 605326199)!
            /*Dat:eyJzIjoiY29udGludWUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOltdfQ==*/
            _next("function")
            section_end()!

         })!
         section_end()!

         section_start("\u007b\u0022n\u0022:\u0022Else\u0022\u007d", 771602625)!
         /*Dat:eyJzIjoiaWYiLCJ2IjoxLCJyb2xlIjoic2xhdmUiLCJzbGF2ZSI6NzcxNjAyNjI1LCJtYXN0ZXIiOjU3MzEyOTkzMSwiaWZfdmFyIjoiX2N5Y2xlX3BhcmFtcygpLmlmX2Vsc2UiLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiSWZFeHByZXNzaW9uIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJbW05PTkNFX0JFRk9SRV1dIDwgW1tOT05DRV9BRlRFUl1dIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6IklmRWxzZSIsInR5cGUiOiJjaGVjayIsImRhdGEiOnRydWV9XX0=*/
         _if(!_cycle_params().if_else,function(){
         section_insert()
            section_start("", 970987702)!
            /*Dat:eyJzIjoibG9nIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkxvZ1RleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ItCe0YjQuNCx0LrQsCDQsiDQutC+0L3RgtGA0LDQutGC0LDRhSwg0L/QvtCy0YLQvtGA0Y/Rji4gW1tMQVNUX0VSUk9SXV0iLCJjbGFzcyI6InN0cmluZyJ9XX0=*/
            log("Ошибка в контрактах, повторяю. " + VAR_LAST_ERROR)
            section_end()!

            section_start("", 538065685)!
            /*Dat:eyJzIjoiaW5jdmFyaWFibGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiU2V0VmFyaWFibGVOYW1lIiwidHlwZSI6InZhciIsImRhdGEiOiJFUlJPUl9DT1VOVEVSIn0seyJpZCI6IkluY1ZhcmlhYmxlVmFsdWUiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6IjEiLCJjbGFzcyI6ImludCJ9XX0=*/
            VAR_ERROR_COUNTER = parseInt(VAR_ERROR_COUNTER) + parseInt(1)
            section_end()!

            section_start("", 721874160)!
            /*Dat:eyJzIjoiY29udGludWUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOltdfQ==*/
            _next("function")
            section_end()!

         })!
         delete _cycle_params().if_else;
         section_end()!

      })!
      section_end()!

      section_start("", 353039561)!
      /*Dat:eyJzIjoiRGVsZXRlQnlJbmRleCIsInYiOjEsImYiOltdLCJ1dyI6IjAiLCJ1dCI6IjAiLCJ1dG8iOiIwIiwidW0iOiIwIiwiZCI6W3siaWQiOiJWYXJpYWJsZSIsInR5cGUiOiJ2YXIiLCJkYXRhIjoiVEFTS19MSVNUIn0seyJpZCI6IlZhbHVlIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIwIiwiY2xhc3MiOiJpbnQifV19*/
      VAR_TASK_LIST.splice(0,1)
      section_end()!

      section_start("", 402825451)!
      /*Dat:eyJzIjoiZmlsZXN5c3RlbV9saXN0X3RvX2ZpbGUiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoiRmlsZSIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiW1tQUk9GSUxFX0ZPTERFUl1dL3Rhc2tzLmNzdiIsImNsYXNzIjoic3RyaW5nIn0seyJpZCI6IlNhdmUiLCJ0eXBlIjoidmFyIiwiZGF0YSI6IlRBU0tfTElTVCJ9LHsiaWQiOiJDaGVjayIsInR5cGUiOiJjaGVjayIsImRhdGEiOmZhbHNlfSx7ImlkIjoiQ2hlY2syIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9XX0=*/
      native("filesystem", "writefile", JSON.stringify({path: VAR_PROFILE_FOLDER + "/tasks.csv",value: (VAR_TASK_LIST).join("\r\n") + ((false) ? "\r\n" : "" ),base64:false,append:false}))
      section_end()!

      section_start("", 871613892)!
      /*Dat:eyJzIjoibG9nIiwidiI6MSwiZiI6W10sInV3IjoiMCIsInV0IjoiMCIsInV0byI6IjAiLCJ1bSI6IjAiLCJkIjpbeyJpZCI6IkxvZ1RleHQiLCJ0eXBlIjoiY29uc3RyIiwiZGF0YSI6ItGB0L/Qu9GOIiwiY2xhc3MiOiJzdHJpbmcifV19*/
      log("сплю")
      section_end()!

      section_start("", 128362337)!
      /*Dat:eyJzIjoic2xlZXAiLCJ2IjoxLCJmIjpbXSwidXciOiIwIiwidXQiOiIwIiwidXRvIjoiMCIsInVtIjoiMCIsImQiOlt7ImlkIjoic2xlZXBmcm9tIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiIxMDAwIiwiY2xhc3MiOiJpbnQifSx7ImlkIjoic2xlZXB0byIsInR5cGUiOiJjb25zdHIiLCJkYXRhIjoiMTAwMCIsImNsYXNzIjoiaW50In0seyJpZCI6InNsZWVwZnJvbXRvIiwidHlwZSI6ImNvbnN0ciIsImRhdGEiOiJ7e3RpbWVvdXR9fSo2MCoxMDAwIiwiY2xhc3MiOiJleHByZXNzaW9uIn0seyJpZCI6InNsZWVwcmFuZG9tIiwidHlwZSI6ImNoZWNrIiwiZGF0YSI6ZmFsc2V9XX0=*/
      RS("timeout", false, false)!
      RESOURCE_852733 = _result().get()
      sleep(RESOURCE_852733*60*1000)!
      section_end()!

   })!
   section_end()!

})!]]></Script>
     <ModuleInfo><![CDATA[{
}
]]></ModuleInfo>
     <Modules>
          <Module Name="CommonCode"><![CDATA[UEsDBBQACAAIAIK8s1Y8r7+QcgoAAMgoAAAJAAAAZW5naW5lLmpz7Vptb9vIEf7sAPkPGyEIyYqSJefsONE5hpImuPaC3CEOUKCWI6zklc1AIlWSyksTA7m06AFN0fZDgX4pWhT9A7m89Nwk9v0F6h91ZnZJLl8kucnhgAYXwFpyd+aZ2dnZmdllulu3b3V/8dnPbl/b+rJ99RrbYEan82Cl0elMGg2OTXNtnZr1hoBmpdFoyKYpmxXZnJfNJ7JZlc2abC7IZl02F2XDqVkZULMqmxVJsoIk56Wg69euXweF2g2jdfpUF5Xd+vLa1auftW9tSV2B0+10/E4n7HTuIRGQ3diu/JSHvLIDJI8q/qRyqRL9JXoeHUVH02fR68pBSxK1fZ8/zFD9LXo+/So6jF4kNFuh77h7GaJ/Tp9On0TH0ZvoeUo26QVFyn8A1avpVyX0t31nxIZiEGbo/x59A5Svo29BjafTPzDQ5S28vsgz+s7e/kLO76DjeZG3v8993g+FHywCOIzeAftx9Hb6LIG4JUbePTEL5F/RKxD5dvqneRBbnh8yHvSFu1uwbHQ8fTJ9Gh2SvV4oVaLvomNGMN/ilNCetJiH0z9qeo2HvK8rxu474T4LxtCbkfFX4H0HEz1SWsLLEUC/BNFfA6S0uPIURkY8jr6BLpgCg/7nDNcUJnZEDFmHirUYTYahMx4KKT5WBWYLXZ4rgh9EodOnBhO3Hzqey7qh3w0fjkXX5SNh4o/16PSpJWdg0haoOwG1coSGcAzf6kPh7oHyl1lT9i9x3wflaWzEx2YswwytR74IJ35eWmgdWC3iVMMAUA+GTl+YDZtelIgaiKjf9RzXNGxmWKzKzO7nGxsbaCa2yQwGc3wbHcLDJfjzfEmTotWaUs6BGAZC6ooKKGW3GztyFH/pB2bY/fyMxJdzUwoieUIVwNr191ObLfV5IJghN7txSZ+Yoe304+g/RisldyejnvDz5PHyHkfvdOKe5w0Fd3PURPcSOL6OXgPXG9xbsCumz2ib/5t85BB+M1Dx6uQl/3b6GyB/M/0dsWRU9Xp3RT/MCweXm/4eSN/A3supy9F18vTvaJ9SKM3T7/JQ5Mlf4VbPG80Xe+LBOK86BqmXoD5GmSfk7vPMsCsGHDZjBkNfX/xLt8meCMlzzXt8OJHrfY/7jN5oAJwJG28g+1oMKBQqdYC7upPhEN0VW3RVM+WG0di87PFjlh1IlgqYc9tSaoOg0tYJKnPcIORuHxWCjCeQhMxbSnFL7F17MEYaZVmgSnWwLCv7XrAOjDmI3uX+3mQkXN1WNtnFJtvCru6H5cbLW7hVFoVIOqiJbX3gDCGal4WZjPnCAyuOI5+yZmYisMUJkXbvgDtD0+w6Qdd1hj0TFUWDkMHgBQKKAdHFKkQf04j+DB6Gjidj9VNWMYAo9GVoQMYKAz+GXCe9kMGOeUYBHelyMZFmCCw2w/h9BIHdQOubxu19UQYcWxwySxCynmB8PqrrhWoWWRJ9ucu3gLSMCevMyWLK2MrrsRuNMnFhYzmu2K2gI6te9PgZeL0CYEaQBlKpFCD4Pc/ZTYhtBqJnI21m6MXAZpUKmhZHZyP35kL33gcbWGWSWGRLVTeWWs4Lu2I0Dh/OgspLYefOEW6athtluHcDz435oImLgVKROI6wJj4libtpgebbFRxIu2vUu1Oh9SySPyolP6hYquQI/Ycybf9864ub9TH3A0HSZd7uc8zDahvH8x9wyPVpXk8s7E9khE9KgTx90fFF0OewTWRoTKwyK+jBuJ1UAfC0lTxlgQzSXklHLjTB8nanc+ds/SfVTdPa7uw8Oni8s1wPRRCSWPQzNJIvi0nTFfdV6DYNEzh3tu/Q3s+d3FRPejyCQLDzeNu06nfOgiRkREEW6rhnWDYens6ek2EH9YIlM4xi0A89mLmfOt4sg8j9s52YRKWqHZCDZzGyjMTKmiTZ9qhAZmdUZKqsoD2wBxXNO2+8LzWPkV1yU9aD8dAJzWW7Ezy2l63i7Cau8yuaH/zNnR6M23H6hYd2/JAgZGaFRWk+cQnbSVIXjjsQQh98MQCPhuk7B0XdXA60fNjteyOYGahgs16SVR1IpkkQbqnOvrcr2rMGrsBAM+4YewESNrT3K/o7H473eU+E0Cc9ux730MFiKdES8vlVAJf7AVBskpUcIdKXpYHnm6g1ELWICJ4z3I4lmSGBX1jDbUIvl9naaktBLFWrjjxKHGROFNU0pgA6HiQQLY0KSloyKcCOn5NlQAg8PLZDxJDZMcZXitSa4Gn0XEUNwR1NhRwz42QUALpzI53RJ6vYoYCaKxcsBUXTuJRQrUH32irL/lteZrUc3XqsCcw1O7S6nirZXNcgGrWLWUqQk4LkUC5qU202NZR27Zc5ygspyvkL2bHmyvkUZlVD4bVf65Q1tnZexWSZiExe3cDUemaDmT16VNUb+FCLnDl2idjlY0/i5IXtalWdOWPPj8d7NH5FjhOF8tJ2xu2uZN7a6IXaGL7FLjlDAfmrlJilhR3vQycmVPtQ8/KsjmAQwoqlx1E0noEcBKPXsAZu6pslPfgqJqoM9IATeH4YB0Mbb2jeLyLGMDIiAgzW/VqlBT02ZWganwmPVNvJWdiOj9CYULI3SCVC9ZsGGEiDcBJDl3h6lNOrMCz1neAmv2lSXuH10Lvh3Rf+VTiRmphWbpIaMIovnCzbS6F6pVA9hOrNguoRVK+lQqaulJwzlU26ANWtnAB40MggjYNn9iihc/CFnpXzkow7ZNg+TdguF9lqzbKY28jftcQVaSFtkRDM3j1yKjQFms7SvLKk7PCdURfvR2VuwOAaJMkPD2obWE/ERMY8T5pZquHhDxkJPOek1GcvLLLmurDC0ETnLmA1HZT1ZtV9d7ap5MvWqNIoVOdV06qurIZDO9Gd8UJrEtVHb85F1jy70JyaIW26x7flpXypVf//7YkzzKkgJ70wjkuyGYE8+QqiLx2aMSeL+k4gTNHNkyYdPBUHYRAVkDEPz0EbM4JPkj6BI13qDEthi+VTLgyVb84k657QoyjVzU2f5dn5R5/6IXxKKz8yn0iE/okEYogoXe+SbNhHwZpj4Ul6VwxFKLQO+tZkJ9+e5HsxzBPW9xCREpEZu5p5dQz6OOt2OgNjsefofKn8ud/2ytSSppmhV2w3Q30yPplWCZeuVu5TqKZKbhFyrpcbPYETFjhmuONJP0BmA2DW9npc+58TaIqSr0uYkQmhOct+sFAFU1oNqS95aaROrhVBkbL9ciJFCnGydLpJgfyekOUGnA9mbl6araK1aaaD2dvCqrWAM1XmbNPIFVrlQSuX2T44cH0vie/H0PVxhK4T5FmZOcV7uF9JGg5C7odBFzWSSTKYwJl24HujgrNqpB+Wa2cyomjtul2/Hon/L1I2yqsbBGDEz82KXoW7Cd5hdF2vCzEVjOyGAQpI4w3OMecJ2GWzxlwlJU0sC56uIw5duZYf1pLbWBDOQE0ybmEdhLtbWAX84FVSLCekH8MqyDkWamaXClQ0n/zqt6B2luTaotygrvyZiERd1mFJyUSHdCCvX20Dp6cN4oIMeRB2aXkVr7bUyepp3qDRnwE/qDXxEkwHgU7JRe7xX1BLBwg8r7+QcgoAAMgoAABQSwMEFAAIAAgAgryzVofhg+KYAgAAkgUAAA0AAABtYW5pZmVzdC5qc29ulVRLbxMxED63Uv+DtedqQ09AT6AicUIcQBygqHKy08Rl116tnSKoKvUBSKgVvXDkIf5BeKRJS5v+Bfsf8dmbTbMhQiLKyzPffDPzzax3lhYZXhFvGaGkjlbZs+fLlS0XG9tUaDhgX6nMzUK91FR4aGmZBCSUk0z0XI9uFSI3JVX0QCXdlFhLScOFFLLNNruyrIB1NSWs+Yop06GCZQGpozlEGzrjaQq6ndIX/BT411SWKQn+hKrI4C263mu/2O/uvR3aM2bP7cj+ikrI7nWSbUpVTsUGZVz4FJHmusNv31q5ecdbYhD9DZY8I4+931HaPJ0D0MIEQMeYXK82GibOqFGiKZngKWtSkuDNDa/Ng2RbSLpWd8oYb+loRnLRKrWe8Aq5qeaq9d/TiOeJ+skr6Q7tb3e8zNy+P9m+27OntjcW272B+9Keu3c4DpeZHQJ2BSBC7AC+vr1wR7bPwLOH40/ALuyQ4auiPvGGeHZeKZftLm9TfX1T1eKpeE1lzwsL0b1S0J1QcWQ/2h6qufQZI08FxCNToP0pzDd3gBZGWJNehXnCC8GbKU2hvoZGUT0+YETDJxX6cYdYzgtshoF+61Etqoeono/yWbxzHLTGJWsSa6KvF1MBXuFTD2bY3yPEHDN75Q7dPv4e2Ysqej1iQjOpDNM5tcSmwG5NSOBEgX0GNdGTHXgNqsCH4bHi6XXB8VT2z2huhMQnPsgd4OTH5uXDY3RV7yWuKO8miRiTajIG4uraBEbl/FHSsEbZZ0HG/bH8Zyh2ODsAZhTTfBu/0Lgg3U3Nv2eCjfsRnnikGvkNcx/Corq3ofZQAzQNYYNyk4FEr9HuzMJlfEsV8+7GTMia48bEMb7Hphe0ui/K22rNX1ZLi7t/AFBLBwiH4YPimAIAAJIFAABQSwECHgMUAAgACACCvLNWPK+/kHIKAADIKAAACQAAAAAAAAABAAAAtoEAAAAAZW5naW5lLmpzUEsBAh4DFAAIAAgAgryzVofhg+KYAgAAkgUAAA0AAAAAAAAAAQAAALaBqQoAAG1hbmlmZXN0Lmpzb25QSwUGAAAAAAIAAgByAAAAfA0AAAAA]]></Module>
     </Modules>
     <EmbeddedData><![CDATA[[{"data":"const Web3 = require('web3');\r\n\r\n\r\nconst web3 = new Web3();\r\nconst privateKey = [[PRIVATE_KEY]];\r\n[[WALLET_ADDRESS]] = web3.eth.accounts.privateKeyToAccount(privateKey).address;\r\n","data_name":"oa78epghdde","data_type":0,"language_name":"Node","language_version":"18.10.0"},{"data":"const { ethers } = require('ethers');\r\n\r\nconst cliSpinner = (() => {\r\n  let intervalId;\r\n\r\n  const print = () => {\r\n    const P = ['\\\\', '|', '/', '-'];\r\n    let x = 0;\r\n    return setInterval(() => {\r\n      process.stdout.write('\\r' + P[x++]);\r\n      x &= 3;\r\n    }, 250);\r\n  };\r\n\r\n  return {\r\n    start: () => {\r\n      intervalId = print();\r\n    },\r\n    stop: () => {\r\n      clearInterval(intervalId);\r\n      process.stdout.write('\\r' + ' ');\r\n    },\r\n  };\r\n})();\r\n\r\nconst routerABI = [\r\n  { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint16',\r\n        name: 'chainId',\r\n        type: 'uint16',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'bytes',\r\n        name: 'srcAddress',\r\n        type: 'bytes',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'nonce',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'address',\r\n        name: 'token',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amountLD',\r\n        type: 'uint256',\r\n      },\r\n      { indexed: false, internalType: 'address', name: 'to', type: 'address' },\r\n      { indexed: false, internalType: 'bytes', name: 'payload', type: 'bytes' },\r\n      { indexed: false, internalType: 'bytes', name: 'reason', type: 'bytes' },\r\n    ],\r\n    name: 'CachedSwapSaved',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'previousOwner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'newOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'OwnershipTransferred',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint16',\r\n        name: 'srcChainId',\r\n        type: 'uint16',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'bytes',\r\n        name: 'srcAddress',\r\n        type: 'bytes',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'uint256',\r\n        name: 'nonce',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'srcPoolId',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'dstPoolId',\r\n        type: 'uint256',\r\n      },\r\n      { indexed: false, internalType: 'address', name: 'to', type: 'address' },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amountSD',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'mintAmountSD',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'RedeemLocalCallback',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint8',\r\n        name: 'bridgeFunctionType',\r\n        type: 'uint8',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint16',\r\n        name: 'chainId',\r\n        type: 'uint16',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'bytes',\r\n        name: 'srcAddress',\r\n        type: 'bytes',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'nonce',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Revert',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint16',\r\n        name: 'srcChainId',\r\n        type: 'uint16',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: '_srcPoolId',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: '_dstPoolId',\r\n        type: 'uint256',\r\n      },\r\n      { indexed: false, internalType: 'bytes', name: 'to', type: 'bytes' },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'redeemAmountSD',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'mintAmountSD',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'uint256',\r\n        name: 'nonce',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'bytes',\r\n        name: 'srcAddress',\r\n        type: 'bytes',\r\n      },\r\n    ],\r\n    name: 'RevertRedeemLocal',\r\n    type: 'event',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n    ],\r\n    name: 'activateChainPath',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_amountLD', type: 'uint256' },\r\n      { internalType: 'address', name: '_to', type: 'address' },\r\n    ],\r\n    name: 'addLiquidity',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'bridge',\r\n    outputs: [{ internalType: 'contract Bridge', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '', type: 'uint16' },\r\n      { internalType: 'bytes', name: '', type: 'bytes' },\r\n      { internalType: 'uint256', name: '', type: 'uint256' },\r\n    ],\r\n    name: 'cachedSwapLookup',\r\n    outputs: [\r\n      { internalType: 'address', name: 'token', type: 'address' },\r\n      { internalType: 'uint256', name: 'amountLD', type: 'uint256' },\r\n      { internalType: 'address', name: 'to', type: 'address' },\r\n      { internalType: 'bytes', name: 'payload', type: 'bytes' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'bool', name: '_fullMode', type: 'bool' },\r\n    ],\r\n    name: 'callDelta',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_srcChainId', type: 'uint16' },\r\n      { internalType: 'bytes', name: '_srcAddress', type: 'bytes' },\r\n      { internalType: 'uint256', name: '_nonce', type: 'uint256' },\r\n    ],\r\n    name: 'clearCachedSwap',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_weight', type: 'uint256' },\r\n    ],\r\n    name: 'createChainPath',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'address', name: '_token', type: 'address' },\r\n      { internalType: 'uint8', name: '_sharedDecimals', type: 'uint8' },\r\n      { internalType: 'uint8', name: '_localDecimals', type: 'uint8' },\r\n      { internalType: 'string', name: '_name', type: 'string' },\r\n      { internalType: 'string', name: '_symbol', type: 'string' },\r\n    ],\r\n    name: 'createPool',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      {\r\n        components: [\r\n          { internalType: 'uint256', name: 'credits', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'idealBalance', type: 'uint256' },\r\n        ],\r\n        internalType: 'struct Pool.CreditObj',\r\n        name: '_c',\r\n        type: 'tuple',\r\n      },\r\n    ],\r\n    name: 'creditChainPath',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'factory',\r\n    outputs: [{ internalType: 'contract Factory', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_srcPoolId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_amountLP', type: 'uint256' },\r\n      { internalType: 'address', name: '_to', type: 'address' },\r\n    ],\r\n    name: 'instantRedeemLocal',\r\n    outputs: [{ internalType: 'uint256', name: 'amountSD', type: 'uint256' }],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'mintFeeOwner',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'owner',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'protocolFeeOwner',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint8', name: '_functionType', type: 'uint8' },\r\n      { internalType: 'bytes', name: '_toAddress', type: 'bytes' },\r\n      { internalType: 'bytes', name: '_transferAndCallPayload', type: 'bytes' },\r\n      {\r\n        components: [\r\n          { internalType: 'uint256', name: 'dstGasForCall', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'dstNativeAmount', type: 'uint256' },\r\n          { internalType: 'bytes', name: 'dstNativeAddr', type: 'bytes' },\r\n        ],\r\n        internalType: 'struct IStargateRouter.lzTxObj',\r\n        name: '_lzTxParams',\r\n        type: 'tuple',\r\n      },\r\n    ],\r\n    name: 'quoteLayerZeroFee',\r\n    outputs: [\r\n      { internalType: 'uint256', name: '', type: 'uint256' },\r\n      { internalType: 'uint256', name: '', type: 'uint256' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      {\r\n        internalType: 'address payable',\r\n        name: '_refundAddress',\r\n        type: 'address',\r\n      },\r\n      { internalType: 'uint256', name: '_amountLP', type: 'uint256' },\r\n      { internalType: 'bytes', name: '_to', type: 'bytes' },\r\n      {\r\n        components: [\r\n          { internalType: 'uint256', name: 'dstGasForCall', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'dstNativeAmount', type: 'uint256' },\r\n          { internalType: 'bytes', name: 'dstNativeAddr', type: 'bytes' },\r\n        ],\r\n        internalType: 'struct IStargateRouter.lzTxObj',\r\n        name: '_lzTxParams',\r\n        type: 'tuple',\r\n      },\r\n    ],\r\n    name: 'redeemLocal',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_srcChainId', type: 'uint16' },\r\n      { internalType: 'bytes', name: '_srcAddress', type: 'bytes' },\r\n      { internalType: 'uint256', name: '_nonce', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      { internalType: 'address', name: '_to', type: 'address' },\r\n      { internalType: 'uint256', name: '_amountSD', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_mintAmountSD', type: 'uint256' },\r\n    ],\r\n    name: 'redeemLocalCallback',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_srcChainId', type: 'uint16' },\r\n      { internalType: 'bytes', name: '_srcAddress', type: 'bytes' },\r\n      { internalType: 'uint256', name: '_nonce', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_amountSD', type: 'uint256' },\r\n      { internalType: 'bytes', name: '_to', type: 'bytes' },\r\n    ],\r\n    name: 'redeemLocalCheckOnRemote',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      {\r\n        internalType: 'address payable',\r\n        name: '_refundAddress',\r\n        type: 'address',\r\n      },\r\n      { internalType: 'uint256', name: '_amountLP', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_minAmountLD', type: 'uint256' },\r\n      { internalType: 'bytes', name: '_to', type: 'bytes' },\r\n      {\r\n        components: [\r\n          { internalType: 'uint256', name: 'dstGasForCall', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'dstNativeAmount', type: 'uint256' },\r\n          { internalType: 'bytes', name: 'dstNativeAddr', type: 'bytes' },\r\n        ],\r\n        internalType: 'struct IStargateRouter.lzTxObj',\r\n        name: '_lzTxParams',\r\n        type: 'tuple',\r\n      },\r\n    ],\r\n    name: 'redeemRemote',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'renounceOwnership',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_srcChainId', type: 'uint16' },\r\n      { internalType: 'bytes', name: '_srcAddress', type: 'bytes' },\r\n      { internalType: 'uint256', name: '_nonce', type: 'uint256' },\r\n    ],\r\n    name: 'retryRevert',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '', type: 'uint16' },\r\n      { internalType: 'bytes', name: '', type: 'bytes' },\r\n      { internalType: 'uint256', name: '', type: 'uint256' },\r\n    ],\r\n    name: 'revertLookup',\r\n    outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'bytes', name: '_srcAddress', type: 'bytes' },\r\n      { internalType: 'uint256', name: '_nonce', type: 'uint256' },\r\n      {\r\n        internalType: 'address payable',\r\n        name: '_refundAddress',\r\n        type: 'address',\r\n      },\r\n      {\r\n        components: [\r\n          { internalType: 'uint256', name: 'dstGasForCall', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'dstNativeAmount', type: 'uint256' },\r\n          { internalType: 'bytes', name: 'dstNativeAddr', type: 'bytes' },\r\n        ],\r\n        internalType: 'struct IStargateRouter.lzTxObj',\r\n        name: '_lzTxParams',\r\n        type: 'tuple',\r\n      },\r\n    ],\r\n    name: 'revertRedeemLocal',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      {\r\n        internalType: 'address payable',\r\n        name: '_refundAddress',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'sendCredits',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'contract Bridge', name: '_bridge', type: 'address' },\r\n      { internalType: 'contract Factory', name: '_factory', type: 'address' },\r\n    ],\r\n    name: 'setBridgeAndFactory',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'bool', name: '_batched', type: 'bool' },\r\n      { internalType: 'uint256', name: '_swapDeltaBP', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_lpDeltaBP', type: 'uint256' },\r\n      { internalType: 'bool', name: '_defaultSwapMode', type: 'bool' },\r\n      { internalType: 'bool', name: '_defaultLPMode', type: 'bool' },\r\n    ],\r\n    name: 'setDeltaParam',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'address', name: '_feeLibraryAddr', type: 'address' },\r\n    ],\r\n    name: 'setFeeLibrary',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_mintFeeBP', type: 'uint256' },\r\n    ],\r\n    name: 'setFees',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: '_owner', type: 'address' }],\r\n    name: 'setMintFeeOwner',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: '_owner', type: 'address' }],\r\n    name: 'setProtocolFeeOwner',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'bool', name: '_swapStop', type: 'bool' },\r\n    ],\r\n    name: 'setSwapStop',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      { internalType: 'uint16', name: '_weight', type: 'uint16' },\r\n    ],\r\n    name: 'setWeightForChainPath',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      {\r\n        internalType: 'address payable',\r\n        name: '_refundAddress',\r\n        type: 'address',\r\n      },\r\n      { internalType: 'uint256', name: '_amountLD', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_minAmountLD', type: 'uint256' },\r\n      {\r\n        components: [\r\n          { internalType: 'uint256', name: 'dstGasForCall', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'dstNativeAmount', type: 'uint256' },\r\n          { internalType: 'bytes', name: 'dstNativeAddr', type: 'bytes' },\r\n        ],\r\n        internalType: 'struct IStargateRouter.lzTxObj',\r\n        name: '_lzTxParams',\r\n        type: 'tuple',\r\n      },\r\n      { internalType: 'bytes', name: '_to', type: 'bytes' },\r\n      { internalType: 'bytes', name: '_payload', type: 'bytes' },\r\n    ],\r\n    name: 'swap',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_srcChainId', type: 'uint16' },\r\n      { internalType: 'bytes', name: '_srcAddress', type: 'bytes' },\r\n      { internalType: 'uint256', name: '_nonce', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstGasForCall', type: 'uint256' },\r\n      { internalType: 'address', name: '_to', type: 'address' },\r\n      {\r\n        components: [\r\n          { internalType: 'uint256', name: 'amount', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'eqFee', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'eqReward', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'lpFee', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'protocolFee', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'lkbRemove', type: 'uint256' },\r\n        ],\r\n        internalType: 'struct Pool.SwapObj',\r\n        name: '_s',\r\n        type: 'tuple',\r\n      },\r\n      { internalType: 'bytes', name: '_payload', type: 'bytes' },\r\n    ],\r\n    name: 'swapRemote',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],\r\n    name: 'transferOwnership',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'address', name: '_to', type: 'address' },\r\n    ],\r\n    name: 'withdrawMintFee',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'address', name: '_to', type: 'address' },\r\n    ],\r\n    name: 'withdrawProtocolFee',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n];\r\n\r\nconst ethRouterABI = [\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: '_stargateEthVault', type: 'address' },\r\n      { internalType: 'address', name: '_stargateRouter', type: 'address' },\r\n      { internalType: 'uint16', name: '_poolId', type: 'uint16' },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'addLiquidityETH',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'poolId',\r\n    outputs: [{ internalType: 'uint16', name: '', type: 'uint16' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'stargateEthVault',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'stargateRouter',\r\n    outputs: [\r\n      { internalType: 'contract IStargateRouter', name: '', type: 'address' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      {\r\n        internalType: 'address payable',\r\n        name: '_refundAddress',\r\n        type: 'address',\r\n      },\r\n      { internalType: 'bytes', name: '_toAddress', type: 'bytes' },\r\n      { internalType: 'uint256', name: '_amountLD', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_minAmountLD', type: 'uint256' },\r\n    ],\r\n    name: 'swapETH',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  { stateMutability: 'payable', type: 'receive' },\r\n];\r\n\r\n// ниже идут возможные варианты обмена\r\n// например можно менять из ethereum usdc на usdt в bnb\r\n\r\nconst paths = {\r\n  ethereum: {\r\n    usdc: [\r\n      'ethereum-usdt',\r\n      'bnb-busd',\r\n      'bnb-usdt',\r\n      'avalanche-usdc',\r\n      'avalanche-usdt',\r\n      'polygon-usdc',\r\n      'polygon-usdt',\r\n      'arbitrum-usdc',\r\n      'arbitrum-usdt',\r\n      'fantom-usdc',\r\n    ],\r\n    usdt: [\r\n      'ethereum-usdc',\r\n      'bnb-busd',\r\n      'bnb-usdt',\r\n      'avalanche-usdc',\r\n      'avalanche-usdt',\r\n      'polygon-usdc',\r\n      'polygon-usdt',\r\n      'arbitrum-usdc',\r\n      'arbitrum-usdt',\r\n      'fantom-usdc',\r\n    ],\r\n    dai: ['polygon-dai', 'optimism-dai'],\r\n    frax: ['avalanche-frax', 'arbitrum-frax', 'optimism-frax'],\r\n    usdd: ['bsc-usdd'],\r\n    susd: ['optimism-susd'],\r\n    lusd: ['arbitrum-lusd', 'optimism-lusd'],\r\n    mai: [\r\n      'bnb-mai',\r\n      'avalanche-mai',\r\n      'polygon-mai',\r\n      'arbitrum-mai',\r\n      'optimism-mai',\r\n    ],\r\n  },\r\n  bnb: {\r\n    busd: [\r\n      'ethereum-usdc',\r\n      'ethereum-usdt',\r\n      'avalanche-usdc',\r\n      'avalanche-usdt',\r\n      'polygon-usdc',\r\n      'polygon-usdt',\r\n      'arbitrum-usdc',\r\n      'arbitrum-usdt',\r\n      'optimism-usdc',\r\n      'fantom-usdc',\r\n    ],\r\n    usdt: [\r\n      'ethereum-usdc',\r\n      'ethereum-usdt',\r\n      'avalanche-usdc',\r\n      'avalanche-usdt',\r\n      'polygon-usdc',\r\n      'polygon-usdt',\r\n      'arbitrum-usdc',\r\n      'arbitrum-usdt',\r\n      'optimism-usdc',\r\n      'fantom-usdc',\r\n    ],\r\n    usdd: ['ethereum-usdd'],\r\n    mai: [\r\n      'ethereum-mai',\r\n      'avalanche-mai',\r\n      'polygon-mai',\r\n      'arbitrum-mai',\r\n      'optimism-mai',\r\n    ],\r\n  },\r\n  avalanche: {\r\n    usdc: [\r\n      'ethereum-usdc',\r\n      'ethereum-usdt',\r\n      'bnb-busd',\r\n      'bnb-usdt',\r\n      'polygon-usdc',\r\n      'polygon-usdt',\r\n      'arbitrum-usdc',\r\n      'arbitrum-usdt',\r\n      'optimism-usdc',\r\n      'fantom-usdc',\r\n    ],\r\n    usdt: [\r\n      'ethereum-usdc',\r\n      'ethereum-usdt',\r\n      'bnb-busd',\r\n      'bnb-usdt',\r\n      'polygon-usdc',\r\n      'polygon-usdt',\r\n      'arbitrum-usdc',\r\n      'arbitrum-usdt',\r\n      'optimism-usdc',\r\n      'fantom-usdc',\r\n    ],\r\n    frax: ['ethereum-frax', 'arbitrum-frax', 'optimism-frax'],\r\n    mai: [\r\n      'ethereum-mai',\r\n      'bnb-mai',\r\n      'polygon-mai',\r\n      'arbitrum-mai',\r\n      'optimism-mai',\r\n    ],\r\n  },\r\n  polygon: {\r\n    usdc: [\r\n      'ethereum-usdc',\r\n      'ethereum-usdt',\r\n      'bnb-busd',\r\n      'bnb-usdt',\r\n      'avalanche-usdc',\r\n      'avalanche-usdt',\r\n      'arbitrum-usdc',\r\n      'arbitrum-usdt',\r\n      'optimism-usdc',\r\n      'fantom-usdc',\r\n    ],\r\n    usdt: [\r\n      'ethereum-usdc',\r\n      'ethereum-usdt',\r\n      'bnb-busd',\r\n      'bnb-usdt',\r\n      'avalanche-usdc',\r\n      'avalanche-usdt',\r\n      'arbitrum-usdc',\r\n      'arbitrum-usdt',\r\n      'optimism-usdc',\r\n      'fantom-usdc',\r\n    ],\r\n    dai: ['ethereum-dai', 'optimism-dai'],\r\n    mai: [\r\n      'ethereum-mai',\r\n      'bnb-mai',\r\n      'avalanche-mai',\r\n      'arbitrum-mai',\r\n      'optimism-mai',\r\n    ],\r\n  },\r\n  arbitrum: {\r\n    usdc: [\r\n      'ethereum-usdc',\r\n      'ethereum-usdt',\r\n      'bnb-busd',\r\n      'bnb-usdt',\r\n      'avalanche-usdc',\r\n      'avalanche-usdt',\r\n      'polygon-usdc',\r\n      'polygon-usdt',\r\n      'optimism-usdc',\r\n      'fantom-usdc',\r\n    ],\r\n    usdt: [\r\n      'ethereum-usdc',\r\n      'ethereum-usdt',\r\n      'bnb-busd',\r\n      'bnb-usdt',\r\n      'avalanche-usdc',\r\n      'avalanche-usdt',\r\n      'polygon-usdc',\r\n      'polygon-usdt',\r\n      'optimism-usdc',\r\n      'fantom-usdc',\r\n    ],\r\n    frax: ['ethereum-frax', 'avalanche-frax', 'optimism-frax'],\r\n    lusd: ['ethereum-lusd', 'optimism-lusd'],\r\n    mai: [\r\n      'ethereum-mai',\r\n      'bnb-mai',\r\n      'avalanche-mai',\r\n      'polygon-mai',\r\n      'optimism-mai',\r\n    ],\r\n  },\r\n  optimism: {\r\n    usdc: [\r\n      'ethereum-usdc',\r\n      'ethereum-usdt',\r\n      'bnb-busd',\r\n      'bnb-usdt',\r\n      'avalanche-usdc',\r\n      'avalanche-usdt',\r\n      'polygon-usdc',\r\n      'polygon-usdt',\r\n      'arbitrum-usdc',\r\n      'arbitrum-usdt',\r\n      'fantom-usdc',\r\n    ],\r\n    dai: ['ethereum-dai', 'polygon-dai'],\r\n    frax: ['ethereum-frax', 'avalanche-frax', 'arbitrum-frax'],\r\n    susd: ['ethereum-susd'],\r\n    lusd: ['ethereum-lusd', 'arbitrum-lusd'],\r\n    mai: [\r\n      'ethereum-mai',\r\n      'bnb-mai',\r\n      'avalanche-mai',\r\n      'polygon-mai',\r\n      'arbitrum-mai',\r\n    ],\r\n  },\r\n  fantom: {\r\n    usdc: [\r\n      'ethereum-usdc',\r\n      'ethereum-usdt',\r\n      'bnb-busd',\r\n      'bnb-usdt',\r\n      'avalanche-usdc',\r\n      'avalanche-usdt',\r\n      'polygon-usdc',\r\n      'polygon-usdt',\r\n      'arbitrum-usdc',\r\n      'arbitrum-usdt',\r\n      'optimism-usdc',\r\n    ],\r\n  },\r\n};\r\n\r\nconst token = {\r\n  ethereum: {\r\n    usdc: {\r\n      id: 1,\r\n      address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\r\n      decimals: 6,\r\n      paths: paths.ethereum.usdc,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\r\n      decimals: 6,\r\n      paths: paths.ethereum.usdt,\r\n    },\r\n    usdd: {\r\n      id: 11,\r\n      address: '0x0C10bF8FcB7Bf5412187A595ab97a3609160b5c6',\r\n      decimals: 18,\r\n      paths: paths.ethereum.usdd,\r\n    },\r\n    dai: {\r\n      id: 3,\r\n      address: '0x6B175474E89094C44Da98b954EedeAC495271d0F',\r\n      decimals: 18,\r\n      paths: paths.ethereum.dai,\r\n    },\r\n    frax: {\r\n      id: 7,\r\n      address: '0x853d955aCEf822Db058eb8505911ED77F175b99e',\r\n      decimals: 18,\r\n      paths: paths.ethereum.frax,\r\n    },\r\n    susd: {\r\n      id: 14,\r\n      address: '0x57Ab1ec28D129707052df4dF418D58a2D46d5f51',\r\n      decimals: 18,\r\n      paths: paths.ethereum.susd,\r\n    },\r\n    lusd: {\r\n      id: 15,\r\n      address: '0x5f98805A4E8be255a32880FDeC7F6728C6568bA0',\r\n      decimals: 18,\r\n      paths: paths.ethereum.lusd,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0x8D6CeBD76f18E1558D4DB88138e2DeFB3909fAD6',\r\n      decimals: 18,\r\n      paths: paths.ethereum.mai,\r\n    },\r\n  },\r\n  avalanche: {\r\n    usdc: {\r\n      id: 1,\r\n      address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',\r\n      decimals: 6,\r\n      paths: paths.avalanche.usdc,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7',\r\n      decimals: 6,\r\n      paths: paths.avalanche.usdt,\r\n    },\r\n    frax: {\r\n      id: 7,\r\n      address: '0xD24C2Ad096400B6FBcd2ad8B24E7acBc21A1da64',\r\n      decimals: 18,\r\n      paths: paths.avalanche.frax,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0x3B55E45fD6bd7d4724F5c47E0d1bCaEdd059263e',\r\n      decimals: 18,\r\n      paths: paths.avalanche.mai,\r\n    },\r\n  },\r\n  bnb: {\r\n    busd: {\r\n      id: 5,\r\n      address: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n      decimals: 18,\r\n      paths: paths.bnb.busd,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0x55d398326f99059ff775485246999027b3197955',\r\n      decimals: 18,\r\n      paths: paths.bnb.usdt,\r\n    },\r\n    usdd: {\r\n      id: 11,\r\n      address: '0xd17479997F34dd9156Deef8F95A52D81D265be9c',\r\n      decimals: 18,\r\n      paths: paths.bnb.usdd,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0x3F56e0c36d275367b8C502090EDF38289b3dEa0d',\r\n      decimals: 18,\r\n      paths: paths.bnb.mai,\r\n    },\r\n  },\r\n  polygon: {\r\n    usdc: {\r\n      id: 1,\r\n      address: '0x2791bca1f2de4661ed88a30c99a7a9449aa84174',\r\n      decimals: 6,\r\n      paths: paths.polygon.usdc,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0xc2132d05d31c914a87c6611c10748aeb04b58e8f',\r\n      decimals: 6,\r\n      paths: paths.polygon.usdt,\r\n    },\r\n    dai: {\r\n      id: 3,\r\n      address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\r\n      decimals: 18,\r\n      paths: paths.polygon.dai,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0xa3Fa99A148fA48D14Ed51d610c367C61876997F1',\r\n      decimals: 18,\r\n      paths: paths.polygon.mai,\r\n    },\r\n  },\r\n  arbitrum: {\r\n    usdc: {\r\n      id: 1,\r\n      address: '0xff970a61a04b1ca14834a43f5de4533ebddb5cc8',\r\n      decimals: 6,\r\n      paths: paths.arbitrum.usdc,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9',\r\n      decimals: 6,\r\n      paths: paths.arbitrum.usdt,\r\n    },\r\n    frax: {\r\n      id: 7,\r\n      address: '0x17FC002b466eEc40DaE837Fc4bE5c67993ddBd6F',\r\n      decimals: 18,\r\n      paths: paths.arbitrum.frax,\r\n    },\r\n    lusd: {\r\n      id: 15,\r\n      address: '0x0dDB1eA478F8eF0E22C7706D2903a41E94B1299B',\r\n      decimals: 18,\r\n      paths: paths.arbitrum.lusd,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0x3F56e0c36d275367b8C502090EDF38289b3dEa0d',\r\n      decimals: 18,\r\n      paths: paths.arbitrum.mai,\r\n    },\r\n  },\r\n  optimism: {\r\n    usdc: {\r\n      id: 1,\r\n      address: '0x7F5c764cBc14f9669B88837ca1490cCa17c31607',\r\n      decimals: 6,\r\n      paths: paths.optimism.usdc,\r\n    },\r\n    dai: {\r\n      id: 3,\r\n      address: '0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1',\r\n      decimals: 18,\r\n      paths: paths.optimism.dai,\r\n    },\r\n    frax: {\r\n      id: 7,\r\n      address: '0x2E3D870790dC77A83DD1d18184Acc7439A53f475',\r\n      decimals: 18,\r\n      paths: paths.optimism.frax,\r\n    },\r\n    susd: {\r\n      id: 14,\r\n      address: '0x8c6f28f2F1A3C87F0f938b96d27520d9751ec8d9',\r\n      decimals: 18,\r\n      paths: paths.optimism.susd,\r\n    },\r\n    lusd: {\r\n      id: 15,\r\n      address: '0xc40F949F8a4e094D1b49a23ea9241D289B7b2819',\r\n      decimals: 18,\r\n      paths: paths.optimism.lusd,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0xdFA46478F9e5EA86d57387849598dbFB2e964b02',\r\n      decimals: 18,\r\n      paths: paths.optimism.mai,\r\n    },\r\n  },\r\n  fantom: {\r\n    usdc: {\r\n      id: 1,\r\n      address: '0x04068da6c83afcfa0e13ba15a6696662335d5b75',\r\n      decimals: 6,\r\n      paths: paths.fantom.usdc,\r\n    },\r\n  },\r\n};\r\n\r\nconst chain = {\r\n  ethereum: {\r\n    routerAddress: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\r\n    ethRouterAddress: '0x150f94B44927F078737562f0fcF3C95c01Cc2376',\r\n    rpcUrl: [[ETH_RPC]],\r\n    id: 101,\r\n    token: token.ethereum,\r\n  },\r\n  bnb: {\r\n    routerAddress: '0x4a364f8c717cAAD9A442737Eb7b8A55cc6cf18D8',\r\n    rpcUrl: [[BNB_RPC]],\r\n    id: 102,\r\n    token: token.bnb,\r\n  },\r\n  avalanche: {\r\n    routerAddress: '0x45A01E4e04F14f7A4a6702c74187c5F6222033cd',\r\n    rpcUrl: [[AVAX_RPC]],\r\n    id: 106,\r\n    token: token.avalanche,\r\n  },\r\n  polygon: {\r\n    routerAddress: '0x45A01E4e04F14f7A4a6702c74187c5F6222033cd',\r\n    rpcUrl: [[MATIC_RPC]],\r\n    id: 109,\r\n    token: token.polygon,\r\n  },\r\n  arbitrum: {\r\n    routerAddress: '0x53Bf833A5d6c4ddA888F69c22C88C9f356a41614',\r\n    ethRouterAddress: '0xbf22f0f184bCcbeA268dF387a49fF5238dD23E40',\r\n    rpcUrl: [[ARBI_RPC]],\r\n    id: 110,\r\n    token: token.arbitrum,\r\n  },\r\n  optimism: {\r\n    routerAddress: '0xB0D502E938ed5f4df2E681fE6E419ff29631d62b',\r\n    ethRouterAddress: '0xB49c4e680174E331CB0A7fF3Ab58afC9738d5F8b',\r\n    rpcUrl: [[OP_RPC]],\r\n    id: 111,\r\n    token: token.optimism,\r\n  },\r\n  fantom: {\r\n    routerAddress: '0xAf5191B0De278C7286d6C7CC6ab6BB8A73bA2Cd6',\r\n    rpcUrl: [[FANTOM_RPC]],\r\n    id: 112,\r\n    token: token.fantom,\r\n  },\r\n};\r\n\r\nconst erc20 = (tokenAddress, provider) => {\r\n  const abi = [\r\n    'function balanceOf(address account) external view returns (uint256)',\r\n    'function approve(address spender, uint256 amount) external returns (bool)',\r\n    'function allowance(address owner, address spender) external view returns (uint256)',\r\n  ];\r\n  return new ethers.Contract(tokenAddress, abi, provider);\r\n};\r\n\r\nconst toWei = (amount, decimals = 18) => {\r\n  return ethers.utils.parseUnits(amount.toString(), decimals);\r\n};\r\n\r\nconst fromWei = (amount, decimals = 18) => {\r\n  return ethers.utils.formatUnits(amount.toString(), decimals);\r\n};\r\n\r\nconst getTokenBalance = async (token, wallet) => {\r\n  const tokenContract = erc20(token.address, wallet);\r\n  const balance = await tokenContract.balanceOf(wallet.address);\r\n  return balance;\r\n};\r\n\r\nconst getAllowance = async (routerAddress, token, wallet) => {\r\n  const tokenContract = erc20(token.address, wallet);\r\n\r\n  const allowanceAmount = await tokenContract.allowance(\r\n    wallet.address,\r\n    routerAddress\r\n  );\r\n\r\n  return allowanceAmount;\r\n};\r\n\r\nconst approve = async (routerAddress, token, wallet, gasPrice) => {\r\n  console.log('Approving...');\r\n\r\n  const tokenContract = erc20(token.address, wallet);\r\n\r\n  const tx = await tokenContract.approve(\r\n    routerAddress,\r\n    ethers.constants.MaxUint256,\r\n    {\r\n      gasPrice,\r\n    }\r\n  );\r\n\r\n  await tx.wait();\r\n\r\n  console.log('Approved');\r\n};\r\n\r\nconst getFee = async (router, chainTo, walletFrom) => {\r\n  const functionType = 1;\r\n  const quoteDataPayload = '0x';\r\n\r\n  const quoteData = await router.quoteLayerZeroFee(\r\n    chainTo.id,\r\n    functionType,\r\n    walletFrom.address,\r\n    quoteDataPayload,\r\n    {\r\n      dstGasForCall: 0,\r\n      dstNativeAmount: 0,\r\n      dstNativeAddr: walletFrom.address,\r\n    }\r\n  );\r\n\r\n  const fee = quoteData[0];\r\n\r\n  return fee;\r\n};\r\n\r\nconst getGasPrice = async (provider) => {\r\n  const gasPrice = (await provider.getGasPrice()).mul(150).div(100);\r\n  return gasPrice;\r\n};\r\n\r\nconst getMinAmount = async (amount) => {\r\n  const minAmount = amount.div(1000).mul(995); // min amount is 0.5% less than amount\r\n  return minAmount;\r\n};\r\n\r\nconst sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nconst stargateTransfer = async (\r\n  tokenFromName,\r\n  tokenToName,\r\n  chainFromName,\r\n  chainToName,\r\n  amount,\r\n  privateKey\r\n) => {\r\n  const chainFrom = chain[chainFromName];\r\n  const chainTo = chain[chainToName];\r\n  const tokenFrom = chainFrom.token[tokenFromName];\r\n  const tokenTo = chainTo.token[tokenToName];\r\n\r\n  if (!chainFrom || !chainTo) {\r\n    throw new Error('Chain not supported');\r\n  }\r\n\r\n  if (!tokenFrom || !tokenTo) {\r\n    throw new Error('Token not supported');\r\n  }\r\n\r\n  console.log(\r\n    `Transfering ${amount} ${chainFromName}-${tokenFromName} to ${chainToName}-${tokenToName}`\r\n  );\r\n\r\n  const providerFrom = new ethers.providers.JsonRpcProvider(chainFrom.rpcUrl);\r\n  const providerTo = new ethers.providers.JsonRpcProvider(chainTo.rpcUrl);\r\n\r\n  const walletFrom = new ethers.Wallet(privateKey, providerFrom);\r\n  const walletTo = new ethers.Wallet(privateKey, providerTo);\r\n\r\n  const walletFromBalance = await walletFrom.getBalance();\r\n\r\n  const balanceFrom = await getTokenBalance(tokenFrom, walletFrom);\r\n\r\n  const amountInWei = toWei(amount, tokenFrom.decimals);\r\n\r\n  const router = new ethers.Contract(\r\n    chainFrom.routerAddress,\r\n    routerABI,\r\n    walletFrom\r\n  );\r\n\r\n  if (balanceFrom.lt(amountInWei)) {\r\n    throw new Error('Insufficient balance');\r\n  }\r\n\r\n  const fee = await getFee(router, chainTo, walletFrom);\r\n\r\n  const safeFee = fee.mul(2);\r\n\r\n  if (walletFromBalance.lt(safeFee)) {\r\n    throw new Error('Insufficient ETH balance for transaction fee');\r\n  }\r\n\r\n  console.log(`Transaction fee: ${fromWei(fee)}`);\r\n\r\n  const chainToAndTokenTo = `${chainToName}-${tokenToName}`;\r\n\r\n  const path = tokenFrom.paths.find((path) => path.includes(chainToAndTokenTo));\r\n\r\n  if (!path) {\r\n    throw new Error('Invalid token pair');\r\n  }\r\n\r\n  const allowance = await getAllowance(router.address, tokenFrom, walletFrom);\r\n\r\n  const gasPrice = await getGasPrice(providerFrom);\r\n\r\n  if (allowance.lt(amountInWei)) {\r\n    await approve(router.address, tokenFrom, walletFrom, gasPrice);\r\n  }\r\n\r\n  const minAmount = await getMinAmount(amountInWei);\r\n\r\n  const balanceToBefore = await getTokenBalance(tokenTo, walletTo);\r\n\r\n  const newGasPrice = await getGasPrice(providerFrom);\r\n\r\n  const tx = await router.swap(\r\n    chainTo.id,\r\n    tokenFrom.id,\r\n    tokenTo.id,\r\n    walletFrom.address,\r\n    amountInWei,\r\n    minAmount,\r\n    { dstGasForCall: 0, dstNativeAmount: 0, dstNativeAddr: walletFrom.address },\r\n    walletFrom.address,\r\n    '0x',\r\n    { value: fee, gasPrice: newGasPrice }\r\n  );\r\n\r\n  await tx.wait();\r\n\r\n  let balanceToAfter = await getTokenBalance(tokenTo, walletTo);\r\n\r\n  cliSpinner.start();\r\n\r\n  while (balanceToAfter.eq(balanceToBefore)) {\r\n    await sleep(1000);\r\n    balanceToAfter = await getTokenBalance(tokenTo, walletTo);\r\n  }\r\n\r\n  cliSpinner.stop();\r\n\r\n  console.log(`Success! Transaction hash: ${tx.hash}`);\r\n};\r\n\r\nconst stargateTransferEth = async (\r\n  chainFromName,\r\n  chainToName,\r\n  amount,\r\n  privateKey\r\n) => {\r\n  const chainFrom = chain[chainFromName];\r\n  const chainTo = chain[chainToName];\r\n  const validChains = ['ethereum', 'arbitrum', 'optimism'];\r\n\r\n  if (\r\n    !validChains.includes(chainFromName) ||\r\n    !validChains.includes(chainToName)\r\n  ) {\r\n    throw new Error('Chain not supported');\r\n  }\r\n\r\n  if (chainFromName === chainToName) {\r\n    throw new Error('Invalid chain pair');\r\n  }\r\n\r\n  console.log(\r\n    `Transfering ${amount} ETH from ${chainFromName} to ${chainToName}`\r\n  );\r\n\r\n  const provider = new ethers.providers.JsonRpcProvider(chainFrom.rpcUrl);\r\n\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const balance = await wallet.getBalance();\r\n\r\n  console.log('Balance of ETH:', fromWei(balance));\r\n\r\n  const amountInWei = toWei(amount);\r\n\r\n  const router = new ethers.Contract(\r\n    chainFrom.routerAddress,\r\n    routerABI,\r\n    wallet\r\n  );\r\n\r\n  const fee = await getFee(router, chainTo, wallet);\r\n  const fullAmount = amountInWei.add(fee);\r\n  const safeAmount = amountInWei.add(fee.mul(2));\r\n\r\n  if (balance.lt(safeAmount)) {\r\n    throw new Error(`Insufficient balance`);\r\n  }\r\n\r\n  console.log(`Transaction fee: ${fromWei(fee)}`);\r\n\r\n  const ethRouter = new ethers.Contract(\r\n    chainFrom.ethRouterAddress,\r\n    ethRouterABI,\r\n    wallet\r\n  );\r\n\r\n  const balanceToBefore = await wallet.getBalance();\r\n\r\n  const minAmount = await getMinAmount(amountInWei);\r\n\r\n  const gasPrice = await getGasPrice(provider);\r\n\r\n  const tx = await ethRouter.swapETH(\r\n    chainTo.id,\r\n    wallet.address,\r\n    wallet.address,\r\n    amountInWei,\r\n    minAmount,\r\n    { value: fullAmount, gasPrice: gasPrice }\r\n  );\r\n\r\n  await tx.wait();\r\n\r\n  let balanceToAfter = await wallet.getBalance();\r\n\r\n  cliSpinner.start();\r\n\r\n  while (balanceToAfter.eq(balanceToBefore)) {\r\n    await sleep(1000);\r\n    balanceToAfter = await wallet.getBalance();\r\n  }\r\n\r\n  cliSpinner.stop();\r\n\r\n  console.log(`Success! Transaction hash: ${tx.hash}`);\r\n};\r\n\r\n/*\r\nПары для трансфера можно найти на строке 761 (paths)\r\nИли на сайте документации https://stargateprotocol.gitbook.io/stargate/developers/stargate-chain-paths\r\n\r\nstargateTransfer(\r\n  'usdt', - sender token (usdc, usdt, dai, frax, usdd, susd, lusd, mai, busd)\r\n  'busd', - reciever token (usdc, usdt, dai, frax, usdd, susd, lusd, mai, busd)\r\n  'arbitrum', - sender chain (ethereum, bnb, avalanche, polygon, arbitrum, optimism, fantom)\r\n  'bnb', - reciever chain (ethereum, bnb, avalanche, polygon, arbitrum, optimism, fantom)\r\n  '2.321', - amount to transfer\r\n  'your private key'\r\n);\r\n\r\nstargateTransferEth(\r\n  'ethereum', - sender chain (ethereum, arbitrum, optimism)\r\n  'arbitrum', - reciever chain (ethereum, arbitrum, optimism)\r\n  '0.01', - amount to transfer\r\n  'your private key'\r\n);\r\n*/\r\n\r\n if([[TASK_COIN_IN]].toLowerCase()=='eth'){\r\n        await stargateTransferEth([[TASK_NETWORK_IN_S]],[[TASK_NETWORK_OUT_S]],[[TASK_SIZE]],[[PRIVATE_KEY]])\r\n    } else{\r\n        await stargateTransfer([[TASK_COIN_IN]].toLowerCase(),[[TASK_COIN_OUT]].toLowerCase(),[[TASK_NETWORK_IN_S]],[[TASK_NETWORK_OUT_S]],[[TASK_SIZE]],[[PRIVATE_KEY]])\r\n    }","data_name":"4du3lctoo2n","data_type":0,"language_name":"Node","language_version":"18.10.0"},{"data":"const { ethers, BigNumber } = require('ethers');\r\n\r\nconst routerABI = [\r\n  { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint16',\r\n        name: 'chainId',\r\n        type: 'uint16',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'bytes',\r\n        name: 'srcAddress',\r\n        type: 'bytes',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'nonce',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'address',\r\n        name: 'token',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amountLD',\r\n        type: 'uint256',\r\n      },\r\n      { indexed: false, internalType: 'address', name: 'to', type: 'address' },\r\n      { indexed: false, internalType: 'bytes', name: 'payload', type: 'bytes' },\r\n      { indexed: false, internalType: 'bytes', name: 'reason', type: 'bytes' },\r\n    ],\r\n    name: 'CachedSwapSaved',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'previousOwner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'newOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'OwnershipTransferred',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint16',\r\n        name: 'srcChainId',\r\n        type: 'uint16',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'bytes',\r\n        name: 'srcAddress',\r\n        type: 'bytes',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'uint256',\r\n        name: 'nonce',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'srcPoolId',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'dstPoolId',\r\n        type: 'uint256',\r\n      },\r\n      { indexed: false, internalType: 'address', name: 'to', type: 'address' },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amountSD',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'mintAmountSD',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'RedeemLocalCallback',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint8',\r\n        name: 'bridgeFunctionType',\r\n        type: 'uint8',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint16',\r\n        name: 'chainId',\r\n        type: 'uint16',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'bytes',\r\n        name: 'srcAddress',\r\n        type: 'bytes',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'nonce',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Revert',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint16',\r\n        name: 'srcChainId',\r\n        type: 'uint16',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: '_srcPoolId',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: '_dstPoolId',\r\n        type: 'uint256',\r\n      },\r\n      { indexed: false, internalType: 'bytes', name: 'to', type: 'bytes' },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'redeemAmountSD',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'mintAmountSD',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'uint256',\r\n        name: 'nonce',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'bytes',\r\n        name: 'srcAddress',\r\n        type: 'bytes',\r\n      },\r\n    ],\r\n    name: 'RevertRedeemLocal',\r\n    type: 'event',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n    ],\r\n    name: 'activateChainPath',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_amountLD', type: 'uint256' },\r\n      { internalType: 'address', name: '_to', type: 'address' },\r\n    ],\r\n    name: 'addLiquidity',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'bridge',\r\n    outputs: [{ internalType: 'contract Bridge', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '', type: 'uint16' },\r\n      { internalType: 'bytes', name: '', type: 'bytes' },\r\n      { internalType: 'uint256', name: '', type: 'uint256' },\r\n    ],\r\n    name: 'cachedSwapLookup',\r\n    outputs: [\r\n      { internalType: 'address', name: 'token', type: 'address' },\r\n      { internalType: 'uint256', name: 'amountLD', type: 'uint256' },\r\n      { internalType: 'address', name: 'to', type: 'address' },\r\n      { internalType: 'bytes', name: 'payload', type: 'bytes' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'bool', name: '_fullMode', type: 'bool' },\r\n    ],\r\n    name: 'callDelta',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_srcChainId', type: 'uint16' },\r\n      { internalType: 'bytes', name: '_srcAddress', type: 'bytes' },\r\n      { internalType: 'uint256', name: '_nonce', type: 'uint256' },\r\n    ],\r\n    name: 'clearCachedSwap',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_weight', type: 'uint256' },\r\n    ],\r\n    name: 'createChainPath',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'address', name: '_token', type: 'address' },\r\n      { internalType: 'uint8', name: '_sharedDecimals', type: 'uint8' },\r\n      { internalType: 'uint8', name: '_localDecimals', type: 'uint8' },\r\n      { internalType: 'string', name: '_name', type: 'string' },\r\n      { internalType: 'string', name: '_symbol', type: 'string' },\r\n    ],\r\n    name: 'createPool',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      {\r\n        components: [\r\n          { internalType: 'uint256', name: 'credits', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'idealBalance', type: 'uint256' },\r\n        ],\r\n        internalType: 'struct Pool.CreditObj',\r\n        name: '_c',\r\n        type: 'tuple',\r\n      },\r\n    ],\r\n    name: 'creditChainPath',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'factory',\r\n    outputs: [{ internalType: 'contract Factory', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_srcPoolId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_amountLP', type: 'uint256' },\r\n      { internalType: 'address', name: '_to', type: 'address' },\r\n    ],\r\n    name: 'instantRedeemLocal',\r\n    outputs: [{ internalType: 'uint256', name: 'amountSD', type: 'uint256' }],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'mintFeeOwner',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'owner',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'protocolFeeOwner',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint8', name: '_functionType', type: 'uint8' },\r\n      { internalType: 'bytes', name: '_toAddress', type: 'bytes' },\r\n      { internalType: 'bytes', name: '_transferAndCallPayload', type: 'bytes' },\r\n      {\r\n        components: [\r\n          { internalType: 'uint256', name: 'dstGasForCall', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'dstNativeAmount', type: 'uint256' },\r\n          { internalType: 'bytes', name: 'dstNativeAddr', type: 'bytes' },\r\n        ],\r\n        internalType: 'struct IStargateRouter.lzTxObj',\r\n        name: '_lzTxParams',\r\n        type: 'tuple',\r\n      },\r\n    ],\r\n    name: 'quoteLayerZeroFee',\r\n    outputs: [\r\n      { internalType: 'uint256', name: '', type: 'uint256' },\r\n      { internalType: 'uint256', name: '', type: 'uint256' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      {\r\n        internalType: 'address payable',\r\n        name: '_refundAddress',\r\n        type: 'address',\r\n      },\r\n      { internalType: 'uint256', name: '_amountLP', type: 'uint256' },\r\n      { internalType: 'bytes', name: '_to', type: 'bytes' },\r\n      {\r\n        components: [\r\n          { internalType: 'uint256', name: 'dstGasForCall', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'dstNativeAmount', type: 'uint256' },\r\n          { internalType: 'bytes', name: 'dstNativeAddr', type: 'bytes' },\r\n        ],\r\n        internalType: 'struct IStargateRouter.lzTxObj',\r\n        name: '_lzTxParams',\r\n        type: 'tuple',\r\n      },\r\n    ],\r\n    name: 'redeemLocal',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_srcChainId', type: 'uint16' },\r\n      { internalType: 'bytes', name: '_srcAddress', type: 'bytes' },\r\n      { internalType: 'uint256', name: '_nonce', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      { internalType: 'address', name: '_to', type: 'address' },\r\n      { internalType: 'uint256', name: '_amountSD', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_mintAmountSD', type: 'uint256' },\r\n    ],\r\n    name: 'redeemLocalCallback',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_srcChainId', type: 'uint16' },\r\n      { internalType: 'bytes', name: '_srcAddress', type: 'bytes' },\r\n      { internalType: 'uint256', name: '_nonce', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_amountSD', type: 'uint256' },\r\n      { internalType: 'bytes', name: '_to', type: 'bytes' },\r\n    ],\r\n    name: 'redeemLocalCheckOnRemote',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      {\r\n        internalType: 'address payable',\r\n        name: '_refundAddress',\r\n        type: 'address',\r\n      },\r\n      { internalType: 'uint256', name: '_amountLP', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_minAmountLD', type: 'uint256' },\r\n      { internalType: 'bytes', name: '_to', type: 'bytes' },\r\n      {\r\n        components: [\r\n          { internalType: 'uint256', name: 'dstGasForCall', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'dstNativeAmount', type: 'uint256' },\r\n          { internalType: 'bytes', name: 'dstNativeAddr', type: 'bytes' },\r\n        ],\r\n        internalType: 'struct IStargateRouter.lzTxObj',\r\n        name: '_lzTxParams',\r\n        type: 'tuple',\r\n      },\r\n    ],\r\n    name: 'redeemRemote',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'renounceOwnership',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_srcChainId', type: 'uint16' },\r\n      { internalType: 'bytes', name: '_srcAddress', type: 'bytes' },\r\n      { internalType: 'uint256', name: '_nonce', type: 'uint256' },\r\n    ],\r\n    name: 'retryRevert',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '', type: 'uint16' },\r\n      { internalType: 'bytes', name: '', type: 'bytes' },\r\n      { internalType: 'uint256', name: '', type: 'uint256' },\r\n    ],\r\n    name: 'revertLookup',\r\n    outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'bytes', name: '_srcAddress', type: 'bytes' },\r\n      { internalType: 'uint256', name: '_nonce', type: 'uint256' },\r\n      {\r\n        internalType: 'address payable',\r\n        name: '_refundAddress',\r\n        type: 'address',\r\n      },\r\n      {\r\n        components: [\r\n          { internalType: 'uint256', name: 'dstGasForCall', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'dstNativeAmount', type: 'uint256' },\r\n          { internalType: 'bytes', name: 'dstNativeAddr', type: 'bytes' },\r\n        ],\r\n        internalType: 'struct IStargateRouter.lzTxObj',\r\n        name: '_lzTxParams',\r\n        type: 'tuple',\r\n      },\r\n    ],\r\n    name: 'revertRedeemLocal',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      {\r\n        internalType: 'address payable',\r\n        name: '_refundAddress',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'sendCredits',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'contract Bridge', name: '_bridge', type: 'address' },\r\n      { internalType: 'contract Factory', name: '_factory', type: 'address' },\r\n    ],\r\n    name: 'setBridgeAndFactory',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'bool', name: '_batched', type: 'bool' },\r\n      { internalType: 'uint256', name: '_swapDeltaBP', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_lpDeltaBP', type: 'uint256' },\r\n      { internalType: 'bool', name: '_defaultSwapMode', type: 'bool' },\r\n      { internalType: 'bool', name: '_defaultLPMode', type: 'bool' },\r\n    ],\r\n    name: 'setDeltaParam',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'address', name: '_feeLibraryAddr', type: 'address' },\r\n    ],\r\n    name: 'setFeeLibrary',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_mintFeeBP', type: 'uint256' },\r\n    ],\r\n    name: 'setFees',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: '_owner', type: 'address' }],\r\n    name: 'setMintFeeOwner',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: '_owner', type: 'address' }],\r\n    name: 'setProtocolFeeOwner',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'bool', name: '_swapStop', type: 'bool' },\r\n    ],\r\n    name: 'setSwapStop',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      { internalType: 'uint16', name: '_weight', type: 'uint16' },\r\n    ],\r\n    name: 'setWeightForChainPath',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      {\r\n        internalType: 'address payable',\r\n        name: '_refundAddress',\r\n        type: 'address',\r\n      },\r\n      { internalType: 'uint256', name: '_amountLD', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_minAmountLD', type: 'uint256' },\r\n      {\r\n        components: [\r\n          { internalType: 'uint256', name: 'dstGasForCall', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'dstNativeAmount', type: 'uint256' },\r\n          { internalType: 'bytes', name: 'dstNativeAddr', type: 'bytes' },\r\n        ],\r\n        internalType: 'struct IStargateRouter.lzTxObj',\r\n        name: '_lzTxParams',\r\n        type: 'tuple',\r\n      },\r\n      { internalType: 'bytes', name: '_to', type: 'bytes' },\r\n      { internalType: 'bytes', name: '_payload', type: 'bytes' },\r\n    ],\r\n    name: 'swap',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_srcChainId', type: 'uint16' },\r\n      { internalType: 'bytes', name: '_srcAddress', type: 'bytes' },\r\n      { internalType: 'uint256', name: '_nonce', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstGasForCall', type: 'uint256' },\r\n      { internalType: 'address', name: '_to', type: 'address' },\r\n      {\r\n        components: [\r\n          { internalType: 'uint256', name: 'amount', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'eqFee', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'eqReward', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'lpFee', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'protocolFee', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'lkbRemove', type: 'uint256' },\r\n        ],\r\n        internalType: 'struct Pool.SwapObj',\r\n        name: '_s',\r\n        type: 'tuple',\r\n      },\r\n      { internalType: 'bytes', name: '_payload', type: 'bytes' },\r\n    ],\r\n    name: 'swapRemote',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],\r\n    name: 'transferOwnership',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'address', name: '_to', type: 'address' },\r\n    ],\r\n    name: 'withdrawMintFee',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'address', name: '_to', type: 'address' },\r\n    ],\r\n    name: 'withdrawProtocolFee',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n];\r\n\r\nconst ethRouterABI = [\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: '_stargateEthVault', type: 'address' },\r\n      { internalType: 'address', name: '_stargateRouter', type: 'address' },\r\n      { internalType: 'uint16', name: '_poolId', type: 'uint16' },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'addLiquidityETH',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'poolId',\r\n    outputs: [{ internalType: 'uint16', name: '', type: 'uint16' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'stargateEthVault',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'stargateRouter',\r\n    outputs: [\r\n      { internalType: 'contract IStargateRouter', name: '', type: 'address' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      {\r\n        internalType: 'address payable',\r\n        name: '_refundAddress',\r\n        type: 'address',\r\n      },\r\n      { internalType: 'bytes', name: '_toAddress', type: 'bytes' },\r\n      { internalType: 'uint256', name: '_amountLD', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_minAmountLD', type: 'uint256' },\r\n    ],\r\n    name: 'swapETH',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  { stateMutability: 'payable', type: 'receive' },\r\n];\r\n\r\nconst tokenData = {\r\n  ethereum: {\r\n    eth: {\r\n      id: 13,\r\n      lpAddress: '0x101816545F6bd2b1076434B54383a1E633390A2E',\r\n      decimals: 18,\r\n    },\r\n    usdc: {\r\n      id: 1,\r\n      address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\r\n      lpAddress: '0xdf0770dF86a8034b3EFEf0A1Bb3c889B8332FF56',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\r\n      lpAddress: '0x38EA452219524Bb87e18dE1C24D3bB59510BD783',\r\n      decimals: 6,\r\n    },\r\n    usdd: {\r\n      id: 11,\r\n      address: '0x0C10bF8FcB7Bf5412187A595ab97a3609160b5c6',\r\n      lpAddress: '0x692953e758c3669290cb1677180c64183cEe374e',\r\n      decimals: 18,\r\n    },\r\n    dai: {\r\n      id: 3,\r\n      address: '0x6B175474E89094C44Da98b954EedeAC495271d0F',\r\n      lpAddress: '0x0Faf1d2d3CED330824de3B8200fc8dc6E397850d',\r\n      decimals: 18,\r\n    },\r\n    frax: {\r\n      id: 7,\r\n      address: '0x853d955aCEf822Db058eb8505911ED77F175b99e',\r\n      lpAddress: '0xfA0F307783AC21C39E939ACFF795e27b650F6e68',\r\n    },\r\n    susd: {\r\n      id: 14,\r\n      address: '0x57Ab1ec28D129707052df4dF418D58a2D46d5f51',\r\n      lpAddress: '0x590d4f8A68583639f215f675F3a259Ed84790580',\r\n      decimals: 18,\r\n    },\r\n    lusd: {\r\n      id: 15,\r\n      address: '0x5f98805A4E8be255a32880FDeC7F6728C6568bA0',\r\n      lpAddress: '0xE8F55368C82D38bbbbDb5533e7F56AfC2E978CC2',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0x8D6CeBD76f18E1558D4DB88138e2DeFB3909fAD6',\r\n      lpAddress: '0x9cef9a0b1bE0D289ac9f4a98ff317c33EAA84eb8',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  avalanche: {\r\n    usdc: {\r\n      id: 1,\r\n      address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',\r\n      lpAddress: '0x1205f31718499dBf1fCa446663B532Ef87481fe1',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7',\r\n      lpAddress: '0x29e38769f23701A2e4A8Ef0492e19dA4604Be62c',\r\n      decimals: 6,\r\n    },\r\n    frax: {\r\n      id: 7,\r\n      address: '0xD24C2Ad096400B6FBcd2ad8B24E7acBc21A1da64',\r\n      lpAddress: '0x1c272232Df0bb6225dA87f4dEcD9d37c32f63Eea',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0x3B55E45fD6bd7d4724F5c47E0d1bCaEdd059263e',\r\n      lpAddress: '0x8736f92646B2542B3e5F3c63590cA7Fe313e283B',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  bnb: {\r\n    busd: {\r\n      id: 5,\r\n      address: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n      lpAddress: '0x98a5737749490856b401DB5Dc27F522fC314A4e1',\r\n      decimals: 18,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0x55d398326f99059ff775485246999027b3197955',\r\n      lpAddress: '0x9aA83081AA06AF7208Dcc7A4cB72C94d057D2cda',\r\n      decimals: 18,\r\n    },\r\n    usdd: {\r\n      id: 11,\r\n      address: '0xd17479997F34dd9156Deef8F95A52D81D265be9c',\r\n      lpAddress: '0x4e145a589e4c03cBe3d28520e4BF3089834289Df',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0x3F56e0c36d275367b8C502090EDF38289b3dEa0d',\r\n      lpAddress: '0x7BfD7f2498C4796f10b6C611D9db393D3052510C',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  polygon: {\r\n    usdc: {\r\n      id: 1,\r\n      address: '0x2791bca1f2de4661ed88a30c99a7a9449aa84174',\r\n      lpAddress: '0x1205f31718499dBf1fCa446663B532Ef87481fe1',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0xc2132d05d31c914a87c6611c10748aeb04b58e8f',\r\n      lpAddress: '0x29e38769f23701A2e4A8Ef0492e19dA4604Be62c',\r\n      decimals: 6,\r\n    },\r\n    dai: {\r\n      id: 3,\r\n      address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\r\n      lpAddress: '0x1c272232Df0bb6225dA87f4dEcD9d37c32f63Eea',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0xa3Fa99A148fA48D14Ed51d610c367C61876997F1',\r\n      lpAddress: '0x8736f92646B2542B3e5F3c63590cA7Fe313e283B',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  arbitrum: {\r\n    eth: {\r\n      id: 13,\r\n      lpAddress: '0x915A55e36A01285A14f05dE6e81ED9cE89772f8e',\r\n      decimals: 18,\r\n    },\r\n    usdc: {\r\n      id: 1,\r\n      address: '0xff970a61a04b1ca14834a43f5de4533ebddb5cc8',\r\n      lpAddress: '0x892785f33CdeE22A30AEF750F285E18c18040c3e',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9',\r\n      lpAddress: '0xB6CfcF89a7B22988bfC96632aC2A9D6daB60d641',\r\n      decimals: 6,\r\n    },\r\n    frax: {\r\n      id: 7,\r\n      address: '0x17FC002b466eEc40DaE837Fc4bE5c67993ddBd6F',\r\n      lpAddress: '0xaa4BF442F024820B2C28Cd0FD72b82c63e66F56C',\r\n      decimals: 18,\r\n    },\r\n    lusd: {\r\n      id: 15,\r\n      address: '0x0dDB1eA478F8eF0E22C7706D2903a41E94B1299B',\r\n      lpAddress: '0x600E576F9d853c95d58029093A16EE49646F3ca5',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0x3F56e0c36d275367b8C502090EDF38289b3dEa0d',\r\n      lpAddress: '0xF39B7Be294cB36dE8c510e267B82bb588705d977',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  optimism: {\r\n    eth: {\r\n      id: 13,\r\n      lpAddress: '0xd22363e3762cA7339569F3d33EADe20127D5F98C',\r\n      decimals: 18,\r\n    },\r\n    usdc: {\r\n      id: 1,\r\n      address: '0x7F5c764cBc14f9669B88837ca1490cCa17c31607',\r\n      lpAddress: '0xDecC0c09c3B5f6e92EF4184125D5648a66E35298',\r\n      decimals: 6,\r\n    },\r\n    dai: {\r\n      id: 3,\r\n      address: '0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1',\r\n      lpAddress: '0x165137624F1f692e69659f944BF69DE02874ee27',\r\n      decimals: 18,\r\n    },\r\n    frax: {\r\n      id: 7,\r\n      address: '0x2E3D870790dC77A83DD1d18184Acc7439A53f475',\r\n      lpAddress: '0x368605D9C6243A80903b9e326f1Cddde088B8924',\r\n      decimals: 18,\r\n    },\r\n    susd: {\r\n      id: 14,\r\n      address: '0x8c6f28f2F1A3C87F0f938b96d27520d9751ec8d9',\r\n      lpAddress: '0x2F8bC9081c7FCFeC25b9f41a50d97EaA592058ae',\r\n      decimals: 18,\r\n    },\r\n    lusd: {\r\n      id: 15,\r\n      address: '0xc40F949F8a4e094D1b49a23ea9241D289B7b2819',\r\n      lpAddress: '0x3533F5e279bDBf550272a199a223dA798D9eff78',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0xdFA46478F9e5EA86d57387849598dbFB2e964b02',\r\n      lpAddress: '0x5421FA1A48f9FF81e4580557E86C7C0D24C18036',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  fantom: {\r\n    usdc: {\r\n      id: 1,\r\n      address: '0x04068da6c83afcfa0e13ba15a6696662335d5b75',\r\n      lpAddress: '0x12edeA9cd262006cC3C4E77c90d2CD2DD4b1eb97',\r\n      decimals: 6,\r\n    },\r\n  },\r\n};\r\n\r\nconst chainData = {\r\n  ethereum: {\r\n    routerAddress: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\r\n    ethRouterAddress: '0x150f94B44927F078737562f0fcF3C95c01Cc2376',\r\n    lpStakingAddress: '0xB0D502E938ed5f4df2E681fE6E419ff29631d62b',\r\n    rpcUrl: [[ETH_RPC]] ,\r\n    id: 101,\r\n  },\r\n  bnb: {\r\n    routerAddress: '0x4a364f8c717cAAD9A442737Eb7b8A55cc6cf18D8',\r\n    lpStakingAddress: '0x3052A0F6ab15b4AE1df39962d5DdEFacA86DaB47',\r\n    rpcUrl: [[BNB_RPC]],\r\n    id: 102,\r\n  },\r\n  avalanche: {\r\n    routerAddress: '0x45A01E4e04F14f7A4a6702c74187c5F6222033cd',\r\n    lpStakingAddress: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\r\n    rpcUrl: [[AVAX_RPC]],\r\n    id: 106,\r\n  },\r\n  polygon: {\r\n    routerAddress: '0x45A01E4e04F14f7A4a6702c74187c5F6222033cd',\r\n    lpStakingAddress: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\r\n    rpcUrl: [[MATIC_RPC]],\r\n    id: 109,\r\n  },\r\n  arbitrum: {\r\n    routerAddress: '0x53Bf833A5d6c4ddA888F69c22C88C9f356a41614',\r\n    ethRouterAddress: '0xbf22f0f184bCcbeA268dF387a49fF5238dD23E40',\r\n    lpStakingAddress: '0xeA8DfEE1898a7e0a59f7527F076106d7e44c2176',\r\n    rpcUrl: [[ARBI_RPC]],\r\n    id: 110,\r\n  },\r\n  optimism: {\r\n    routerAddress: '0xB0D502E938ed5f4df2E681fE6E419ff29631d62b',\r\n    ethRouterAddress: '0xB49c4e680174E331CB0A7fF3Ab58afC9738d5F8b',\r\n    lpStakingAddress: '0x4DeA9e918c6289a52cd469cAC652727B7b412Cd2',\r\n    rpcUrl: [[OP_RPC]] ,\r\n    id: 111,\r\n  },\r\n  fantom: {\r\n    routerAddress: '0xAf5191B0De278C7286d6C7CC6ab6BB8A73bA2Cd6',\r\n    lpStakingAddress: '0x224D8Fd7aB6AD4c6eb4611Ce56EF35Dec2277F03',\r\n    rpcUrl: [[FANTOM_RPC]],\r\n    id: 112,\r\n  },\r\n};\r\n\r\nconst erc20 = (tokenAddress, provider) => {\r\n  const abi = [\r\n    'function balanceOf(address account) external view returns (uint256)',\r\n    'function approve(address spender, uint256 amount) external returns (bool)',\r\n    'function allowance(address owner, address spender) external view returns (uint256)',\r\n  ];\r\n  return new ethers.Contract(tokenAddress, abi, provider);\r\n};\r\n\r\nconst getAllowance = async (routerAddress, tokenAddress, wallet) => {\r\n  const tokenContract = erc20(tokenAddress, wallet);\r\n\r\n  const allowanceAmount = await tokenContract.allowance(\r\n    wallet.address,\r\n    routerAddress\r\n  );\r\n\r\n  return allowanceAmount;\r\n};\r\n\r\nconst approve = async (routerAddress, tokenAddress, wallet, gasPrice) => {\r\n  console.log('Approving...');\r\n\r\n  const tokenContract = erc20(tokenAddress, wallet);\r\n\r\n  const tx = await tokenContract.approve(\r\n    routerAddress,\r\n    ethers.constants.MaxUint256,\r\n    {\r\n      gasPrice,\r\n    }\r\n  );\r\n\r\n  await tx.wait();\r\n\r\n  console.log('Approved');\r\n};\r\n\r\nconst getTokenBalance = async (tokenAddress, wallet) => {\r\n  const tokenContract = erc20(tokenAddress, wallet);\r\n  const balance = await tokenContract.balanceOf(wallet.address);\r\n  return balance;\r\n};\r\n\r\nconst toWei = (amount, decimals = 18) => {\r\n  return ethers.utils.parseUnits(amount.toString(), decimals);\r\n};\r\n\r\nconst fromWei = (amount, decimals = 18) => {\r\n  return ethers.utils.formatUnits(amount.toString(), decimals);\r\n};\r\n\r\nconst getGasPrice = async (provider) => {\r\n  const gasPrice = (await provider.getGasPrice()).mul(150).div(100);\r\n  return gasPrice;\r\n};\r\n\r\nconst addLiquidity = async (tokenName, chainName, amount, privateKey) => {\r\n  const chain = chainData[chainName];\r\n  const token = tokenData[chainName][tokenName];\r\n\r\n  if (!chain) {\r\n    throw new Error('Chain not supported');\r\n  }\r\n\r\n  if (!token) {\r\n    throw new Error('Token not supported');\r\n  }\r\n\r\n  if (token === 'eth') {\r\n    throw new Error('ETH is not supported');\r\n  }\r\n\r\n  console.log(`Adding liquidity to ${chainName}-${tokenName} pool`);\r\n\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const router = new ethers.Contract(chain.routerAddress, routerABI, wallet);\r\n\r\n  const balanceInWei = await getTokenBalance(token.address, wallet);\r\n  const balance = fromWei(balanceInWei, token.decimals);\r\n\r\n  const amountInWei = toWei(amount, token.decimals);\r\n\r\n  if (balanceInWei.lt(amountInWei)) {\r\n    throw new Error('Insufficient balance');\r\n  }\r\n\r\n  console.log(`Your balance on ${chainName}-${tokenName}: ${balance}`);\r\n\r\n  const allowance = await getAllowance(router.address, token.address, wallet);\r\n\r\n  const gasPrice = await getGasPrice(provider);\r\n\r\n  if (allowance.lt(amountInWei)) {\r\n    await approve(router.address, token.address, wallet, gasPrice);\r\n  }\r\n\r\n  const newGasPrice = await getGasPrice(provider);\r\n\r\n  const tx = await router.addLiquidity(token.id, amountInWei, wallet.address, {\r\n    gasPrice: newGasPrice,\r\n  });\r\n\r\n  await tx.wait();\r\n\r\n  console.log(`Success! Transaction hash: ${tx.hash}`);\r\n};\r\n\r\nconst removeLiquidity = async (tokenName, chainName, privateKey) => {\r\n  const chain = chainData[chainName];\r\n  const token = tokenData[chainName][tokenName];\r\n\r\n  if (!chain) {\r\n    throw new Error('Chain not supported');\r\n  }\r\n\r\n  if (!token) {\r\n    throw new Error('Token not supported');\r\n  }\r\n\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const router = new ethers.Contract(chain.routerAddress, routerABI, wallet);\r\n\r\n  const amountInWei = await getTokenBalance(token.lpAddress, wallet);\r\n  const amount = fromWei(amountInWei, token.decimals);\r\n\r\n  console.log(`Removing ${amount} LP from ${chainName}-${tokenName}`);\r\n\r\n  const allowance = await getAllowance(router.address, token.lpAddress, wallet);\r\n\r\n  const gasPrice = await getGasPrice(provider);\r\n\r\n  if (allowance.lt(amountInWei)) {\r\n    await approve(router.address, token.lpAddress, wallet, gasPrice);\r\n  }\r\n\r\n  const tx = await router.instantRedeemLocal(\r\n    token.id,\r\n    amountInWei,\r\n    wallet.address,\r\n    {\r\n      gasPrice,\r\n    }\r\n  );\r\n\r\n  await tx.wait();\r\n\r\n  console.log(`Success! Transaction hash: ${tx.hash}`);\r\n};\r\n\r\nconst addLiquidityETH = async (chainName, amount, privateKey) => {\r\n  const validChains = ['ethereum', 'arbitrum', 'optimism'];\r\n\r\n  if (!validChains.includes(chainName)) {\r\n    throw new Error('Chain not supported');\r\n  }\r\n\r\n  console.log(`Adding ${amount} ETH liquidity to ${chainName}-eth pool`);\r\n\r\n  const chain = chainData[chainName];\r\n\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const ethRouter = new ethers.Contract(\r\n    chain.ethRouterAddress,\r\n    ethRouterABI,\r\n    wallet\r\n  );\r\n\r\n  const balanceInWei = await wallet.getBalance();\r\n\r\n  const balance = fromWei(balanceInWei);\r\n\r\n  const amountInWei = toWei(amount);\r\n\r\n  if (balanceInWei.lt(amountInWei)) {\r\n    throw new Error('Insufficient balance');\r\n  }\r\n\r\n  console.log(`Your balance on ${chainName}-eth: ${balance}`);\r\n\r\n  const tx = await ethRouter.addLiquidityETH({\r\n    value: amountInWei,\r\n  });\r\n\r\n  await tx.wait();\r\n\r\n  console.log(`Success! Transaction hash: ${tx.hash}`);\r\n};\r\n\r\nconst getLPTokenBalance = async (tokenName, chainName, privateKey) => {\r\n  const chain = chainData[chainName];\r\n  const token = tokenData[chainName][tokenName];\r\n\r\n  if (!chain) {\r\n    throw new Error('Chain not supported');\r\n  }\r\n\r\n  if (!token) {\r\n    throw new Error('Token not supported');\r\n  }\r\n\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const lptBalanceInWei = await getTokenBalance(token.lpAddress, wallet);\r\n  const lptBalance = fromWei(lptBalanceInWei, token.decimals);\r\n\r\n  console.log(`Your LP ${tokenName} balance is: ${lptBalance}`);\r\n};\r\n\r\n/*\r\naddLiquidity(\r\n  'usdc', - pool name (usdc, usdt, usdd, dai, frax, susd, lusd, mai, busd)\r\n  'ethereum', - chain name (ethereum, bnb, avalanche, polygon, arbitrum, optimism, fantom)\r\n  '1.231', - amount to add \r\n  'your private key'\r\n);\r\n\r\nremoveLiquidity(\r\n  'usdc', - lp token name (eth, usdc, usdt, usdd, dai, frax, susd, lusd, mai, busd)\r\n  'ethereum', - chain name (ethereum, bnb, avalanche, polygon, arbitrum, optimism, fantom)\r\n  'your private key'\r\n);\r\n\r\naddLiquidityETH(\r\n  'ethereum', - chain name (ethereum, arbitrum, optimism)\r\n  '0.1', - amount to add\r\n  'your private key'\r\n);\r\n\r\ngetLPTokenBalance(\r\n  'usdc', - lp token name (eth, usdc, usdt, usdd, dai, frax, susd, lusd, mai, busd)\r\n  'ethereum', - chain name (ethereum, bnb, avalanche, polygon, arbitrum, optimism, fantom)\r\n  'your private key'\r\n)\r\n*/\r\n\r\nif([[TASK_COIN_IN]].toLowerCase()=='eth'){\r\n        await addLiquidityETH([[TASK_NETWORK_IN_S]],[[TASK_SIZE]],[[PRIVATE_KEY]])\r\n    } else{\r\n        await addLiquidity([[TASK_COIN_IN]].toLowerCase(),[[TASK_NETWORK_IN_S]],[[TASK_SIZE]],[[PRIVATE_KEY]])\r\n    }","data_name":"d9zo349nj8","data_type":0,"language_name":"Node","language_version":"18.10.0"},{"data":"const { ethers, BigNumber } = require('ethers');\r\n\r\nconst routerABI = [\r\n  { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint16',\r\n        name: 'chainId',\r\n        type: 'uint16',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'bytes',\r\n        name: 'srcAddress',\r\n        type: 'bytes',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'nonce',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'address',\r\n        name: 'token',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amountLD',\r\n        type: 'uint256',\r\n      },\r\n      { indexed: false, internalType: 'address', name: 'to', type: 'address' },\r\n      { indexed: false, internalType: 'bytes', name: 'payload', type: 'bytes' },\r\n      { indexed: false, internalType: 'bytes', name: 'reason', type: 'bytes' },\r\n    ],\r\n    name: 'CachedSwapSaved',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'previousOwner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'newOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'OwnershipTransferred',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint16',\r\n        name: 'srcChainId',\r\n        type: 'uint16',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'bytes',\r\n        name: 'srcAddress',\r\n        type: 'bytes',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'uint256',\r\n        name: 'nonce',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'srcPoolId',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'dstPoolId',\r\n        type: 'uint256',\r\n      },\r\n      { indexed: false, internalType: 'address', name: 'to', type: 'address' },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amountSD',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'mintAmountSD',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'RedeemLocalCallback',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint8',\r\n        name: 'bridgeFunctionType',\r\n        type: 'uint8',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint16',\r\n        name: 'chainId',\r\n        type: 'uint16',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'bytes',\r\n        name: 'srcAddress',\r\n        type: 'bytes',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'nonce',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Revert',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint16',\r\n        name: 'srcChainId',\r\n        type: 'uint16',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: '_srcPoolId',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: '_dstPoolId',\r\n        type: 'uint256',\r\n      },\r\n      { indexed: false, internalType: 'bytes', name: 'to', type: 'bytes' },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'redeemAmountSD',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'mintAmountSD',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'uint256',\r\n        name: 'nonce',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'bytes',\r\n        name: 'srcAddress',\r\n        type: 'bytes',\r\n      },\r\n    ],\r\n    name: 'RevertRedeemLocal',\r\n    type: 'event',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n    ],\r\n    name: 'activateChainPath',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_amountLD', type: 'uint256' },\r\n      { internalType: 'address', name: '_to', type: 'address' },\r\n    ],\r\n    name: 'addLiquidity',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'bridge',\r\n    outputs: [{ internalType: 'contract Bridge', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '', type: 'uint16' },\r\n      { internalType: 'bytes', name: '', type: 'bytes' },\r\n      { internalType: 'uint256', name: '', type: 'uint256' },\r\n    ],\r\n    name: 'cachedSwapLookup',\r\n    outputs: [\r\n      { internalType: 'address', name: 'token', type: 'address' },\r\n      { internalType: 'uint256', name: 'amountLD', type: 'uint256' },\r\n      { internalType: 'address', name: 'to', type: 'address' },\r\n      { internalType: 'bytes', name: 'payload', type: 'bytes' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'bool', name: '_fullMode', type: 'bool' },\r\n    ],\r\n    name: 'callDelta',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_srcChainId', type: 'uint16' },\r\n      { internalType: 'bytes', name: '_srcAddress', type: 'bytes' },\r\n      { internalType: 'uint256', name: '_nonce', type: 'uint256' },\r\n    ],\r\n    name: 'clearCachedSwap',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_weight', type: 'uint256' },\r\n    ],\r\n    name: 'createChainPath',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'address', name: '_token', type: 'address' },\r\n      { internalType: 'uint8', name: '_sharedDecimals', type: 'uint8' },\r\n      { internalType: 'uint8', name: '_localDecimals', type: 'uint8' },\r\n      { internalType: 'string', name: '_name', type: 'string' },\r\n      { internalType: 'string', name: '_symbol', type: 'string' },\r\n    ],\r\n    name: 'createPool',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      {\r\n        components: [\r\n          { internalType: 'uint256', name: 'credits', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'idealBalance', type: 'uint256' },\r\n        ],\r\n        internalType: 'struct Pool.CreditObj',\r\n        name: '_c',\r\n        type: 'tuple',\r\n      },\r\n    ],\r\n    name: 'creditChainPath',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'factory',\r\n    outputs: [{ internalType: 'contract Factory', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_srcPoolId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_amountLP', type: 'uint256' },\r\n      { internalType: 'address', name: '_to', type: 'address' },\r\n    ],\r\n    name: 'instantRedeemLocal',\r\n    outputs: [{ internalType: 'uint256', name: 'amountSD', type: 'uint256' }],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'mintFeeOwner',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'owner',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'protocolFeeOwner',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint8', name: '_functionType', type: 'uint8' },\r\n      { internalType: 'bytes', name: '_toAddress', type: 'bytes' },\r\n      { internalType: 'bytes', name: '_transferAndCallPayload', type: 'bytes' },\r\n      {\r\n        components: [\r\n          { internalType: 'uint256', name: 'dstGasForCall', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'dstNativeAmount', type: 'uint256' },\r\n          { internalType: 'bytes', name: 'dstNativeAddr', type: 'bytes' },\r\n        ],\r\n        internalType: 'struct IStargateRouter.lzTxObj',\r\n        name: '_lzTxParams',\r\n        type: 'tuple',\r\n      },\r\n    ],\r\n    name: 'quoteLayerZeroFee',\r\n    outputs: [\r\n      { internalType: 'uint256', name: '', type: 'uint256' },\r\n      { internalType: 'uint256', name: '', type: 'uint256' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      {\r\n        internalType: 'address payable',\r\n        name: '_refundAddress',\r\n        type: 'address',\r\n      },\r\n      { internalType: 'uint256', name: '_amountLP', type: 'uint256' },\r\n      { internalType: 'bytes', name: '_to', type: 'bytes' },\r\n      {\r\n        components: [\r\n          { internalType: 'uint256', name: 'dstGasForCall', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'dstNativeAmount', type: 'uint256' },\r\n          { internalType: 'bytes', name: 'dstNativeAddr', type: 'bytes' },\r\n        ],\r\n        internalType: 'struct IStargateRouter.lzTxObj',\r\n        name: '_lzTxParams',\r\n        type: 'tuple',\r\n      },\r\n    ],\r\n    name: 'redeemLocal',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_srcChainId', type: 'uint16' },\r\n      { internalType: 'bytes', name: '_srcAddress', type: 'bytes' },\r\n      { internalType: 'uint256', name: '_nonce', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      { internalType: 'address', name: '_to', type: 'address' },\r\n      { internalType: 'uint256', name: '_amountSD', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_mintAmountSD', type: 'uint256' },\r\n    ],\r\n    name: 'redeemLocalCallback',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_srcChainId', type: 'uint16' },\r\n      { internalType: 'bytes', name: '_srcAddress', type: 'bytes' },\r\n      { internalType: 'uint256', name: '_nonce', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_amountSD', type: 'uint256' },\r\n      { internalType: 'bytes', name: '_to', type: 'bytes' },\r\n    ],\r\n    name: 'redeemLocalCheckOnRemote',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      {\r\n        internalType: 'address payable',\r\n        name: '_refundAddress',\r\n        type: 'address',\r\n      },\r\n      { internalType: 'uint256', name: '_amountLP', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_minAmountLD', type: 'uint256' },\r\n      { internalType: 'bytes', name: '_to', type: 'bytes' },\r\n      {\r\n        components: [\r\n          { internalType: 'uint256', name: 'dstGasForCall', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'dstNativeAmount', type: 'uint256' },\r\n          { internalType: 'bytes', name: 'dstNativeAddr', type: 'bytes' },\r\n        ],\r\n        internalType: 'struct IStargateRouter.lzTxObj',\r\n        name: '_lzTxParams',\r\n        type: 'tuple',\r\n      },\r\n    ],\r\n    name: 'redeemRemote',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'renounceOwnership',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_srcChainId', type: 'uint16' },\r\n      { internalType: 'bytes', name: '_srcAddress', type: 'bytes' },\r\n      { internalType: 'uint256', name: '_nonce', type: 'uint256' },\r\n    ],\r\n    name: 'retryRevert',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '', type: 'uint16' },\r\n      { internalType: 'bytes', name: '', type: 'bytes' },\r\n      { internalType: 'uint256', name: '', type: 'uint256' },\r\n    ],\r\n    name: 'revertLookup',\r\n    outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'bytes', name: '_srcAddress', type: 'bytes' },\r\n      { internalType: 'uint256', name: '_nonce', type: 'uint256' },\r\n      {\r\n        internalType: 'address payable',\r\n        name: '_refundAddress',\r\n        type: 'address',\r\n      },\r\n      {\r\n        components: [\r\n          { internalType: 'uint256', name: 'dstGasForCall', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'dstNativeAmount', type: 'uint256' },\r\n          { internalType: 'bytes', name: 'dstNativeAddr', type: 'bytes' },\r\n        ],\r\n        internalType: 'struct IStargateRouter.lzTxObj',\r\n        name: '_lzTxParams',\r\n        type: 'tuple',\r\n      },\r\n    ],\r\n    name: 'revertRedeemLocal',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      {\r\n        internalType: 'address payable',\r\n        name: '_refundAddress',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'sendCredits',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'contract Bridge', name: '_bridge', type: 'address' },\r\n      { internalType: 'contract Factory', name: '_factory', type: 'address' },\r\n    ],\r\n    name: 'setBridgeAndFactory',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'bool', name: '_batched', type: 'bool' },\r\n      { internalType: 'uint256', name: '_swapDeltaBP', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_lpDeltaBP', type: 'uint256' },\r\n      { internalType: 'bool', name: '_defaultSwapMode', type: 'bool' },\r\n      { internalType: 'bool', name: '_defaultLPMode', type: 'bool' },\r\n    ],\r\n    name: 'setDeltaParam',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'address', name: '_feeLibraryAddr', type: 'address' },\r\n    ],\r\n    name: 'setFeeLibrary',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_mintFeeBP', type: 'uint256' },\r\n    ],\r\n    name: 'setFees',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: '_owner', type: 'address' }],\r\n    name: 'setMintFeeOwner',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: '_owner', type: 'address' }],\r\n    name: 'setProtocolFeeOwner',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'bool', name: '_swapStop', type: 'bool' },\r\n    ],\r\n    name: 'setSwapStop',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      { internalType: 'uint16', name: '_weight', type: 'uint16' },\r\n    ],\r\n    name: 'setWeightForChainPath',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      {\r\n        internalType: 'address payable',\r\n        name: '_refundAddress',\r\n        type: 'address',\r\n      },\r\n      { internalType: 'uint256', name: '_amountLD', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_minAmountLD', type: 'uint256' },\r\n      {\r\n        components: [\r\n          { internalType: 'uint256', name: 'dstGasForCall', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'dstNativeAmount', type: 'uint256' },\r\n          { internalType: 'bytes', name: 'dstNativeAddr', type: 'bytes' },\r\n        ],\r\n        internalType: 'struct IStargateRouter.lzTxObj',\r\n        name: '_lzTxParams',\r\n        type: 'tuple',\r\n      },\r\n      { internalType: 'bytes', name: '_to', type: 'bytes' },\r\n      { internalType: 'bytes', name: '_payload', type: 'bytes' },\r\n    ],\r\n    name: 'swap',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_srcChainId', type: 'uint16' },\r\n      { internalType: 'bytes', name: '_srcAddress', type: 'bytes' },\r\n      { internalType: 'uint256', name: '_nonce', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_srcPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstPoolId', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_dstGasForCall', type: 'uint256' },\r\n      { internalType: 'address', name: '_to', type: 'address' },\r\n      {\r\n        components: [\r\n          { internalType: 'uint256', name: 'amount', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'eqFee', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'eqReward', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'lpFee', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'protocolFee', type: 'uint256' },\r\n          { internalType: 'uint256', name: 'lkbRemove', type: 'uint256' },\r\n        ],\r\n        internalType: 'struct Pool.SwapObj',\r\n        name: '_s',\r\n        type: 'tuple',\r\n      },\r\n      { internalType: 'bytes', name: '_payload', type: 'bytes' },\r\n    ],\r\n    name: 'swapRemote',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],\r\n    name: 'transferOwnership',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'address', name: '_to', type: 'address' },\r\n    ],\r\n    name: 'withdrawMintFee',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_poolId', type: 'uint256' },\r\n      { internalType: 'address', name: '_to', type: 'address' },\r\n    ],\r\n    name: 'withdrawProtocolFee',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n];\r\n\r\nconst ethRouterABI = [\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: '_stargateEthVault', type: 'address' },\r\n      { internalType: 'address', name: '_stargateRouter', type: 'address' },\r\n      { internalType: 'uint16', name: '_poolId', type: 'uint16' },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'addLiquidityETH',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'poolId',\r\n    outputs: [{ internalType: 'uint16', name: '', type: 'uint16' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'stargateEthVault',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'stargateRouter',\r\n    outputs: [\r\n      { internalType: 'contract IStargateRouter', name: '', type: 'address' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint16', name: '_dstChainId', type: 'uint16' },\r\n      {\r\n        internalType: 'address payable',\r\n        name: '_refundAddress',\r\n        type: 'address',\r\n      },\r\n      { internalType: 'bytes', name: '_toAddress', type: 'bytes' },\r\n      { internalType: 'uint256', name: '_amountLD', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_minAmountLD', type: 'uint256' },\r\n    ],\r\n    name: 'swapETH',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  { stateMutability: 'payable', type: 'receive' },\r\n];\r\n\r\nconst tokenData = {\r\n  ethereum: {\r\n    eth: {\r\n      id: 13,\r\n      lpAddress: '0x101816545F6bd2b1076434B54383a1E633390A2E',\r\n      decimals: 18,\r\n    },\r\n    usdc: {\r\n      id: 1,\r\n      address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\r\n      lpAddress: '0xdf0770dF86a8034b3EFEf0A1Bb3c889B8332FF56',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\r\n      lpAddress: '0x38EA452219524Bb87e18dE1C24D3bB59510BD783',\r\n      decimals: 6,\r\n    },\r\n    usdd: {\r\n      id: 11,\r\n      address: '0x0C10bF8FcB7Bf5412187A595ab97a3609160b5c6',\r\n      lpAddress: '0x692953e758c3669290cb1677180c64183cEe374e',\r\n      decimals: 18,\r\n    },\r\n    dai: {\r\n      id: 3,\r\n      address: '0x6B175474E89094C44Da98b954EedeAC495271d0F',\r\n      lpAddress: '0x0Faf1d2d3CED330824de3B8200fc8dc6E397850d',\r\n      decimals: 18,\r\n    },\r\n    frax: {\r\n      id: 7,\r\n      address: '0x853d955aCEf822Db058eb8505911ED77F175b99e',\r\n      lpAddress: '0xfA0F307783AC21C39E939ACFF795e27b650F6e68',\r\n    },\r\n    susd: {\r\n      id: 14,\r\n      address: '0x57Ab1ec28D129707052df4dF418D58a2D46d5f51',\r\n      lpAddress: '0x590d4f8A68583639f215f675F3a259Ed84790580',\r\n      decimals: 18,\r\n    },\r\n    lusd: {\r\n      id: 15,\r\n      address: '0x5f98805A4E8be255a32880FDeC7F6728C6568bA0',\r\n      lpAddress: '0xE8F55368C82D38bbbbDb5533e7F56AfC2E978CC2',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0x8D6CeBD76f18E1558D4DB88138e2DeFB3909fAD6',\r\n      lpAddress: '0x9cef9a0b1bE0D289ac9f4a98ff317c33EAA84eb8',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  avalanche: {\r\n    usdc: {\r\n      id: 1,\r\n      address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',\r\n      lpAddress: '0x1205f31718499dBf1fCa446663B532Ef87481fe1',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7',\r\n      lpAddress: '0x29e38769f23701A2e4A8Ef0492e19dA4604Be62c',\r\n      decimals: 6,\r\n    },\r\n    frax: {\r\n      id: 7,\r\n      address: '0xD24C2Ad096400B6FBcd2ad8B24E7acBc21A1da64',\r\n      lpAddress: '0x1c272232Df0bb6225dA87f4dEcD9d37c32f63Eea',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0x3B55E45fD6bd7d4724F5c47E0d1bCaEdd059263e',\r\n      lpAddress: '0x8736f92646B2542B3e5F3c63590cA7Fe313e283B',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  bnb: {\r\n    busd: {\r\n      id: 5,\r\n      address: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n      lpAddress: '0x98a5737749490856b401DB5Dc27F522fC314A4e1',\r\n      decimals: 18,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0x55d398326f99059ff775485246999027b3197955',\r\n      lpAddress: '0x9aA83081AA06AF7208Dcc7A4cB72C94d057D2cda',\r\n      decimals: 18,\r\n    },\r\n    usdd: {\r\n      id: 11,\r\n      address: '0xd17479997F34dd9156Deef8F95A52D81D265be9c',\r\n      lpAddress: '0x4e145a589e4c03cBe3d28520e4BF3089834289Df',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0x3F56e0c36d275367b8C502090EDF38289b3dEa0d',\r\n      lpAddress: '0x7BfD7f2498C4796f10b6C611D9db393D3052510C',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  polygon: {\r\n    usdc: {\r\n      id: 1,\r\n      address: '0x2791bca1f2de4661ed88a30c99a7a9449aa84174',\r\n      lpAddress: '0x1205f31718499dBf1fCa446663B532Ef87481fe1',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0xc2132d05d31c914a87c6611c10748aeb04b58e8f',\r\n      lpAddress: '0x29e38769f23701A2e4A8Ef0492e19dA4604Be62c',\r\n      decimals: 6,\r\n    },\r\n    dai: {\r\n      id: 3,\r\n      address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\r\n      lpAddress: '0x1c272232Df0bb6225dA87f4dEcD9d37c32f63Eea',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0xa3Fa99A148fA48D14Ed51d610c367C61876997F1',\r\n      lpAddress: '0x8736f92646B2542B3e5F3c63590cA7Fe313e283B',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  arbitrum: {\r\n    eth: {\r\n      id: 13,\r\n      lpAddress: '0x915A55e36A01285A14f05dE6e81ED9cE89772f8e',\r\n      decimals: 18,\r\n    },\r\n    usdc: {\r\n      id: 1,\r\n      address: '0xff970a61a04b1ca14834a43f5de4533ebddb5cc8',\r\n      lpAddress: '0x892785f33CdeE22A30AEF750F285E18c18040c3e',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9',\r\n      lpAddress: '0xB6CfcF89a7B22988bfC96632aC2A9D6daB60d641',\r\n      decimals: 6,\r\n    },\r\n    frax: {\r\n      id: 7,\r\n      address: '0x17FC002b466eEc40DaE837Fc4bE5c67993ddBd6F',\r\n      lpAddress: '0xaa4BF442F024820B2C28Cd0FD72b82c63e66F56C',\r\n      decimals: 18,\r\n    },\r\n    lusd: {\r\n      id: 15,\r\n      address: '0x0dDB1eA478F8eF0E22C7706D2903a41E94B1299B',\r\n      lpAddress: '0x600E576F9d853c95d58029093A16EE49646F3ca5',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0x3F56e0c36d275367b8C502090EDF38289b3dEa0d',\r\n      lpAddress: '0xF39B7Be294cB36dE8c510e267B82bb588705d977',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  optimism: {\r\n    eth: {\r\n      id: 13,\r\n      lpAddress: '0xd22363e3762cA7339569F3d33EADe20127D5F98C',\r\n      decimals: 18,\r\n    },\r\n    usdc: {\r\n      id: 1,\r\n      address: '0x7F5c764cBc14f9669B88837ca1490cCa17c31607',\r\n      lpAddress: '0xDecC0c09c3B5f6e92EF4184125D5648a66E35298',\r\n      decimals: 6,\r\n    },\r\n    dai: {\r\n      id: 3,\r\n      address: '0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1',\r\n      lpAddress: '0x165137624F1f692e69659f944BF69DE02874ee27',\r\n      decimals: 18,\r\n    },\r\n    frax: {\r\n      id: 7,\r\n      address: '0x2E3D870790dC77A83DD1d18184Acc7439A53f475',\r\n      lpAddress: '0x368605D9C6243A80903b9e326f1Cddde088B8924',\r\n      decimals: 18,\r\n    },\r\n    susd: {\r\n      id: 14,\r\n      address: '0x8c6f28f2F1A3C87F0f938b96d27520d9751ec8d9',\r\n      lpAddress: '0x2F8bC9081c7FCFeC25b9f41a50d97EaA592058ae',\r\n      decimals: 18,\r\n    },\r\n    lusd: {\r\n      id: 15,\r\n      address: '0xc40F949F8a4e094D1b49a23ea9241D289B7b2819',\r\n      lpAddress: '0x3533F5e279bDBf550272a199a223dA798D9eff78',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0xdFA46478F9e5EA86d57387849598dbFB2e964b02',\r\n      lpAddress: '0x5421FA1A48f9FF81e4580557E86C7C0D24C18036',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  fantom: {\r\n    usdc: {\r\n      id: 1,\r\n      address: '0x04068da6c83afcfa0e13ba15a6696662335d5b75',\r\n      lpAddress: '0x12edeA9cd262006cC3C4E77c90d2CD2DD4b1eb97',\r\n      decimals: 6,\r\n    },\r\n  },\r\n};\r\n\r\nconst chainData = {\r\n  ethereum: {\r\n    routerAddress: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\r\n    ethRouterAddress: '0x150f94B44927F078737562f0fcF3C95c01Cc2376',\r\n    lpStakingAddress: '0xB0D502E938ed5f4df2E681fE6E419ff29631d62b',\r\n    rpcUrl: [[ETH_RPC]] ,\r\n    id: 101,\r\n  },\r\n  bnb: {\r\n    routerAddress: '0x4a364f8c717cAAD9A442737Eb7b8A55cc6cf18D8',\r\n    lpStakingAddress: '0x3052A0F6ab15b4AE1df39962d5DdEFacA86DaB47',\r\n    rpcUrl: [[BNB_RPC]],\r\n    id: 102,\r\n  },\r\n  avalanche: {\r\n    routerAddress: '0x45A01E4e04F14f7A4a6702c74187c5F6222033cd',\r\n    lpStakingAddress: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\r\n    rpcUrl: [[AVAX_RPC]],\r\n    id: 106,\r\n  },\r\n  polygon: {\r\n    routerAddress: '0x45A01E4e04F14f7A4a6702c74187c5F6222033cd',\r\n    lpStakingAddress: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\r\n    rpcUrl: [[MATIC_RPC]],\r\n    id: 109,\r\n  },\r\n  arbitrum: {\r\n    routerAddress: '0x53Bf833A5d6c4ddA888F69c22C88C9f356a41614',\r\n    ethRouterAddress: '0xbf22f0f184bCcbeA268dF387a49fF5238dD23E40',\r\n    lpStakingAddress: '0xeA8DfEE1898a7e0a59f7527F076106d7e44c2176',\r\n    rpcUrl: [[ARBI_RPC]],\r\n    id: 110,\r\n  },\r\n  optimism: {\r\n    routerAddress: '0xB0D502E938ed5f4df2E681fE6E419ff29631d62b',\r\n    ethRouterAddress: '0xB49c4e680174E331CB0A7fF3Ab58afC9738d5F8b',\r\n    lpStakingAddress: '0x4DeA9e918c6289a52cd469cAC652727B7b412Cd2',\r\n    rpcUrl: [[OP_RPC]] ,\r\n    id: 111,\r\n  },\r\n  fantom: {\r\n    routerAddress: '0xAf5191B0De278C7286d6C7CC6ab6BB8A73bA2Cd6',\r\n    lpStakingAddress: '0x224D8Fd7aB6AD4c6eb4611Ce56EF35Dec2277F03',\r\n    rpcUrl: [[FANTOM_RPC]],\r\n    id: 112,\r\n  },\r\n};\r\n\r\nconst erc20 = (tokenAddress, provider) => {\r\n  const abi = [\r\n    'function balanceOf(address account) external view returns (uint256)',\r\n    'function approve(address spender, uint256 amount) external returns (bool)',\r\n    'function allowance(address owner, address spender) external view returns (uint256)',\r\n  ];\r\n  return new ethers.Contract(tokenAddress, abi, provider);\r\n};\r\n\r\nconst getAllowance = async (routerAddress, tokenAddress, wallet) => {\r\n  const tokenContract = erc20(tokenAddress, wallet);\r\n\r\n  const allowanceAmount = await tokenContract.allowance(\r\n    wallet.address,\r\n    routerAddress\r\n  );\r\n\r\n  return allowanceAmount;\r\n};\r\n\r\nconst approve = async (routerAddress, tokenAddress, wallet, gasPrice) => {\r\n  console.log('Approving...');\r\n\r\n  const tokenContract = erc20(tokenAddress, wallet);\r\n\r\n  const tx = await tokenContract.approve(\r\n    routerAddress,\r\n    ethers.constants.MaxUint256,\r\n    {\r\n      gasPrice,\r\n    }\r\n  );\r\n\r\n  await tx.wait();\r\n\r\n  console.log('Approved');\r\n};\r\n\r\nconst getTokenBalance = async (tokenAddress, wallet) => {\r\n  const tokenContract = erc20(tokenAddress, wallet);\r\n  const balance = await tokenContract.balanceOf(wallet.address);\r\n  return balance;\r\n};\r\n\r\nconst toWei = (amount, decimals = 18) => {\r\n  return ethers.utils.parseUnits(amount.toString(), decimals);\r\n};\r\n\r\nconst fromWei = (amount, decimals = 18) => {\r\n  return ethers.utils.formatUnits(amount.toString(), decimals);\r\n};\r\n\r\nconst getGasPrice = async (provider) => {\r\n  const gasPrice = (await provider.getGasPrice()).mul(150).div(100);\r\n  return gasPrice;\r\n};\r\n\r\nconst addLiquidity = async (tokenName, chainName, amount, privateKey) => {\r\n  const chain = chainData[chainName];\r\n  const token = tokenData[chainName][tokenName];\r\n\r\n  if (!chain) {\r\n    throw new Error('Chain not supported');\r\n  }\r\n\r\n  if (!token) {\r\n    throw new Error('Token not supported');\r\n  }\r\n\r\n  if (token === 'eth') {\r\n    throw new Error('ETH is not supported');\r\n  }\r\n\r\n  console.log(`Adding liquidity to ${chainName}-${tokenName} pool`);\r\n\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const router = new ethers.Contract(chain.routerAddress, routerABI, wallet);\r\n\r\n  const balanceInWei = await getTokenBalance(token.address, wallet);\r\n  const balance = fromWei(balanceInWei, token.decimals);\r\n\r\n  const amountInWei = toWei(amount, token.decimals);\r\n\r\n  if (balanceInWei.lt(amountInWei)) {\r\n    throw new Error('Insufficient balance');\r\n  }\r\n\r\n  console.log(`Your balance on ${chainName}-${tokenName}: ${balance}`);\r\n\r\n  const allowance = await getAllowance(router.address, token.address, wallet);\r\n\r\n  const gasPrice = await getGasPrice(provider);\r\n\r\n  if (allowance.lt(amountInWei)) {\r\n    await approve(router.address, token.address, wallet, gasPrice);\r\n  }\r\n\r\n  const newGasPrice = await getGasPrice(provider);\r\n\r\n  const tx = await router.addLiquidity(token.id, amountInWei, wallet.address, {\r\n    gasPrice: newGasPrice,\r\n  });\r\n\r\n  await tx.wait();\r\n\r\n  console.log(`Success! Transaction hash: ${tx.hash}`);\r\n};\r\n\r\nconst removeLiquidity = async (tokenName, chainName, privateKey) => {\r\n  const chain = chainData[chainName];\r\n  const token = tokenData[chainName][tokenName];\r\n\r\n  if (!chain) {\r\n    throw new Error('Chain not supported');\r\n  }\r\n\r\n  if (!token) {\r\n    throw new Error('Token not supported');\r\n  }\r\n\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const router = new ethers.Contract(chain.routerAddress, routerABI, wallet);\r\n\r\n  const amountInWei = await getTokenBalance(token.lpAddress, wallet);\r\n  const amount = fromWei(amountInWei, token.decimals);\r\n\r\n  console.log(`Removing ${amount} LP from ${chainName}-${tokenName}`);\r\n\r\n  const allowance = await getAllowance(router.address, token.lpAddress, wallet);\r\n\r\n  const gasPrice = await getGasPrice(provider);\r\n\r\n  if (allowance.lt(amountInWei)) {\r\n    await approve(router.address, token.lpAddress, wallet, gasPrice);\r\n  }\r\n\r\n  const tx = await router.instantRedeemLocal(\r\n    token.id,\r\n    amountInWei,\r\n    wallet.address,\r\n    {\r\n      gasPrice,\r\n    }\r\n  );\r\n\r\n  await tx.wait();\r\n\r\n  console.log(`Success! Transaction hash: ${tx.hash}`);\r\n};\r\n\r\nconst addLiquidityETH = async (chainName, amount, privateKey) => {\r\n  const validChains = ['ethereum', 'arbitrum', 'optimism'];\r\n\r\n  if (!validChains.includes(chainName)) {\r\n    throw new Error('Chain not supported');\r\n  }\r\n\r\n  console.log(`Adding ${amount} ETH liquidity to ${chainName}-eth pool`);\r\n\r\n  const chain = chainData[chainName];\r\n\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const ethRouter = new ethers.Contract(\r\n    chain.ethRouterAddress,\r\n    ethRouterABI,\r\n    wallet\r\n  );\r\n\r\n  const balanceInWei = await wallet.getBalance();\r\n\r\n  const balance = fromWei(balanceInWei);\r\n\r\n  const amountInWei = toWei(amount);\r\n\r\n  if (balanceInWei.lt(amountInWei)) {\r\n    throw new Error('Insufficient balance');\r\n  }\r\n\r\n  console.log(`Your balance on ${chainName}-eth: ${balance}`);\r\n\r\n  const tx = await ethRouter.addLiquidityETH({\r\n    value: amountInWei,\r\n  });\r\n\r\n  await tx.wait();\r\n\r\n  console.log(`Success! Transaction hash: ${tx.hash}`);\r\n};\r\n\r\nconst getLPTokenBalance = async (tokenName, chainName, privateKey) => {\r\n  const chain = chainData[chainName];\r\n  const token = tokenData[chainName][tokenName];\r\n\r\n  if (!chain) {\r\n    throw new Error('Chain not supported');\r\n  }\r\n\r\n  if (!token) {\r\n    throw new Error('Token not supported');\r\n  }\r\n\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const lptBalanceInWei = await getTokenBalance(token.lpAddress, wallet);\r\n  const lptBalance = fromWei(lptBalanceInWei, token.decimals);\r\n\r\n  console.log(`Your LP ${tokenName} balance is: ${lptBalance}`);\r\n};\r\n\r\n/*\r\naddLiquidity(\r\n  'usdc', - pool name (usdc, usdt, usdd, dai, frax, susd, lusd, mai, busd)\r\n  'ethereum', - chain name (ethereum, bnb, avalanche, polygon, arbitrum, optimism, fantom)\r\n  '1.231', - amount to add \r\n  'your private key'\r\n);\r\n\r\nremoveLiquidity(\r\n  'usdc', - lp token name (eth, usdc, usdt, usdd, dai, frax, susd, lusd, mai, busd)\r\n  'ethereum', - chain name (ethereum, bnb, avalanche, polygon, arbitrum, optimism, fantom)\r\n  'your private key'\r\n);\r\n\r\naddLiquidityETH(\r\n  'ethereum', - chain name (ethereum, arbitrum, optimism)\r\n  '0.1', - amount to add\r\n  'your private key'\r\n);\r\n\r\ngetLPTokenBalance(\r\n  'usdc', - lp token name (eth, usdc, usdt, usdd, dai, frax, susd, lusd, mai, busd)\r\n  'ethereum', - chain name (ethereum, bnb, avalanche, polygon, arbitrum, optimism, fantom)\r\n  'your private key'\r\n)\r\n*/\r\n\r\nawait removeLiquidity([[TASK_COIN_IN]].toLowerCase(),[[TASK_NETWORK_IN_S]],[[PRIVATE_KEY]])","data_name":"lt60ta8pjat","data_type":0,"language_name":"Node","language_version":"18.10.0"},{"data":"const { ethers } = require('ethers');\r\n\r\nconst LPStakingABI = [\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'contract StargateToken',\r\n        name: '_stargate',\r\n        type: 'address',\r\n      },\r\n      { internalType: 'uint256', name: '_stargatePerBlock', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_startBlock', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_bonusEndBlock', type: 'uint256' },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: 'address', name: 'user', type: 'address' },\r\n      { indexed: true, internalType: 'uint256', name: 'pid', type: 'uint256' },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Deposit',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: 'address', name: 'user', type: 'address' },\r\n      { indexed: true, internalType: 'uint256', name: 'pid', type: 'uint256' },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'EmergencyWithdraw',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'previousOwner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'newOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'OwnershipTransferred',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: 'address', name: 'user', type: 'address' },\r\n      { indexed: true, internalType: 'uint256', name: 'pid', type: 'uint256' },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Withdraw',\r\n    type: 'event',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'BONUS_MULTIPLIER',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_allocPoint', type: 'uint256' },\r\n      { internalType: 'contract IERC20', name: '_lpToken', type: 'address' },\r\n    ],\r\n    name: 'add',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'bonusEndBlock',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_pid', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_amount', type: 'uint256' },\r\n    ],\r\n    name: 'deposit',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '_pid', type: 'uint256' }],\r\n    name: 'emergencyWithdraw',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_from', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_to', type: 'uint256' },\r\n    ],\r\n    name: 'getMultiplier',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    name: 'lpBalances',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'massUpdatePools',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'owner',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_pid', type: 'uint256' },\r\n      { internalType: 'address', name: '_user', type: 'address' },\r\n    ],\r\n    name: 'pendingStargate',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    name: 'poolInfo',\r\n    outputs: [\r\n      { internalType: 'contract IERC20', name: 'lpToken', type: 'address' },\r\n      { internalType: 'uint256', name: 'allocPoint', type: 'uint256' },\r\n      { internalType: 'uint256', name: 'lastRewardBlock', type: 'uint256' },\r\n      { internalType: 'uint256', name: 'accStargatePerShare', type: 'uint256' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'poolLength',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'renounceOwnership',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_pid', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_allocPoint', type: 'uint256' },\r\n    ],\r\n    name: 'set',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_stargatePerBlock', type: 'uint256' },\r\n    ],\r\n    name: 'setStargatePerBlock',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'stargate',\r\n    outputs: [\r\n      { internalType: 'contract StargateToken', name: '', type: 'address' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'stargatePerBlock',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'startBlock',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'totalAllocPoint',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],\r\n    name: 'transferOwnership',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '_pid', type: 'uint256' }],\r\n    name: 'updatePool',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '', type: 'uint256' },\r\n      { internalType: 'address', name: '', type: 'address' },\r\n    ],\r\n    name: 'userInfo',\r\n    outputs: [\r\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\r\n      { internalType: 'uint256', name: 'rewardDebt', type: 'uint256' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_pid', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_amount', type: 'uint256' },\r\n    ],\r\n    name: 'withdraw',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n];\r\n\r\nconst tokenData = {\r\n  ethereum: {\r\n    eth: {\r\n      id: 13,\r\n      lpAddress: '0x101816545F6bd2b1076434B54383a1E633390A2E',\r\n      decimals: 18,\r\n    },\r\n    usdc: {\r\n      id: 1,\r\n      address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\r\n      lpAddress: '0xdf0770dF86a8034b3EFEf0A1Bb3c889B8332FF56',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\r\n      lpAddress: '0x38EA452219524Bb87e18dE1C24D3bB59510BD783',\r\n      decimals: 6,\r\n    },\r\n    usdd: {\r\n      id: 11,\r\n      address: '0x0C10bF8FcB7Bf5412187A595ab97a3609160b5c6',\r\n      lpAddress: '0x692953e758c3669290cb1677180c64183cEe374e',\r\n      decimals: 18,\r\n    },\r\n    dai: {\r\n      id: 3,\r\n      address: '0x6B175474E89094C44Da98b954EedeAC495271d0F',\r\n      lpAddress: '0x0Faf1d2d3CED330824de3B8200fc8dc6E397850d',\r\n      decimals: 18,\r\n    },\r\n    frax: {\r\n      id: 7,\r\n      address: '0x853d955aCEf822Db058eb8505911ED77F175b99e',\r\n      lpAddress: '0xfA0F307783AC21C39E939ACFF795e27b650F6e68',\r\n    },\r\n    susd: {\r\n      id: 14,\r\n      address: '0x57Ab1ec28D129707052df4dF418D58a2D46d5f51',\r\n      lpAddress: '0x590d4f8A68583639f215f675F3a259Ed84790580',\r\n      decimals: 18,\r\n    },\r\n    lusd: {\r\n      id: 15,\r\n      address: '0x5f98805A4E8be255a32880FDeC7F6728C6568bA0',\r\n      lpAddress: '0xE8F55368C82D38bbbbDb5533e7F56AfC2E978CC2',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0x8D6CeBD76f18E1558D4DB88138e2DeFB3909fAD6',\r\n      lpAddress: '0x9cef9a0b1bE0D289ac9f4a98ff317c33EAA84eb8',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  avalanche: {\r\n    usdc: {\r\n      id: 1,\r\n      address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',\r\n      lpAddress: '0x1205f31718499dBf1fCa446663B532Ef87481fe1',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7',\r\n      lpAddress: '0x29e38769f23701A2e4A8Ef0492e19dA4604Be62c',\r\n      decimals: 6,\r\n    },\r\n    frax: {\r\n      id: 7,\r\n      address: '0xD24C2Ad096400B6FBcd2ad8B24E7acBc21A1da64',\r\n      lpAddress: '0x1c272232Df0bb6225dA87f4dEcD9d37c32f63Eea',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0x3B55E45fD6bd7d4724F5c47E0d1bCaEdd059263e',\r\n      lpAddress: '0x8736f92646B2542B3e5F3c63590cA7Fe313e283B',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  bnb: {\r\n    busd: {\r\n      id: 5,\r\n      address: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n      lpAddress: '0x98a5737749490856b401DB5Dc27F522fC314A4e1',\r\n      decimals: 18,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0x55d398326f99059ff775485246999027b3197955',\r\n      lpAddress: '0x9aA83081AA06AF7208Dcc7A4cB72C94d057D2cda',\r\n      decimals: 18,\r\n    },\r\n    usdd: {\r\n      id: 11,\r\n      address: '0xd17479997F34dd9156Deef8F95A52D81D265be9c',\r\n      lpAddress: '0x4e145a589e4c03cBe3d28520e4BF3089834289Df',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0x3F56e0c36d275367b8C502090EDF38289b3dEa0d',\r\n      lpAddress: '0x7BfD7f2498C4796f10b6C611D9db393D3052510C',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  polygon: {\r\n    usdc: {\r\n      id: 1,\r\n      address: '0x2791bca1f2de4661ed88a30c99a7a9449aa84174',\r\n      lpAddress: '0x1205f31718499dBf1fCa446663B532Ef87481fe1',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0xc2132d05d31c914a87c6611c10748aeb04b58e8f',\r\n      lpAddress: '0x29e38769f23701A2e4A8Ef0492e19dA4604Be62c',\r\n      decimals: 6,\r\n    },\r\n    dai: {\r\n      id: 3,\r\n      address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\r\n      lpAddress: '0x1c272232Df0bb6225dA87f4dEcD9d37c32f63Eea',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0xa3Fa99A148fA48D14Ed51d610c367C61876997F1',\r\n      lpAddress: '0x8736f92646B2542B3e5F3c63590cA7Fe313e283B',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  arbitrum: {\r\n    eth: {\r\n      id: 13,\r\n      lpAddress: '0x915A55e36A01285A14f05dE6e81ED9cE89772f8e',\r\n      decimals: 18,\r\n    },\r\n    usdc: {\r\n      id: 1,\r\n      address: '0xff970a61a04b1ca14834a43f5de4533ebddb5cc8',\r\n      lpAddress: '0x892785f33CdeE22A30AEF750F285E18c18040c3e',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9',\r\n      lpAddress: '0xB6CfcF89a7B22988bfC96632aC2A9D6daB60d641',\r\n      decimals: 6,\r\n    },\r\n    frax: {\r\n      id: 7,\r\n      address: '0x17FC002b466eEc40DaE837Fc4bE5c67993ddBd6F',\r\n      lpAddress: '0xaa4BF442F024820B2C28Cd0FD72b82c63e66F56C',\r\n      decimals: 18,\r\n    },\r\n    lusd: {\r\n      id: 15,\r\n      address: '0x0dDB1eA478F8eF0E22C7706D2903a41E94B1299B',\r\n      lpAddress: '0x600E576F9d853c95d58029093A16EE49646F3ca5',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0x3F56e0c36d275367b8C502090EDF38289b3dEa0d',\r\n      lpAddress: '0xF39B7Be294cB36dE8c510e267B82bb588705d977',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  optimism: {\r\n    eth: {\r\n      id: 13,\r\n      lpAddress: '0xd22363e3762cA7339569F3d33EADe20127D5F98C',\r\n      decimals: 18,\r\n    },\r\n    usdc: {\r\n      id: 1,\r\n      address: '0x7F5c764cBc14f9669B88837ca1490cCa17c31607',\r\n      lpAddress: '0xDecC0c09c3B5f6e92EF4184125D5648a66E35298',\r\n      decimals: 6,\r\n    },\r\n    dai: {\r\n      id: 3,\r\n      address: '0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1',\r\n      lpAddress: '0x165137624F1f692e69659f944BF69DE02874ee27',\r\n      decimals: 18,\r\n    },\r\n    frax: {\r\n      id: 7,\r\n      address: '0x2E3D870790dC77A83DD1d18184Acc7439A53f475',\r\n      lpAddress: '0x368605D9C6243A80903b9e326f1Cddde088B8924',\r\n      decimals: 18,\r\n    },\r\n    susd: {\r\n      id: 14,\r\n      address: '0x8c6f28f2F1A3C87F0f938b96d27520d9751ec8d9',\r\n      lpAddress: '0x2F8bC9081c7FCFeC25b9f41a50d97EaA592058ae',\r\n      decimals: 18,\r\n    },\r\n    lusd: {\r\n      id: 15,\r\n      address: '0xc40F949F8a4e094D1b49a23ea9241D289B7b2819',\r\n      lpAddress: '0x3533F5e279bDBf550272a199a223dA798D9eff78',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0xdFA46478F9e5EA86d57387849598dbFB2e964b02',\r\n      lpAddress: '0x5421FA1A48f9FF81e4580557E86C7C0D24C18036',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  fantom: {\r\n    usdc: {\r\n      id: 1,\r\n      address: '0x04068da6c83afcfa0e13ba15a6696662335d5b75',\r\n      lpAddress: '0x12edeA9cd262006cC3C4E77c90d2CD2DD4b1eb97',\r\n      decimals: 6,\r\n    },\r\n  },\r\n};\r\n\r\nconst chainData = {\r\n  ethereum: {\r\n    routerAddress: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\r\n    ethRouterAddress: '0x150f94B44927F078737562f0fcF3C95c01Cc2376',\r\n    lpStakingAddress: '0xB0D502E938ed5f4df2E681fE6E419ff29631d62b',\r\n    rpcUrl: [[ETH_RPC]],\r\n    id: 101,\r\n  },\r\n  bnb: {\r\n    routerAddress: '0x4a364f8c717cAAD9A442737Eb7b8A55cc6cf18D8',\r\n    lpStakingAddress: '0x3052A0F6ab15b4AE1df39962d5DdEFacA86DaB47',\r\n    rpcUrl: [[BNB_RPC]],\r\n    id: 102,\r\n  },\r\n  avalanche: {\r\n    routerAddress: '0x45A01E4e04F14f7A4a6702c74187c5F6222033cd',\r\n    lpStakingAddress: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\r\n    rpcUrl: [[AVAX_RPC]],\r\n    id: 106,\r\n  },\r\n  polygon: {\r\n    routerAddress: '0x45A01E4e04F14f7A4a6702c74187c5F6222033cd',\r\n    lpStakingAddress: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\r\n    rpcUrl: [[MATIC_RPC]],\r\n    id: 109,\r\n  },\r\n  arbitrum: {\r\n    routerAddress: '0x53Bf833A5d6c4ddA888F69c22C88C9f356a41614',\r\n    ethRouterAddress: '0xbf22f0f184bCcbeA268dF387a49fF5238dD23E40',\r\n    lpStakingAddress: '0xeA8DfEE1898a7e0a59f7527F076106d7e44c2176',\r\n    rpcUrl: [[ARBI_RPC]],\r\n    id: 110,\r\n  },\r\n  optimism: {\r\n    routerAddress: '0xB0D502E938ed5f4df2E681fE6E419ff29631d62b',\r\n    ethRouterAddress: '0xB49c4e680174E331CB0A7fF3Ab58afC9738d5F8b',\r\n    lpStakingAddress: '0x4DeA9e918c6289a52cd469cAC652727B7b412Cd2',\r\n    rpcUrl: [[OP_RPC]],\r\n    id: 111,\r\n  },\r\n  fantom: {\r\n    routerAddress: '0xAf5191B0De278C7286d6C7CC6ab6BB8A73bA2Cd6',\r\n    lpStakingAddress: '0x224D8Fd7aB6AD4c6eb4611Ce56EF35Dec2277F03',\r\n    rpcUrl: [[FANTOM_RPC]],\r\n    id: 112,\r\n  },\r\n};\r\n\r\nconst poolIndexData = {\r\n  ethereum: {\r\n    usdc: 0,\r\n    usdt: 1,\r\n    eth: 2,\r\n    dai: 3,\r\n    frax: 4,\r\n    susd: 5,\r\n    lusd: 6,\r\n  },\r\n  arbitrum: {\r\n    usdc: 0,\r\n    usdt: 1,\r\n    eth: 2,\r\n    frax: 3,\r\n  },\r\n  bnb: {\r\n    usdt: 0,\r\n    busd: 1,\r\n  },\r\n  avalanche: {\r\n    usdc: 0,\r\n    usdt: 1,\r\n    frax: 2,\r\n  },\r\n  polygon: {\r\n    usdc: 0,\r\n    usdt: 1,\r\n    eth: 2,\r\n    frax: 3,\r\n  },\r\n  optimism: {\r\n    usdc: 0,\r\n    eth: 1,\r\n    dai: 2,\r\n    frax: 3,\r\n    susd: 4,\r\n    lusd: 5,\r\n  },\r\n  fantom: {\r\n    usdc: 0,\r\n  },\r\n};\r\n\r\nconst erc20 = (tokenAddress, provider) => {\r\n  const abi = [\r\n    'function balanceOf(address account) external view returns (uint256)',\r\n    'function approve(address spender, uint256 amount) external returns (bool)',\r\n    'function allowance(address owner, address spender) external view returns (uint256)',\r\n  ];\r\n  return new ethers.Contract(tokenAddress, abi, provider);\r\n};\r\n\r\nconst getAllowance = async (routerAddress, tokenAddress, wallet) => {\r\n  const tokenContract = erc20(tokenAddress, wallet);\r\n\r\n  const allowanceAmount = await tokenContract.allowance(\r\n    wallet.address,\r\n    routerAddress\r\n  );\r\n\r\n  return allowanceAmount;\r\n};\r\n\r\nconst approve = async (routerAddress, tokenAddress, wallet, gasPrice) => {\r\n  console.log('Approving...');\r\n\r\n  const tokenContract = erc20(tokenAddress, wallet);\r\n\r\n  const tx = await tokenContract.approve(\r\n    routerAddress,\r\n    ethers.constants.MaxUint256,\r\n    {\r\n      gasPrice,\r\n    }\r\n  );\r\n\r\n  await tx.wait();\r\n\r\n  console.log('Approved');\r\n};\r\n\r\nconst getTokenBalance = async (tokenAddress, wallet) => {\r\n  const tokenContract = erc20(tokenAddress, wallet);\r\n  const balance = await tokenContract.balanceOf(wallet.address);\r\n  return balance;\r\n};\r\n\r\nconst toWei = (amount, decimals = 18) => {\r\n  return ethers.utils.parseUnits(amount.toString(), decimals);\r\n};\r\n\r\nconst fromWei = (amount, decimals = 18) => {\r\n  return ethers.utils.formatUnits(amount.toString(), decimals);\r\n};\r\n\r\nconst getGasPrice = async (provider) => {\r\n  const gasPrice = (await provider.getGasPrice()).mul(150).div(100);\r\n  return gasPrice;\r\n};\r\n\r\nconst stakeLPTokens = async (tokenName, chainName, privateKey) => {\r\n  const chain = chainData[chainName];\r\n  const token = tokenData[chainName][tokenName];\r\n\r\n  if (!chain) {\r\n    throw new Error('Chain not supported');\r\n  }\r\n\r\n  if (!token) {\r\n    throw new Error('Token not supported');\r\n  }\r\n\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const LPStaking = new ethers.Contract(\r\n    chain.lpStakingAddress,\r\n    LPStakingABI,\r\n    wallet\r\n  );\r\n\r\n  const amountInWei = await getTokenBalance(token.lpAddress, wallet);\r\n  const amount = fromWei(amountInWei, token.decimals);\r\n\r\n  console.log(`Staking ${amount} LP ${tokenName} on ${chainName}`);\r\n\r\n  const allowance = await getAllowance(\r\n    LPStaking.address,\r\n    token.lpAddress,\r\n    wallet\r\n  );\r\n\r\n  const gasPrice = await getGasPrice(provider);\r\n\r\n  if (allowance.lt(amountInWei)) {\r\n    await approve(LPStaking.address, token.lpAddress, wallet, gasPrice);\r\n  }\r\n\r\n  const poolIndex = poolIndexData[chainName][tokenName];\r\n\r\n  const newGasPrice = await getGasPrice(provider);\r\n\r\n  const tx = await LPStaking.deposit(poolIndex, amountInWei, {\r\n    gasPrice: newGasPrice,\r\n  });\r\n\r\n  await tx.wait();\r\n\r\n  console.log(`Success! Transaction hash: ${tx.hash}`);\r\n};\r\n\r\nconst unstakeLPTokens = async (tokenName, chainName, privateKey) => {\r\n  const chain = chainData[chainName];\r\n  const token = tokenData[chainName][tokenName];\r\n\r\n  if (!chain) {\r\n    throw new Error('Chain not supported');\r\n  }\r\n\r\n  if (!token) {\r\n    throw new Error('Token not supported');\r\n  }\r\n\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const LPStaking = new ethers.Contract(\r\n    chain.lpStakingAddress,\r\n    LPStakingABI,\r\n    wallet\r\n  );\r\n\r\n  const poolIndex = poolIndexData[chainName][tokenName];\r\n\r\n  const userInfo = await LPStaking.userInfo(poolIndex, wallet.address);\r\n\r\n  const amountInWei = userInfo.amount;\r\n  const amount = fromWei(amountInWei, token.decimals);\r\n\r\n  console.log(`Unstaking ${amount} LP ${tokenName} on ${chainName}`);\r\n\r\n  const gasPrice = await getGasPrice(provider);\r\n\r\n  const tx = await LPStaking.withdraw(poolIndex, amountInWei, {\r\n    gasPrice,\r\n  });\r\n\r\n  await tx.wait();\r\n\r\n  console.log(`Success! Transaction hash: ${tx.hash}`);\r\n};\r\n\r\nconst getLPTokenBalance = async (tokenName, chainName, privateKey) => {\r\n  const chain = chainData[chainName];\r\n  const token = tokenData[chainName][tokenName];\r\n\r\n  if (!chain) {\r\n    throw new Error('Chain not supported');\r\n  }\r\n\r\n  if (!token) {\r\n    throw new Error('Token not supported');\r\n  }\r\n\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const lptBalanceInWei = await getTokenBalance(token.lpAddress, wallet);\r\n  const lptBalance = fromWei(lptBalanceInWei, token.decimals);\r\n\r\n  console.log(`Your LP ${tokenName} balance is: ${lptBalance}`);\r\n};\r\n\r\n/*\r\nstakeLPTokens(\r\n  'usdt', - lp token name (eth, usdc, usdt, usdd, dai, frax, susd, lusd, mai, busd)\r\n  'arbitrum', - chain name (ethereum, bnb, avalanche, polygon, arbitrum, optimism, fantom)\r\n  'your private key'\r\n)\r\n\r\nunstakeLPTokens(\r\n  'usdt', - lp token name (eth, usdc, usdt, usdd, dai, frax, susd, lusd, mai, busd)\r\n  'arbitrum', - chain name (ethereum, bnb, avalanche, polygon, arbitrum, optimism, fantom)\r\n  'privateKey'\r\n)\r\n\r\ngetLPTokenBalance(\r\n  'usdc', - lp token name (eth, usdc, usdt, usdd, dai, frax, susd, lusd, mai, busd)\r\n  'ethereum', - chain name (ethereum, bnb, avalanche, polygon, arbitrum, optimism, fantom)\r\n  'your private key'\r\n)\r\n*/\r\n\r\nawait stakeLPTokens([[TASK_COIN_IN]].toLowerCase(),[[TASK_NETWORK_IN_S]],[[PRIVATE_KEY]])","data_name":"qk4mnhcf7d","data_type":0,"language_name":"Node","language_version":"18.10.0"},{"data":"const { ethers } = require('ethers');\r\n\r\nconst LPStakingABI = [\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'contract StargateToken',\r\n        name: '_stargate',\r\n        type: 'address',\r\n      },\r\n      { internalType: 'uint256', name: '_stargatePerBlock', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_startBlock', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_bonusEndBlock', type: 'uint256' },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: 'address', name: 'user', type: 'address' },\r\n      { indexed: true, internalType: 'uint256', name: 'pid', type: 'uint256' },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Deposit',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: 'address', name: 'user', type: 'address' },\r\n      { indexed: true, internalType: 'uint256', name: 'pid', type: 'uint256' },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'EmergencyWithdraw',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'previousOwner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'newOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'OwnershipTransferred',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: 'address', name: 'user', type: 'address' },\r\n      { indexed: true, internalType: 'uint256', name: 'pid', type: 'uint256' },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Withdraw',\r\n    type: 'event',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'BONUS_MULTIPLIER',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_allocPoint', type: 'uint256' },\r\n      { internalType: 'contract IERC20', name: '_lpToken', type: 'address' },\r\n    ],\r\n    name: 'add',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'bonusEndBlock',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_pid', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_amount', type: 'uint256' },\r\n    ],\r\n    name: 'deposit',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '_pid', type: 'uint256' }],\r\n    name: 'emergencyWithdraw',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_from', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_to', type: 'uint256' },\r\n    ],\r\n    name: 'getMultiplier',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    name: 'lpBalances',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'massUpdatePools',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'owner',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_pid', type: 'uint256' },\r\n      { internalType: 'address', name: '_user', type: 'address' },\r\n    ],\r\n    name: 'pendingStargate',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    name: 'poolInfo',\r\n    outputs: [\r\n      { internalType: 'contract IERC20', name: 'lpToken', type: 'address' },\r\n      { internalType: 'uint256', name: 'allocPoint', type: 'uint256' },\r\n      { internalType: 'uint256', name: 'lastRewardBlock', type: 'uint256' },\r\n      { internalType: 'uint256', name: 'accStargatePerShare', type: 'uint256' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'poolLength',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'renounceOwnership',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_pid', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_allocPoint', type: 'uint256' },\r\n    ],\r\n    name: 'set',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_stargatePerBlock', type: 'uint256' },\r\n    ],\r\n    name: 'setStargatePerBlock',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'stargate',\r\n    outputs: [\r\n      { internalType: 'contract StargateToken', name: '', type: 'address' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'stargatePerBlock',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'startBlock',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'totalAllocPoint',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],\r\n    name: 'transferOwnership',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '_pid', type: 'uint256' }],\r\n    name: 'updatePool',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '', type: 'uint256' },\r\n      { internalType: 'address', name: '', type: 'address' },\r\n    ],\r\n    name: 'userInfo',\r\n    outputs: [\r\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\r\n      { internalType: 'uint256', name: 'rewardDebt', type: 'uint256' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_pid', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_amount', type: 'uint256' },\r\n    ],\r\n    name: 'withdraw',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n];\r\n\r\nconst tokenData = {\r\n  ethereum: {\r\n    eth: {\r\n      id: 13,\r\n      lpAddress: '0x101816545F6bd2b1076434B54383a1E633390A2E',\r\n      decimals: 18,\r\n    },\r\n    usdc: {\r\n      id: 1,\r\n      address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\r\n      lpAddress: '0xdf0770dF86a8034b3EFEf0A1Bb3c889B8332FF56',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\r\n      lpAddress: '0x38EA452219524Bb87e18dE1C24D3bB59510BD783',\r\n      decimals: 6,\r\n    },\r\n    usdd: {\r\n      id: 11,\r\n      address: '0x0C10bF8FcB7Bf5412187A595ab97a3609160b5c6',\r\n      lpAddress: '0x692953e758c3669290cb1677180c64183cEe374e',\r\n      decimals: 18,\r\n    },\r\n    dai: {\r\n      id: 3,\r\n      address: '0x6B175474E89094C44Da98b954EedeAC495271d0F',\r\n      lpAddress: '0x0Faf1d2d3CED330824de3B8200fc8dc6E397850d',\r\n      decimals: 18,\r\n    },\r\n    frax: {\r\n      id: 7,\r\n      address: '0x853d955aCEf822Db058eb8505911ED77F175b99e',\r\n      lpAddress: '0xfA0F307783AC21C39E939ACFF795e27b650F6e68',\r\n    },\r\n    susd: {\r\n      id: 14,\r\n      address: '0x57Ab1ec28D129707052df4dF418D58a2D46d5f51',\r\n      lpAddress: '0x590d4f8A68583639f215f675F3a259Ed84790580',\r\n      decimals: 18,\r\n    },\r\n    lusd: {\r\n      id: 15,\r\n      address: '0x5f98805A4E8be255a32880FDeC7F6728C6568bA0',\r\n      lpAddress: '0xE8F55368C82D38bbbbDb5533e7F56AfC2E978CC2',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0x8D6CeBD76f18E1558D4DB88138e2DeFB3909fAD6',\r\n      lpAddress: '0x9cef9a0b1bE0D289ac9f4a98ff317c33EAA84eb8',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  avalanche: {\r\n    usdc: {\r\n      id: 1,\r\n      address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',\r\n      lpAddress: '0x1205f31718499dBf1fCa446663B532Ef87481fe1',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7',\r\n      lpAddress: '0x29e38769f23701A2e4A8Ef0492e19dA4604Be62c',\r\n      decimals: 6,\r\n    },\r\n    frax: {\r\n      id: 7,\r\n      address: '0xD24C2Ad096400B6FBcd2ad8B24E7acBc21A1da64',\r\n      lpAddress: '0x1c272232Df0bb6225dA87f4dEcD9d37c32f63Eea',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0x3B55E45fD6bd7d4724F5c47E0d1bCaEdd059263e',\r\n      lpAddress: '0x8736f92646B2542B3e5F3c63590cA7Fe313e283B',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  bnb: {\r\n    busd: {\r\n      id: 5,\r\n      address: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n      lpAddress: '0x98a5737749490856b401DB5Dc27F522fC314A4e1',\r\n      decimals: 18,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0x55d398326f99059ff775485246999027b3197955',\r\n      lpAddress: '0x9aA83081AA06AF7208Dcc7A4cB72C94d057D2cda',\r\n      decimals: 18,\r\n    },\r\n    usdd: {\r\n      id: 11,\r\n      address: '0xd17479997F34dd9156Deef8F95A52D81D265be9c',\r\n      lpAddress: '0x4e145a589e4c03cBe3d28520e4BF3089834289Df',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0x3F56e0c36d275367b8C502090EDF38289b3dEa0d',\r\n      lpAddress: '0x7BfD7f2498C4796f10b6C611D9db393D3052510C',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  polygon: {\r\n    usdc: {\r\n      id: 1,\r\n      address: '0x2791bca1f2de4661ed88a30c99a7a9449aa84174',\r\n      lpAddress: '0x1205f31718499dBf1fCa446663B532Ef87481fe1',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0xc2132d05d31c914a87c6611c10748aeb04b58e8f',\r\n      lpAddress: '0x29e38769f23701A2e4A8Ef0492e19dA4604Be62c',\r\n      decimals: 6,\r\n    },\r\n    dai: {\r\n      id: 3,\r\n      address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\r\n      lpAddress: '0x1c272232Df0bb6225dA87f4dEcD9d37c32f63Eea',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0xa3Fa99A148fA48D14Ed51d610c367C61876997F1',\r\n      lpAddress: '0x8736f92646B2542B3e5F3c63590cA7Fe313e283B',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  arbitrum: {\r\n    eth: {\r\n      id: 13,\r\n      lpAddress: '0x915A55e36A01285A14f05dE6e81ED9cE89772f8e',\r\n      decimals: 18,\r\n    },\r\n    usdc: {\r\n      id: 1,\r\n      address: '0xff970a61a04b1ca14834a43f5de4533ebddb5cc8',\r\n      lpAddress: '0x892785f33CdeE22A30AEF750F285E18c18040c3e',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      id: 2,\r\n      address: '0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9',\r\n      lpAddress: '0xB6CfcF89a7B22988bfC96632aC2A9D6daB60d641',\r\n      decimals: 6,\r\n    },\r\n    frax: {\r\n      id: 7,\r\n      address: '0x17FC002b466eEc40DaE837Fc4bE5c67993ddBd6F',\r\n      lpAddress: '0xaa4BF442F024820B2C28Cd0FD72b82c63e66F56C',\r\n      decimals: 18,\r\n    },\r\n    lusd: {\r\n      id: 15,\r\n      address: '0x0dDB1eA478F8eF0E22C7706D2903a41E94B1299B',\r\n      lpAddress: '0x600E576F9d853c95d58029093A16EE49646F3ca5',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0x3F56e0c36d275367b8C502090EDF38289b3dEa0d',\r\n      lpAddress: '0xF39B7Be294cB36dE8c510e267B82bb588705d977',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  optimism: {\r\n    eth: {\r\n      id: 13,\r\n      lpAddress: '0xd22363e3762cA7339569F3d33EADe20127D5F98C',\r\n      decimals: 18,\r\n    },\r\n    usdc: {\r\n      id: 1,\r\n      address: '0x7F5c764cBc14f9669B88837ca1490cCa17c31607',\r\n      lpAddress: '0xDecC0c09c3B5f6e92EF4184125D5648a66E35298',\r\n      decimals: 6,\r\n    },\r\n    dai: {\r\n      id: 3,\r\n      address: '0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1',\r\n      lpAddress: '0x165137624F1f692e69659f944BF69DE02874ee27',\r\n      decimals: 18,\r\n    },\r\n    frax: {\r\n      id: 7,\r\n      address: '0x2E3D870790dC77A83DD1d18184Acc7439A53f475',\r\n      lpAddress: '0x368605D9C6243A80903b9e326f1Cddde088B8924',\r\n      decimals: 18,\r\n    },\r\n    susd: {\r\n      id: 14,\r\n      address: '0x8c6f28f2F1A3C87F0f938b96d27520d9751ec8d9',\r\n      lpAddress: '0x2F8bC9081c7FCFeC25b9f41a50d97EaA592058ae',\r\n      decimals: 18,\r\n    },\r\n    lusd: {\r\n      id: 15,\r\n      address: '0xc40F949F8a4e094D1b49a23ea9241D289B7b2819',\r\n      lpAddress: '0x3533F5e279bDBf550272a199a223dA798D9eff78',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      id: 16,\r\n      address: '0xdFA46478F9e5EA86d57387849598dbFB2e964b02',\r\n      lpAddress: '0x5421FA1A48f9FF81e4580557E86C7C0D24C18036',\r\n      decimals: 18,\r\n    },\r\n  },\r\n  fantom: {\r\n    usdc: {\r\n      id: 1,\r\n      address: '0x04068da6c83afcfa0e13ba15a6696662335d5b75',\r\n      lpAddress: '0x12edeA9cd262006cC3C4E77c90d2CD2DD4b1eb97',\r\n      decimals: 6,\r\n    },\r\n  },\r\n};\r\n\r\nconst chainData = {\r\n  ethereum: {\r\n    routerAddress: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\r\n    ethRouterAddress: '0x150f94B44927F078737562f0fcF3C95c01Cc2376',\r\n    lpStakingAddress: '0xB0D502E938ed5f4df2E681fE6E419ff29631d62b',\r\n    rpcUrl: [[ETH_RPC]] ,\r\n    id: 101,\r\n  },\r\n  bnb: {\r\n    routerAddress: '0x4a364f8c717cAAD9A442737Eb7b8A55cc6cf18D8',\r\n    lpStakingAddress: '0x3052A0F6ab15b4AE1df39962d5DdEFacA86DaB47',\r\n    rpcUrl: [[BNB_RPC]],\r\n    id: 102,\r\n  },\r\n  avalanche: {\r\n    routerAddress: '0x45A01E4e04F14f7A4a6702c74187c5F6222033cd',\r\n    lpStakingAddress: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\r\n    rpcUrl: [[AVAX_RPC]],\r\n    id: 106,\r\n  },\r\n  polygon: {\r\n    routerAddress: '0x45A01E4e04F14f7A4a6702c74187c5F6222033cd',\r\n    lpStakingAddress: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\r\n    rpcUrl: [[MATIC_RPC]],\r\n    id: 109,\r\n  },\r\n  arbitrum: {\r\n    routerAddress: '0x53Bf833A5d6c4ddA888F69c22C88C9f356a41614',\r\n    ethRouterAddress: '0xbf22f0f184bCcbeA268dF387a49fF5238dD23E40',\r\n    lpStakingAddress: '0xeA8DfEE1898a7e0a59f7527F076106d7e44c2176',\r\n    rpcUrl: [[ARBI_RPC]],\r\n    id: 110,\r\n  },\r\n  optimism: {\r\n    routerAddress: '0xB0D502E938ed5f4df2E681fE6E419ff29631d62b',\r\n    ethRouterAddress: '0xB49c4e680174E331CB0A7fF3Ab58afC9738d5F8b',\r\n    lpStakingAddress: '0x4DeA9e918c6289a52cd469cAC652727B7b412Cd2',\r\n    rpcUrl: [[OP_RPC]] ,\r\n    id: 111,\r\n  },\r\n  fantom: {\r\n    routerAddress: '0xAf5191B0De278C7286d6C7CC6ab6BB8A73bA2Cd6',\r\n    lpStakingAddress: '0x224D8Fd7aB6AD4c6eb4611Ce56EF35Dec2277F03',\r\n    rpcUrl: [[FANTOM_RPC]],\r\n    id: 112,\r\n  },\r\n};\r\n\r\nconst poolIndexData = {\r\n  ethereum: {\r\n    usdc: 0,\r\n    usdt: 1,\r\n    eth: 2,\r\n    dai: 3,\r\n    frax: 4,\r\n    susd: 5,\r\n    lusd: 6,\r\n  },\r\n  arbitrum: {\r\n    usdc: 0,\r\n    usdt: 1,\r\n    eth: 2,\r\n    frax: 3,\r\n  },\r\n  bnb: {\r\n    usdt: 0,\r\n    busd: 1,\r\n  },\r\n  avalanche: {\r\n    usdc: 0,\r\n    usdt: 1,\r\n    frax: 2,\r\n  },\r\n  polygon: {\r\n    usdc: 0,\r\n    usdt: 1,\r\n    eth: 2,\r\n    frax: 3,\r\n  },\r\n  optimism: {\r\n    usdc: 0,\r\n    eth: 1,\r\n    dai: 2,\r\n    frax: 3,\r\n    susd: 4,\r\n    lusd: 5,\r\n  },\r\n  fantom: {\r\n    usdc: 0,\r\n  },\r\n};\r\n\r\nconst erc20 = (tokenAddress, provider) => {\r\n  const abi = [\r\n    'function balanceOf(address account) external view returns (uint256)',\r\n    'function approve(address spender, uint256 amount) external returns (bool)',\r\n    'function allowance(address owner, address spender) external view returns (uint256)',\r\n  ];\r\n  return new ethers.Contract(tokenAddress, abi, provider);\r\n};\r\n\r\nconst getAllowance = async (routerAddress, tokenAddress, wallet) => {\r\n  const tokenContract = erc20(tokenAddress, wallet);\r\n\r\n  const allowanceAmount = await tokenContract.allowance(\r\n    wallet.address,\r\n    routerAddress\r\n  );\r\n\r\n  return allowanceAmount;\r\n};\r\n\r\nconst approve = async (routerAddress, tokenAddress, wallet, gasPrice) => {\r\n  console.log('Approving...');\r\n\r\n  const tokenContract = erc20(tokenAddress, wallet);\r\n\r\n  const tx = await tokenContract.approve(\r\n    routerAddress,\r\n    ethers.constants.MaxUint256,\r\n    {\r\n      gasPrice,\r\n    }\r\n  );\r\n\r\n  await tx.wait();\r\n\r\n  console.log('Approved');\r\n};\r\n\r\nconst getTokenBalance = async (tokenAddress, wallet) => {\r\n  const tokenContract = erc20(tokenAddress, wallet);\r\n  const balance = await tokenContract.balanceOf(wallet.address);\r\n  return balance;\r\n};\r\n\r\nconst toWei = (amount, decimals = 18) => {\r\n  return ethers.utils.parseUnits(amount.toString(), decimals);\r\n};\r\n\r\nconst fromWei = (amount, decimals = 18) => {\r\n  return ethers.utils.formatUnits(amount.toString(), decimals);\r\n};\r\n\r\nconst getGasPrice = async (provider) => {\r\n  const gasPrice = (await provider.getGasPrice()).mul(150).div(100);\r\n  return gasPrice;\r\n};\r\n\r\nconst stakeLPTokens = async (tokenName, chainName, privateKey) => {\r\n  const chain = chainData[chainName];\r\n  const token = tokenData[chainName][tokenName];\r\n\r\n  if (!chain) {\r\n    throw new Error('Chain not supported');\r\n  }\r\n\r\n  if (!token) {\r\n    throw new Error('Token not supported');\r\n  }\r\n\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const LPStaking = new ethers.Contract(\r\n    chain.lpStakingAddress,\r\n    LPStakingABI,\r\n    wallet\r\n  );\r\n\r\n  const amountInWei = await getTokenBalance(token.lpAddress, wallet);\r\n  const amount = fromWei(amountInWei, token.decimals);\r\n\r\n  console.log(`Staking ${amount} LP ${tokenName} on ${chainName}`);\r\n\r\n  const allowance = await getAllowance(\r\n    LPStaking.address,\r\n    token.lpAddress,\r\n    wallet\r\n  );\r\n\r\n  const gasPrice = await getGasPrice(provider);\r\n\r\n  if (allowance.lt(amountInWei)) {\r\n    await approve(LPStaking.address, token.lpAddress, wallet, gasPrice);\r\n  }\r\n\r\n  const poolIndex = poolIndexData[chainName][tokenName];\r\n\r\n  const newGasPrice = await getGasPrice(provider);\r\n\r\n  const tx = await LPStaking.deposit(poolIndex, amountInWei, {\r\n    gasPrice: newGasPrice,\r\n  });\r\n\r\n  await tx.wait();\r\n\r\n  console.log(`Success! Transaction hash: ${tx.hash}`);\r\n};\r\n\r\nconst unstakeLPTokens = async (tokenName, chainName, privateKey) => {\r\n  const chain = chainData[chainName];\r\n  const token = tokenData[chainName][tokenName];\r\n\r\n  if (!chain) {\r\n    throw new Error('Chain not supported');\r\n  }\r\n\r\n  if (!token) {\r\n    throw new Error('Token not supported');\r\n  }\r\n\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const LPStaking = new ethers.Contract(\r\n    chain.lpStakingAddress,\r\n    LPStakingABI,\r\n    wallet\r\n  );\r\n\r\n  const poolIndex = poolIndexData[chainName][tokenName];\r\n\r\n  const userInfo = await LPStaking.userInfo(poolIndex, wallet.address);\r\n\r\n  const amountInWei = userInfo.amount;\r\n  const amount = fromWei(amountInWei, token.decimals);\r\n\r\n  console.log(`Unstaking ${amount} LP ${tokenName} on ${chainName}`);\r\n\r\n  const gasPrice = await getGasPrice(provider);\r\n\r\n  const tx = await LPStaking.withdraw(poolIndex, amountInWei, {\r\n    gasPrice,\r\n  });\r\n\r\n  await tx.wait();\r\n\r\n  console.log(`Success! Transaction hash: ${tx.hash}`);\r\n};\r\n\r\nconst getLPTokenBalance = async (tokenName, chainName, privateKey) => {\r\n  const chain = chainData[chainName];\r\n  const token = tokenData[chainName][tokenName];\r\n\r\n  if (!chain) {\r\n    throw new Error('Chain not supported');\r\n  }\r\n\r\n  if (!token) {\r\n    throw new Error('Token not supported');\r\n  }\r\n\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const lptBalanceInWei = await getTokenBalance(token.lpAddress, wallet);\r\n  const lptBalance = fromWei(lptBalanceInWei, token.decimals);\r\n\r\n  console.log(`Your LP ${tokenName} balance is: ${lptBalance}`);\r\n};\r\n\r\n/*\r\nstakeLPTokens(\r\n  'usdt', - lp token name (eth, usdc, usdt, usdd, dai, frax, susd, lusd, mai, busd)\r\n  'arbitrum', - chain name (ethereum, bnb, avalanche, polygon, arbitrum, optimism, fantom)\r\n  'your private key'\r\n)\r\n\r\nunstakeLPTokens(\r\n  'usdt', - lp token name (eth, usdc, usdt, usdd, dai, frax, susd, lusd, mai, busd)\r\n  'arbitrum', - chain name (ethereum, bnb, avalanche, polygon, arbitrum, optimism, fantom)\r\n  'privateKey'\r\n)\r\n\r\ngetLPTokenBalance(\r\n  'usdc', - lp token name (eth, usdc, usdt, usdd, dai, frax, susd, lusd, mai, busd)\r\n  'ethereum', - chain name (ethereum, bnb, avalanche, polygon, arbitrum, optimism, fantom)\r\n  'your private key'\r\n)\r\n*/\r\n\r\nawait unstakeLPTokens([[TASK_COIN_IN]].toLowerCase(),[[TASK_NETWORK_IN_S]],[[PRIVATE_KEY]])","data_name":"g2zdfrs2xm","data_type":0,"language_name":"Node","language_version":"18.10.0"},{"data":"const { ethers } = require('ethers');\r\n\r\nconst LPStakingABI = [\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'contract StargateToken',\r\n        name: '_stargate',\r\n        type: 'address',\r\n      },\r\n      { internalType: 'uint256', name: '_stargatePerBlock', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_startBlock', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_bonusEndBlock', type: 'uint256' },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: 'address', name: 'user', type: 'address' },\r\n      { indexed: true, internalType: 'uint256', name: 'pid', type: 'uint256' },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Deposit',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: 'address', name: 'user', type: 'address' },\r\n      { indexed: true, internalType: 'uint256', name: 'pid', type: 'uint256' },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'EmergencyWithdraw',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'previousOwner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'newOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'OwnershipTransferred',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: 'address', name: 'user', type: 'address' },\r\n      { indexed: true, internalType: 'uint256', name: 'pid', type: 'uint256' },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Withdraw',\r\n    type: 'event',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'BONUS_MULTIPLIER',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_allocPoint', type: 'uint256' },\r\n      { internalType: 'contract IERC20', name: '_lpToken', type: 'address' },\r\n    ],\r\n    name: 'add',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'bonusEndBlock',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_pid', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_amount', type: 'uint256' },\r\n    ],\r\n    name: 'deposit',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '_pid', type: 'uint256' }],\r\n    name: 'emergencyWithdraw',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_from', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_to', type: 'uint256' },\r\n    ],\r\n    name: 'getMultiplier',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    name: 'lpBalances',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'massUpdatePools',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'owner',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_pid', type: 'uint256' },\r\n      { internalType: 'address', name: '_user', type: 'address' },\r\n    ],\r\n    name: 'pendingStargate',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    name: 'poolInfo',\r\n    outputs: [\r\n      { internalType: 'contract IERC20', name: 'lpToken', type: 'address' },\r\n      { internalType: 'uint256', name: 'allocPoint', type: 'uint256' },\r\n      { internalType: 'uint256', name: 'lastRewardBlock', type: 'uint256' },\r\n      { internalType: 'uint256', name: 'accStargatePerShare', type: 'uint256' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'poolLength',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'renounceOwnership',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_pid', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_allocPoint', type: 'uint256' },\r\n    ],\r\n    name: 'set',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_stargatePerBlock', type: 'uint256' },\r\n    ],\r\n    name: 'setStargatePerBlock',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'stargate',\r\n    outputs: [\r\n      { internalType: 'contract StargateToken', name: '', type: 'address' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'stargatePerBlock',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'startBlock',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'totalAllocPoint',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],\r\n    name: 'transferOwnership',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '_pid', type: 'uint256' }],\r\n    name: 'updatePool',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '', type: 'uint256' },\r\n      { internalType: 'address', name: '', type: 'address' },\r\n    ],\r\n    name: 'userInfo',\r\n    outputs: [\r\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\r\n      { internalType: 'uint256', name: 'rewardDebt', type: 'uint256' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_pid', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_amount', type: 'uint256' },\r\n    ],\r\n    name: 'withdraw',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n];\r\n\r\nconst chainData = {\r\n  ethereum: {\r\n    routerAddress: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\r\n    ethRouterAddress: '0x150f94B44927F078737562f0fcF3C95c01Cc2376',\r\n    lpStakingAddress: '0xB0D502E938ed5f4df2E681fE6E419ff29631d62b',\r\n    rpcUrl: [[ETH_RPC]] ,\r\n    id: 101,\r\n  },\r\n  bnb: {\r\n    routerAddress: '0x4a364f8c717cAAD9A442737Eb7b8A55cc6cf18D8',\r\n    lpStakingAddress: '0x3052A0F6ab15b4AE1df39962d5DdEFacA86DaB47',\r\n    rpcUrl: [[BNB_RPC]],\r\n    id: 102,\r\n  },\r\n  avalanche: {\r\n    routerAddress: '0x45A01E4e04F14f7A4a6702c74187c5F6222033cd',\r\n    lpStakingAddress: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\r\n    rpcUrl: [[AVAX_RPC]],\r\n    id: 106,\r\n  },\r\n  polygon: {\r\n    routerAddress: '0x45A01E4e04F14f7A4a6702c74187c5F6222033cd',\r\n    lpStakingAddress: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\r\n    rpcUrl: [[MATIC_RPC]],\r\n    id: 109,\r\n  },\r\n  arbitrum: {\r\n    routerAddress: '0x53Bf833A5d6c4ddA888F69c22C88C9f356a41614',\r\n    ethRouterAddress: '0xbf22f0f184bCcbeA268dF387a49fF5238dD23E40',\r\n    lpStakingAddress: '0xeA8DfEE1898a7e0a59f7527F076106d7e44c2176',\r\n    rpcUrl: [[ARBI_RPC]],\r\n    id: 110,\r\n  },\r\n  fantom: {\r\n    routerAddress: '0xAf5191B0De278C7286d6C7CC6ab6BB8A73bA2Cd6',\r\n    lpStakingAddress: '0x224D8Fd7aB6AD4c6eb4611Ce56EF35Dec2277F03',\r\n    rpcUrl: [[FANTOM_RPC]],\r\n    id: 112,\r\n  },\r\n};\r\n\r\nconst poolIndexData = {\r\n  ethereum: {\r\n    usdc: 0,\r\n    usdt: 1,\r\n    eth: 2,\r\n    dai: 3,\r\n    frax: 4,\r\n    susd: 5,\r\n    lusd: 6,\r\n  },\r\n  arbitrum: {\r\n    usdc: 0,\r\n    usdt: 1,\r\n    eth: 2,\r\n    frax: 3,\r\n  },\r\n  bnb: {\r\n    usdt: 0,\r\n    busd: 1,\r\n  },\r\n  avalanche: {\r\n    usdc: 0,\r\n    usdt: 1,\r\n    frax: 2,\r\n  },\r\n  polygon: {\r\n    usdc: 0,\r\n    usdt: 1,\r\n    eth: 2,\r\n    frax: 3,\r\n  },\r\n  optimism: {\r\n    usdc: 0,\r\n    eth: 1,\r\n    dai: 2,\r\n    frax: 3,\r\n    susd: 4,\r\n    lusd: 5,\r\n  },\r\n  fantom: {\r\n    usdc: 0,\r\n  },\r\n};\r\n\r\nconst fromWei = (amount, decimals = 18) => {\r\n  return ethers.utils.formatUnits(amount, decimals);\r\n};\r\n\r\nconst getGasPrice = async (provider) => {\r\n  const gasPrice = (await provider.getGasPrice()).mul(150).div(100);\r\n  return gasPrice;\r\n};\r\n\r\nconst claimSTG = async (tokenName, chainName, privateKey) => {\r\n  const chain = chainData[chainName];\r\n\r\n  if (!chain) {\r\n    throw new Error(`Chain not supported`);\r\n  }\r\n\r\n  console.log(`Claiming STG tokens on ${chainName} ${tokenName} pool`);\r\n\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const LPStaking = new ethers.Contract(\r\n    chain.lpStakingAddress,\r\n    LPStakingABI,\r\n    wallet\r\n  );\r\n\r\n  const poolIndex = poolIndexData[chainName][tokenName];\r\n\r\n  const stgAmount = await LPStaking.pendingStargate(poolIndex, wallet.address);\r\n\r\n  const gasPrice = await getGasPrice(provider);\r\n\r\n  const tx = await LPStaking.deposit(poolIndex, '0', {\r\n    gasPrice,\r\n  });\r\n\r\n  await tx.wait();\r\n\r\n  console.log(`Claimed ${fromWei(stgAmount)} STG`);\r\n  console.log(`Transaction hash: ${tx.hash}`);\r\n};\r\n\r\n/*\r\nclaimSTG(\r\n  'usdc', - pool name (eth, usdc, usdt, usdd, dai, frax, susd, lusd, mai, busd)\r\n  'ethereum', - chain name (ethereum, bnb, avalanche, polygon, arbitrum, optimism, fantom)\r\n  'your private key'\r\n)\r\n*/\r\n\r\n\r\nawait claimSTG([[TASK_COIN_IN]].toLowerCase(),[[TASK_NETWORK_IN_S]],[[PRIVATE_KEY]])","data_name":"v29jnpfc91","data_type":0,"language_name":"Node","language_version":"18.10.0"},{"data":"const { ethers } = require('ethers');\r\n\r\nconst votingEscrowABI = [\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'token_addr', type: 'address' },\r\n      { internalType: 'uint256', name: 'min_time', type: 'uint256' },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'provider',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'value',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'uint256',\r\n        name: 'locktime',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'enum VotingEscrow.DepositType',\r\n        name: 'deposit_type',\r\n        type: 'uint8',\r\n      },\r\n      { indexed: false, internalType: 'uint256', name: 'ts', type: 'uint256' },\r\n    ],\r\n    name: 'Deposit',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'previousOwner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'newOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'OwnershipTransferred',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'prevSupply',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'supply',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Supply',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'provider',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'value',\r\n        type: 'uint256',\r\n      },\r\n      { indexed: false, internalType: 'uint256', name: 'ts', type: 'uint256' },\r\n    ],\r\n    name: 'Withdraw',\r\n    type: 'event',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'MAXTIME',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'MINTIME',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'addr', type: 'address' }],\r\n    name: 'add_to_whitelist',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'addr', type: 'address' }],\r\n    name: 'balanceOf',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'addr', type: 'address' },\r\n      { internalType: 'uint256', name: '_block', type: 'uint256' },\r\n    ],\r\n    name: 'balanceOfAt',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'addr', type: 'address' },\r\n      { internalType: 'uint256', name: '_t', type: 'uint256' },\r\n    ],\r\n    name: 'balanceOfAtT',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: '_newController', type: 'address' },\r\n    ],\r\n    name: 'changeController',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'checkpoint',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    name: 'contracts_whitelist',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'controller',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_value', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_unlock_time', type: 'uint256' },\r\n    ],\r\n    name: 'create_lock',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'decimals',\r\n    outputs: [{ internalType: 'uint8', name: '', type: 'uint8' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: '_addr', type: 'address' },\r\n      { internalType: 'uint256', name: '_value', type: 'uint256' },\r\n    ],\r\n    name: 'deposit_for',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'epoch',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'addr', type: 'address' }],\r\n    name: 'get_last_user_slope',\r\n    outputs: [{ internalType: 'int128', name: '', type: 'int128' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '_value', type: 'uint256' }],\r\n    name: 'increase_amount',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_value', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_unlock_time', type: 'uint256' },\r\n    ],\r\n    name: 'increase_amount_and_time',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_unlock_time', type: 'uint256' },\r\n    ],\r\n    name: 'increase_unlock_time',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    name: 'locked',\r\n    outputs: [\r\n      { internalType: 'int128', name: 'amount', type: 'int128' },\r\n      { internalType: 'uint256', name: 'end', type: 'uint256' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: '_addr', type: 'address' }],\r\n    name: 'locked__end',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'name',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'owner',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    name: 'point_history',\r\n    outputs: [\r\n      { internalType: 'int128', name: 'bias', type: 'int128' },\r\n      { internalType: 'int128', name: 'slope', type: 'int128' },\r\n      { internalType: 'uint256', name: 'ts', type: 'uint256' },\r\n      { internalType: 'uint256', name: 'blk', type: 'uint256' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'addr', type: 'address' }],\r\n    name: 'remove_from_whitelist',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'renounceOwnership',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    name: 'slope_changes',\r\n    outputs: [{ internalType: 'int128', name: '', type: 'int128' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'supply',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'symbol',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'token',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'totalSupply',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '_block', type: 'uint256' }],\r\n    name: 'totalSupplyAt',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 't', type: 'uint256' }],\r\n    name: 'totalSupplyAtT',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],\r\n    name: 'transferOwnership',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'transfersEnabled',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'unlock',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'unlocked',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    name: 'user_point_epoch',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: '', type: 'address' },\r\n      { internalType: 'uint256', name: '', type: 'uint256' },\r\n    ],\r\n    name: 'user_point_history',\r\n    outputs: [\r\n      { internalType: 'int128', name: 'bias', type: 'int128' },\r\n      { internalType: 'int128', name: 'slope', type: 'int128' },\r\n      { internalType: 'uint256', name: 'ts', type: 'uint256' },\r\n      { internalType: 'uint256', name: 'blk', type: 'uint256' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: '_addr', type: 'address' },\r\n      { internalType: 'uint256', name: '_idx', type: 'uint256' },\r\n    ],\r\n    name: 'user_point_history__ts',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'version',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'withdraw',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_value', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_unlock_time', type: 'uint256' },\r\n    ],\r\n    name: 'withdraw_and_create_lock',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n];\r\n\r\nconst chainData = {\r\n  ethereum: {\r\n    routerAddress: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\r\n    ethRouterAddress: '0x150f94B44927F078737562f0fcF3C95c01Cc2376',\r\n    lpStakingAddress: '0xB0D502E938ed5f4df2E681fE6E419ff29631d62b',\r\n    stargateTokenAddress: '0xaf5191b0de278c7286d6c7cc6ab6bb8a73ba2cd6',\r\n    votingEscrowAddress: '0x0e42acBD23FAee03249DAFF896b78d7e79fBD58E',\r\n    rpcUrl: [[ETH_RPC]] ,\r\n    id: 101,\r\n  },\r\n  bnb: {\r\n    routerAddress: '0x4a364f8c717cAAD9A442737Eb7b8A55cc6cf18D8',\r\n    lpStakingAddress: '0x3052A0F6ab15b4AE1df39962d5DdEFacA86DaB47',\r\n    stargateTokenAddress: '0xB0D502E938ed5f4df2E681fE6E419ff29631d62b',\r\n    votingEscrowAddress: '0xD4888870C8686c748232719051b677791dBDa26D',\r\n    rpcUrl: [[BNB_RPC]],\r\n    id: 102,\r\n  },\r\n  avalanche: {\r\n    routerAddress: '0x45A01E4e04F14f7A4a6702c74187c5F6222033cd',\r\n    lpStakingAddress: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\r\n    stargateTokenAddress: '0x2F6F07CDcf3588944Bf4C42aC74ff24bF56e7590',\r\n    votingEscrowAddress: '0xCa0F57D295bbcE554DA2c07b005b7d6565a58fCE',\r\n    rpcUrl: [[AVAX_RPC]],\r\n    id: 106,\r\n  },\r\n  polygon: {\r\n    routerAddress: '0x45A01E4e04F14f7A4a6702c74187c5F6222033cd',\r\n    lpStakingAddress: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\r\n    stargateTokenAddress: '0x2F6F07CDcf3588944Bf4C42aC74ff24bF56e7590',\r\n    votingEscrowAddress: '0x3AB2DA31bBD886A7eDF68a6b60D3CDe657D3A15D',\r\n    rpcUrl: [[MATIC_RPC]],\r\n    id: 109,\r\n  },\r\n  arbitrum: {\r\n    routerAddress: '0x53Bf833A5d6c4ddA888F69c22C88C9f356a41614',\r\n    ethRouterAddress: '0xbf22f0f184bCcbeA268dF387a49fF5238dD23E40',\r\n    lpStakingAddress: '0xeA8DfEE1898a7e0a59f7527F076106d7e44c2176',\r\n    stargateTokenAddress: '0x6694340fc020c5E6B96567843da2df01b2CE1eb6',\r\n    votingEscrowAddress: '0xfBd849E6007f9BC3CC2D6Eb159c045B8dc660268',\r\n    rpcUrl: [[ARBI_RPC]],\r\n    id: 110,\r\n  },\r\n  fantom: {\r\n    routerAddress: '0xAf5191B0De278C7286d6C7CC6ab6BB8A73bA2Cd6',\r\n    lpStakingAddress: '0x224D8Fd7aB6AD4c6eb4611Ce56EF35Dec2277F03',\r\n    stargateTokenAddress: '0x2F6F07CDcf3588944Bf4C42aC74ff24bF56e7590',\r\n    votingEscrowAddress: '0x933421675cDC8c280e5F21f0e061E77849293dba',\r\n    rpcUrl: [[FANTOM_RPC]],\r\n    id: 112,\r\n  },\r\n};\r\n\r\nconst erc20 = (tokenAddress, provider) => {\r\n  const abi = [\r\n    'function balanceOf(address account) external view returns (uint256)',\r\n    'function approve(address spender, uint256 amount) external returns (bool)',\r\n    'function allowance(address owner, address spender) external view returns (uint256)',\r\n  ];\r\n  return new ethers.Contract(tokenAddress, abi, provider);\r\n};\r\n\r\nconst getAllowance = async (routerAddress, tokenAddress, wallet) => {\r\n  const tokenContract = erc20(tokenAddress, wallet);\r\n\r\n  const allowanceAmount = await tokenContract.allowance(\r\n    wallet.address,\r\n    routerAddress\r\n  );\r\n\r\n  return allowanceAmount;\r\n};\r\n\r\nconst approve = async (routerAddress, tokenAddress, wallet, gasPrice) => {\r\n  console.log('Approving...');\r\n\r\n  const tokenContract = erc20(tokenAddress, wallet);\r\n\r\n  const tx = await tokenContract.approve(\r\n    routerAddress,\r\n    ethers.constants.MaxUint256,\r\n    {\r\n      gasPrice,\r\n    }\r\n  );\r\n\r\n  await tx.wait();\r\n\r\n  console.log('Approved');\r\n};\r\n\r\nconst getTokenBalance = async (tokenAddress, wallet) => {\r\n  const tokenContract = erc20(tokenAddress, wallet);\r\n  const balance = await tokenContract.balanceOf(wallet.address);\r\n  return balance;\r\n};\r\n\r\nconst toWei = (amount, decimals = 18) => {\r\n  return ethers.utils.parseUnits(amount.toString(), decimals);\r\n};\r\n\r\nconst fromWei = (amount, decimals = 18) => {\r\n  return ethers.utils.formatUnits(amount.toString(), decimals);\r\n};\r\n\r\nconst getGasPrice = async (provider) => {\r\n  const gasPrice = (await provider.getGasPrice()).mul(150).div(100);\r\n  return gasPrice;\r\n};\r\n\r\nconst stakeSTG = async (chainName, amount, unlockInMonths, privateKey) => {\r\n  const chain = chainData[chainName];\r\n\r\n  if (!chain) {\r\n    throw new Error('Chain not supported');\r\n  }\r\n\r\n  console.log(`Staking ${amount} STG on ${chainName}`);\r\n\r\n  const { votingEscrowAddress, stargateTokenAddress } = chain;\r\n\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const amountInWei = toWei(amount);\r\n\r\n  const votingEscrow = new ethers.Contract(\r\n    votingEscrowAddress,\r\n    votingEscrowABI,\r\n    wallet\r\n  );\r\n\r\n  const stargateTokenBalanceInWei = await getTokenBalance(\r\n    stargateTokenAddress,\r\n    wallet\r\n  );\r\n\r\n  const stargateTokenBalance = fromWei(stargateTokenBalanceInWei);\r\n\r\n  if (stargateTokenBalanceInWei.lt(amountInWei)) {\r\n    throw new Error('Insufficient balance');\r\n  }\r\n\r\n  console.log(`Your balance: ${stargateTokenBalance} STG`);\r\n\r\n  const allowanceAmountInWei = await getAllowance(\r\n    votingEscrowAddress,\r\n    stargateTokenAddress,\r\n    wallet\r\n  );\r\n\r\n  const gasPrice = await getGasPrice(provider);\r\n\r\n  if (allowanceAmountInWei.lt(amountInWei)) {\r\n    await approve(votingEscrowAddress, stargateTokenAddress, wallet, gasPrice);\r\n  }\r\n\r\n  const now = Date.now() / 1000; // in seconds\r\n\r\n  const secondsInMonth = 60 * 60 * 24 * 30;\r\n\r\n  const unlockTimeRounded = Math.ceil(now + secondsInMonth * unlockInMonths);\r\n\r\n  const unlockTimeRoundedSafe = unlockTimeRounded + 1000;\r\n\r\n  const newGasPrice = await getGasPrice(provider);\r\n\r\n  const tx = await votingEscrow.create_lock(\r\n    amountInWei,\r\n    unlockTimeRoundedSafe,\r\n    {\r\n      gasPrice: newGasPrice,\r\n    }\r\n  );\r\n\r\n  await tx.wait();\r\n\r\n  console.log(`Staked ${amount} for ${unlockInMonths} months`);\r\n  console.log(`Transaction hash: ${tx.hash}`);\r\n};\r\n\r\nconst unstakeSTG = async (chainName, privateKey) => {\r\n  const chain = chainData[chainName];\r\n\r\n  if (!chain) {\r\n    throw new Error('Chain not supported');\r\n  }\r\n\r\n  console.log(`Unstaking STG on ${chainName}`);\r\n\r\n  const { votingEscrowAddress } = chain;\r\n\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const votingEscrow = new ethers.Contract(\r\n    votingEscrowAddress,\r\n    votingEscrowABI,\r\n    wallet\r\n  );\r\n\r\n  const gasPrice = await getGasPrice(provider);\r\n\r\n  const tx = await votingEscrow.withdraw({ gasPrice });\r\n\r\n  await tx.wait();\r\n\r\n  console.log('Unstaked STG successfully');\r\n  console.log(`Transaction hash: ${tx.hash}`);\r\n};\r\n\r\n/*\r\nstakeSTG(\r\n  'arbitrum', - chain name (ethereum, bnb, avalanche, polygon, arbitrum, fantom)\r\n  '0.121', - amount STG to stake\r\n  '3', - unlock time in months (from 1 to 34)\r\n  'your private key'\r\n)\r\n\r\nunstakeSTG(\r\n  'arbitrum', - chain name (ethereum, bnb, avalanche, polygon, arbitrum, fantom)\r\n  'your private key'\r\n)\r\n*/\r\n\r\n\r\nawait stakeSTG([[TASK_NETWORK_IN_S]],[[TASK_SIZE]],[[TASK_COIN_OUT]],[[PRIVATE_KEY]])","data_name":"pjjg5nffu6","data_type":0,"language_name":"Node","language_version":"18.10.0"},{"data":"const { ethers } = require('ethers');\r\n\r\nconst votingEscrowABI = [\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'token_addr', type: 'address' },\r\n      { internalType: 'uint256', name: 'min_time', type: 'uint256' },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'provider',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'value',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'uint256',\r\n        name: 'locktime',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'enum VotingEscrow.DepositType',\r\n        name: 'deposit_type',\r\n        type: 'uint8',\r\n      },\r\n      { indexed: false, internalType: 'uint256', name: 'ts', type: 'uint256' },\r\n    ],\r\n    name: 'Deposit',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'previousOwner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'newOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'OwnershipTransferred',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'prevSupply',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'supply',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Supply',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'provider',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'value',\r\n        type: 'uint256',\r\n      },\r\n      { indexed: false, internalType: 'uint256', name: 'ts', type: 'uint256' },\r\n    ],\r\n    name: 'Withdraw',\r\n    type: 'event',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'MAXTIME',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'MINTIME',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'addr', type: 'address' }],\r\n    name: 'add_to_whitelist',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'addr', type: 'address' }],\r\n    name: 'balanceOf',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'addr', type: 'address' },\r\n      { internalType: 'uint256', name: '_block', type: 'uint256' },\r\n    ],\r\n    name: 'balanceOfAt',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'addr', type: 'address' },\r\n      { internalType: 'uint256', name: '_t', type: 'uint256' },\r\n    ],\r\n    name: 'balanceOfAtT',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: '_newController', type: 'address' },\r\n    ],\r\n    name: 'changeController',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'checkpoint',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    name: 'contracts_whitelist',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'controller',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_value', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_unlock_time', type: 'uint256' },\r\n    ],\r\n    name: 'create_lock',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'decimals',\r\n    outputs: [{ internalType: 'uint8', name: '', type: 'uint8' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: '_addr', type: 'address' },\r\n      { internalType: 'uint256', name: '_value', type: 'uint256' },\r\n    ],\r\n    name: 'deposit_for',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'epoch',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'addr', type: 'address' }],\r\n    name: 'get_last_user_slope',\r\n    outputs: [{ internalType: 'int128', name: '', type: 'int128' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '_value', type: 'uint256' }],\r\n    name: 'increase_amount',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_value', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_unlock_time', type: 'uint256' },\r\n    ],\r\n    name: 'increase_amount_and_time',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_unlock_time', type: 'uint256' },\r\n    ],\r\n    name: 'increase_unlock_time',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    name: 'locked',\r\n    outputs: [\r\n      { internalType: 'int128', name: 'amount', type: 'int128' },\r\n      { internalType: 'uint256', name: 'end', type: 'uint256' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: '_addr', type: 'address' }],\r\n    name: 'locked__end',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'name',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'owner',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    name: 'point_history',\r\n    outputs: [\r\n      { internalType: 'int128', name: 'bias', type: 'int128' },\r\n      { internalType: 'int128', name: 'slope', type: 'int128' },\r\n      { internalType: 'uint256', name: 'ts', type: 'uint256' },\r\n      { internalType: 'uint256', name: 'blk', type: 'uint256' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'addr', type: 'address' }],\r\n    name: 'remove_from_whitelist',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'renounceOwnership',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    name: 'slope_changes',\r\n    outputs: [{ internalType: 'int128', name: '', type: 'int128' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'supply',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'symbol',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'token',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'totalSupply',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '_block', type: 'uint256' }],\r\n    name: 'totalSupplyAt',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 't', type: 'uint256' }],\r\n    name: 'totalSupplyAtT',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],\r\n    name: 'transferOwnership',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'transfersEnabled',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'unlock',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'unlocked',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    name: 'user_point_epoch',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: '', type: 'address' },\r\n      { internalType: 'uint256', name: '', type: 'uint256' },\r\n    ],\r\n    name: 'user_point_history',\r\n    outputs: [\r\n      { internalType: 'int128', name: 'bias', type: 'int128' },\r\n      { internalType: 'int128', name: 'slope', type: 'int128' },\r\n      { internalType: 'uint256', name: 'ts', type: 'uint256' },\r\n      { internalType: 'uint256', name: 'blk', type: 'uint256' },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: '_addr', type: 'address' },\r\n      { internalType: 'uint256', name: '_idx', type: 'uint256' },\r\n    ],\r\n    name: 'user_point_history__ts',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'version',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'withdraw',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'uint256', name: '_value', type: 'uint256' },\r\n      { internalType: 'uint256', name: '_unlock_time', type: 'uint256' },\r\n    ],\r\n    name: 'withdraw_and_create_lock',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n];\r\n\r\nconst chainData = {\r\n  ethereum: {\r\n    routerAddress: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\r\n    ethRouterAddress: '0x150f94B44927F078737562f0fcF3C95c01Cc2376',\r\n    lpStakingAddress: '0xB0D502E938ed5f4df2E681fE6E419ff29631d62b',\r\n    stargateTokenAddress: '0xaf5191b0de278c7286d6c7cc6ab6bb8a73ba2cd6',\r\n    votingEscrowAddress: '0x0e42acBD23FAee03249DAFF896b78d7e79fBD58E',\r\n    rpcUrl: [[ETH_RPC]] ,\r\n    id: 101,\r\n  },\r\n  bnb: {\r\n    routerAddress: '0x4a364f8c717cAAD9A442737Eb7b8A55cc6cf18D8',\r\n    lpStakingAddress: '0x3052A0F6ab15b4AE1df39962d5DdEFacA86DaB47',\r\n    stargateTokenAddress: '0xB0D502E938ed5f4df2E681fE6E419ff29631d62b',\r\n    votingEscrowAddress: '0xD4888870C8686c748232719051b677791dBDa26D',\r\n    rpcUrl: [[BNB_RPC]],\r\n    id: 102,\r\n  },\r\n  avalanche: {\r\n    routerAddress: '0x45A01E4e04F14f7A4a6702c74187c5F6222033cd',\r\n    lpStakingAddress: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\r\n    stargateTokenAddress: '0x2F6F07CDcf3588944Bf4C42aC74ff24bF56e7590',\r\n    votingEscrowAddress: '0xCa0F57D295bbcE554DA2c07b005b7d6565a58fCE',\r\n    rpcUrl: [[AVAX_RPC]],\r\n    id: 106,\r\n  },\r\n  polygon: {\r\n    routerAddress: '0x45A01E4e04F14f7A4a6702c74187c5F6222033cd',\r\n    lpStakingAddress: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\r\n    stargateTokenAddress: '0x2F6F07CDcf3588944Bf4C42aC74ff24bF56e7590',\r\n    votingEscrowAddress: '0x3AB2DA31bBD886A7eDF68a6b60D3CDe657D3A15D',\r\n    rpcUrl: [[MATIC_RPC]],\r\n    id: 109,\r\n  },\r\n  arbitrum: {\r\n    routerAddress: '0x53Bf833A5d6c4ddA888F69c22C88C9f356a41614',\r\n    ethRouterAddress: '0xbf22f0f184bCcbeA268dF387a49fF5238dD23E40',\r\n    lpStakingAddress: '0xeA8DfEE1898a7e0a59f7527F076106d7e44c2176',\r\n    stargateTokenAddress: '0x6694340fc020c5E6B96567843da2df01b2CE1eb6',\r\n    votingEscrowAddress: '0xfBd849E6007f9BC3CC2D6Eb159c045B8dc660268',\r\n    rpcUrl: [[ARBI_RPC]],\r\n    id: 110,\r\n  },\r\n  fantom: {\r\n    routerAddress: '0xAf5191B0De278C7286d6C7CC6ab6BB8A73bA2Cd6',\r\n    lpStakingAddress: '0x224D8Fd7aB6AD4c6eb4611Ce56EF35Dec2277F03',\r\n    stargateTokenAddress: '0x2F6F07CDcf3588944Bf4C42aC74ff24bF56e7590',\r\n    votingEscrowAddress: '0x933421675cDC8c280e5F21f0e061E77849293dba',\r\n    rpcUrl: [[FANTOM_RPC]],\r\n    id: 112,\r\n  },\r\n};\r\n\r\nconst erc20 = (tokenAddress, provider) => {\r\n  const abi = [\r\n    'function balanceOf(address account) external view returns (uint256)',\r\n    'function approve(address spender, uint256 amount) external returns (bool)',\r\n    'function allowance(address owner, address spender) external view returns (uint256)',\r\n  ];\r\n  return new ethers.Contract(tokenAddress, abi, provider);\r\n};\r\n\r\nconst getAllowance = async (routerAddress, tokenAddress, wallet) => {\r\n  const tokenContract = erc20(tokenAddress, wallet);\r\n\r\n  const allowanceAmount = await tokenContract.allowance(\r\n    wallet.address,\r\n    routerAddress\r\n  );\r\n\r\n  return allowanceAmount;\r\n};\r\n\r\nconst approve = async (routerAddress, tokenAddress, wallet, gasPrice) => {\r\n  console.log('Approving...');\r\n\r\n  const tokenContract = erc20(tokenAddress, wallet);\r\n\r\n  const tx = await tokenContract.approve(\r\n    routerAddress,\r\n    ethers.constants.MaxUint256,\r\n    {\r\n      gasPrice,\r\n    }\r\n  );\r\n\r\n  await tx.wait();\r\n\r\n  console.log('Approved');\r\n};\r\n\r\nconst getTokenBalance = async (tokenAddress, wallet) => {\r\n  const tokenContract = erc20(tokenAddress, wallet);\r\n  const balance = await tokenContract.balanceOf(wallet.address);\r\n  return balance;\r\n};\r\n\r\nconst toWei = (amount, decimals = 18) => {\r\n  return ethers.utils.parseUnits(amount.toString(), decimals);\r\n};\r\n\r\nconst fromWei = (amount, decimals = 18) => {\r\n  return ethers.utils.formatUnits(amount.toString(), decimals);\r\n};\r\n\r\nconst getGasPrice = async (provider) => {\r\n  const gasPrice = (await provider.getGasPrice()).mul(150).div(100);\r\n  return gasPrice;\r\n};\r\n\r\nconst stakeSTG = async (chainName, amount, unlockInMonths, privateKey) => {\r\n  const chain = chainData[chainName];\r\n\r\n  if (!chain) {\r\n    throw new Error('Chain not supported');\r\n  }\r\n\r\n  console.log(`Staking ${amount} STG on ${chainName}`);\r\n\r\n  const { votingEscrowAddress, stargateTokenAddress } = chain;\r\n\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const amountInWei = toWei(amount);\r\n\r\n  const votingEscrow = new ethers.Contract(\r\n    votingEscrowAddress,\r\n    votingEscrowABI,\r\n    wallet\r\n  );\r\n\r\n  const stargateTokenBalanceInWei = await getTokenBalance(\r\n    stargateTokenAddress,\r\n    wallet\r\n  );\r\n\r\n  const stargateTokenBalance = fromWei(stargateTokenBalanceInWei);\r\n\r\n  if (stargateTokenBalanceInWei.lt(amountInWei)) {\r\n    throw new Error('Insufficient balance');\r\n  }\r\n\r\n  console.log(`Your balance: ${stargateTokenBalance} STG`);\r\n\r\n  const allowanceAmountInWei = await getAllowance(\r\n    votingEscrowAddress,\r\n    stargateTokenAddress,\r\n    wallet\r\n  );\r\n\r\n  const gasPrice = await getGasPrice(provider);\r\n\r\n  if (allowanceAmountInWei.lt(amountInWei)) {\r\n    await approve(votingEscrowAddress, stargateTokenAddress, wallet, gasPrice);\r\n  }\r\n\r\n  const now = Date.now() / 1000; // in seconds\r\n\r\n  const secondsInMonth = 60 * 60 * 24 * 30;\r\n\r\n  const unlockTimeRounded = Math.ceil(now + secondsInMonth * unlockInMonths);\r\n\r\n  const unlockTimeRoundedSafe = unlockTimeRounded + 1000;\r\n\r\n  const newGasPrice = await getGasPrice(provider);\r\n\r\n  const tx = await votingEscrow.create_lock(\r\n    amountInWei,\r\n    unlockTimeRoundedSafe,\r\n    {\r\n      gasPrice: newGasPrice,\r\n    }\r\n  );\r\n\r\n  await tx.wait();\r\n\r\n  console.log(`Staked ${amount} for ${unlockInMonths} months`);\r\n  console.log(`Transaction hash: ${tx.hash}`);\r\n};\r\n\r\nconst unstakeSTG = async (chainName, privateKey) => {\r\n  const chain = chainData[chainName];\r\n\r\n  if (!chain) {\r\n    throw new Error('Chain not supported');\r\n  }\r\n\r\n  console.log(`Unstaking STG on ${chainName}`);\r\n\r\n  const { votingEscrowAddress } = chain;\r\n\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const votingEscrow = new ethers.Contract(\r\n    votingEscrowAddress,\r\n    votingEscrowABI,\r\n    wallet\r\n  );\r\n\r\n  const gasPrice = await getGasPrice(provider);\r\n\r\n  const tx = await votingEscrow.withdraw({ gasPrice });\r\n\r\n  await tx.wait();\r\n\r\n  console.log('Unstaked STG successfully');\r\n  console.log(`Transaction hash: ${tx.hash}`);\r\n};\r\n\r\n/*\r\nstakeSTG(\r\n  'arbitrum', - chain name (ethereum, bnb, avalanche, polygon, arbitrum, fantom)\r\n  '0.121', - amount STG to stake\r\n  '3', - unlock time in months (from 1 to 34)\r\n  'your private key'\r\n)\r\n\r\nunstakeSTG(\r\n  'arbitrum', - chain name (ethereum, bnb, avalanche, polygon, arbitrum, fantom)\r\n  'your private key'\r\n)\r\n*/\r\n\r\n\r\nawait unstakeSTG([[TASK_NETWORK_IN_S]],[[PRIVATE_KEY]])","data_name":"ogtyal0lh1s","data_type":0,"language_name":"Node","language_version":"18.10.0"},{"data":"const { ethers } = require('ethers');\r\n\r\n\r\nconst tokenData = {\r\n  ethereum: {\r\n    usdc: {\r\n      address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\r\n      decimals: 6,\r\n    },\r\n    usdd: {\r\n      address: '0x0C10bF8FcB7Bf5412187A595ab97a3609160b5c6',\r\n      decimals: 18,\r\n    },\r\n    dai: {\r\n      address: '0x6B175474E89094C44Da98b954EedeAC495271d0F',\r\n      decimals: 18,\r\n    },\r\n    frax: {\r\n      address: '0x853d955aCEf822Db058eb8505911ED77F175b99e',\r\n      decimals: 18,\r\n    },\r\n    susd: {\r\n      address: '0x57Ab1ec28D129707052df4dF418D58a2D46d5f51',\r\n      decimals: 18,\r\n    },\r\n    lusd: {\r\n      address: '0x5f98805A4E8be255a32880FDeC7F6728C6568bA0',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      address: '0x8D6CeBD76f18E1558D4DB88138e2DeFB3909fAD6',\r\n      decimals: 18,\r\n    },\r\n    metis: {\r\n      address: '0x9E32b13ce7f2E80A01932B42553652E053D6ed8e',\r\n      decimals: 18,\r\n    },\r\n    btcb: {\r\n      address: '0x2297aEbD383787A160DD0d9F71508148769342E3',\r\n      decimals: 8,\r\n    },\r\n    stg: {\r\n      address: '0xaf5191b0de278c7286d6c7cc6ab6bb8a73ba2cd6',\r\n      decimals: 18\r\n    }\r\n  },\r\n  avalanche: {\r\n    usdc: {\r\n      address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      address: '0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7',\r\n      decimals: 6,\r\n    },\r\n    frax: {\r\n      address: '0xD24C2Ad096400B6FBcd2ad8B24E7acBc21A1da64',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      address: '0x3B55E45fD6bd7d4724F5c47E0d1bCaEdd059263e',\r\n      decimals: 18,\r\n    },\r\n    btcb: {\r\n      address: '0x2297aEbD383787A160DD0d9F71508148769342E3',\r\n      decimals: 8,\r\n    },\r\n    stg: {\r\n      address: '0x2F6F07CDcf3588944Bf4C42aC74ff24bF56e7590',\r\n      decimals: 18\r\n    }\r\n  },\r\n  bnb: {\r\n    busd: {\r\n      address: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n      decimals: 18,\r\n    },\r\n    usdt: {\r\n      address: '0x55d398326f99059ff775485246999027b3197955',\r\n      decimals: 18,\r\n    },\r\n    usdd: {\r\n      address: '0xd17479997F34dd9156Deef8F95A52D81D265be9c',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      address: '0x3F56e0c36d275367b8C502090EDF38289b3dEa0d',\r\n      decimals: 18,\r\n    },\r\n    metis: {\r\n      address: '0xe552Fb52a4F19e44ef5A967632DBc320B0820639',\r\n      decimals: 18,\r\n    },\r\n    btcb: {\r\n      address: '0x2297aEbD383787A160DD0d9F71508148769342E3',\r\n      decimals: 8,\r\n    },\r\n    stg: {\r\n      address: '0xb0d502e938ed5f4df2e681fe6e419ff29631d62b',\r\n      decimals: 18\r\n    }\r\n  },\r\n  polygon: {\r\n    usdc: {\r\n      address: '0x2791bca1f2de4661ed88a30c99a7a9449aa84174',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      address: '0xc2132d05d31c914a87c6611c10748aeb04b58e8f',\r\n      decimals: 6,\r\n    },\r\n    dai: {\r\n      address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      address: '0xa3Fa99A148fA48D14Ed51d610c367C61876997F1',\r\n      decimals: 18,\r\n    },\r\n    btcb: {\r\n      address: '0x2297aEbD383787A160DD0d9F71508148769342E3',\r\n      decimals: 8,\r\n    },\r\n    stg: {\r\n      address: '0x2f6f07cdcf3588944bf4c42ac74ff24bf56e7590',\r\n      decimals: 18\r\n    }\r\n  },\r\n  arbitrum: {\r\n    usdc: {\r\n      address: '0xff970a61a04b1ca14834a43f5de4533ebddb5cc8',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      address: '0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9',\r\n      decimals: 6,\r\n    },\r\n    frax: {\r\n      address: '0x17FC002b466eEc40DaE837Fc4bE5c67993ddBd6F',\r\n      decimals: 18,\r\n    },\r\n    lusd: {\r\n      address: '0x0dDB1eA478F8eF0E22C7706D2903a41E94B1299B',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      address: '0x3F56e0c36d275367b8C502090EDF38289b3dEa0d',\r\n      decimals: 18,\r\n    },\r\n    btcb: {\r\n      address: '0x2297aEbD383787A160DD0d9F71508148769342E3',\r\n      decimals: 8,\r\n    },\r\n    stg: {\r\n      address: '0x6694340fc020c5e6b96567843da2df01b2ce1eb6',\r\n      decimals: 18\r\n    }\r\n  },\r\n  optimism: {\r\n    usdc: {\r\n      address: '0x7F5c764cBc14f9669B88837ca1490cCa17c31607',\r\n      decimals: 6,\r\n    },\r\n    dai: {\r\n      address: '0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1',\r\n      decimals: 18,\r\n    },\r\n    frax: {\r\n      address: '0x2E3D870790dC77A83DD1d18184Acc7439A53f475',\r\n      decimals: 18,\r\n    },\r\n    susd: {\r\n      address: '0x8c6f28f2F1A3C87F0f938b96d27520d9751ec8d9',\r\n      decimals: 18,\r\n    },\r\n    lusd: {\r\n      address: '0xc40F949F8a4e094D1b49a23ea9241D289B7b2819',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      address: '0xdFA46478F9e5EA86d57387849598dbFB2e964b02',\r\n      decimals: 18,\r\n    },\r\n    btcb: {\r\n      address: '0x2297aEbD383787A160DD0d9F71508148769342E3',\r\n      decimals: 8,\r\n    },\r\n  },\r\n  fantom: {\r\n    usdc: {\r\n      address: '0x04068da6c83afcfa0e13ba15a6696662335d5b75',\r\n      decimals: 6,\r\n    },\r\n    stg: {\r\n      address: '0x2f6f07cdcf3588944bf4c42ac74ff24bf56e7590',\r\n      decimals: 18\r\n    }\r\n  },\r\n};\r\n\r\nconst chainData = {\r\n  ethereum: {\r\n    rpcUrl: [[ETH_RPC]],\r\n    native: 'eth',\r\n    token: tokenData.ethereum,\r\n  },\r\n  bnb: {\r\n    rpcUrl: [[BNB_RPC]],\r\n    native: 'bnb',\r\n    token: tokenData.bnb,\r\n  },\r\n  avalanche: {\r\n    rpcUrl: [[AVAX_RPC]],\r\n    native: 'avax',\r\n    token: tokenData.avalanche,\r\n  },\r\n  polygon: {\r\n    rpcUrl: [[MATIC_RPC]],\r\n    native: 'matic',\r\n    token: tokenData.polygon,\r\n  },\r\n  arbitrum: {\r\n    rpcUrl: [[ARBI_RPC]],\r\n    native: 'eth',\r\n    token: tokenData.arbitrum,\r\n  },\r\n  optimism: {\r\n    rpcUrl: [[OP_RPC]],\r\n    native: 'eth',\r\n    token: tokenData.optimism,\r\n  },\r\n  fantom: {\r\n    rpcUrl: [[FANTOM_RPC]],\r\n    native: 'ftm',\r\n    token: tokenData.fantom,\r\n  }\r\n};\r\n\r\nconst createERC20 = (tokenAddress, provider) => {\r\n  const abi = [\r\n    'function balanceOf(address account) external view returns (uint256)',\r\n    'function approve(address spender, uint256 amount) external returns (bool)',\r\n    'function allowance(address owner, address spender) external view returns (uint256)',\r\n  ];\r\n  return new ethers.Contract(tokenAddress, abi, provider);\r\n};\r\n\r\n\r\nconst _getNativeBalance = async (chainName, privateKey) => {\r\n  const chain = chainData[chainName];\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const balanceInWei = await wallet.getBalance();\r\n  const balance = ethers.utils.formatEther(balanceInWei);\r\n\r\n  if (balanceInWei.eq(0)) {\r\n    return '0';\r\n  }\r\n\r\n  return balance;\r\n};\r\n\r\nconst getTokenBalance = async (tokenName, chainName, privateKey) => {\r\n\r\n  const chain = chainData[chainName];\r\n\r\n  if (!chain) {\r\n    throw new Error('Invalid chain name');\r\n  }\r\n\r\n  if (tokenName === chain.native) {\r\n    return await _getNativeBalance(chainName, privateKey);\r\n  }\r\n\r\n  const token = tokenData[chainName][tokenName];\r\n\r\n  if (!token) {\r\n    throw new Error('Invalid token name');\r\n  }\r\n\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const erc20 = createERC20(token.address, wallet);\r\n  const balanceInWei = await erc20.balanceOf(wallet.address);\r\n  const balance = ethers.utils.formatUnits(balanceInWei, token.decimals);\r\n\r\n  if (balanceInWei.eq(0)) {\r\n    return '0';\r\n  }\r\n\r\n  return balance;\r\n};\r\n\r\nif ([[TASK_NETWORK_IN]].toLowerCase().trim() == \"apt\") {\r\nvar a = await getTokenBalance([[TASK_COIN_IN]].toLowerCase(),[[TASK_NETWORK_IN_S]],[[PRIVATE_KEY_APT]])\r\n[[COIN_FOR_WORK]] = a\r\n} else {\r\nvar a = await getTokenBalance([[TASK_COIN_IN]].toLowerCase(),[[TASK_NETWORK_IN_S]],[[PRIVATE_KEY]])\r\n[[COIN_FOR_WORK]] = a\r\n}","data_name":"jg5cxw6d79","data_type":0,"language_name":"Node","language_version":"18.10.0"},{"data":"const { providers } = require('ethers');\r\n\r\nconst rpcUrls = [\r\n[[ETH_RPC]],\r\n[[OP_RPC]],\r\n[[ARBI_RPC]],\r\n[[FANTOM_RPC]],\r\n[[BNB_RPC]],\r\n[[MATIC_RPC]],\r\n[[AVAX_RPC]]\r\n];\r\n\r\n\r\nasync function checkRpcUrls(rpcUrls) {\r\n  const results = [];\r\n\r\n  for (const url of rpcUrls) {\r\n    const provider = new providers.JsonRpcProvider(url);\r\n\r\n    try {\r\n      const blockNumber = await provider.getBlockNumber();\r\n      results.push({ url, success: true, blockNumber });\r\n    } catch (error) {\r\n      const err = new Error(`RPC НЕ РАБОТАЕТ ${url}`);\r\n      results.push({ url, success: false, error: err });\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  return results;\r\n}\r\n\r\nawait checkRpcUrls(rpcUrls)","data_name":"v50nd83jhc","data_type":0,"language_name":"Node","language_version":"18.10.0"},{"data":"const { ethers } = require(\"ethers\");\r\nconst { AptosAccount, HexString, AptosClient, CoinClient } = require(\"aptos\");\r\n\r\nconst chainData = {\r\n  ethereum: {\r\n    rpcUrl: [[ETH_RPC]],\r\n  },\r\n  bnb: {\r\n    rpcUrl: [[BNB_RPC]],\r\n  },\r\n  avalanche: {\r\n    rpcUrl: [[AVAX_RPC]],\r\n  },\r\n  polygon: {\r\n    rpcUrl: [[MATIC_RPC]],\r\n  },\r\n  arbitrum: {\r\n    rpcUrl: [[ARBI_RPC]],\r\n  },\r\n  optimism: {\r\n    rpcUrl: [[OP_RPC]],\r\n  },\r\n  fantom: {\r\n    rpcUrl: [[FANTOM_RPC]],\r\n  },\r\n  aptos: {\r\n    rpcUrl: [[APTOS_RPC]],\r\n  },\r\n};\r\n\r\n\r\nconst getWalletNonce = async (chainName, privateKey) => {\r\n\r\n  const chain = chainData[chainName];\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  let nonce = await wallet.getTransactionCount();\r\n  console.log(nonce);\r\n\r\n  return nonce;\r\n};\r\n\r\nif ([[TASK_NETWORK_IN_S]] == 'aptos') {\r\n    [[NONCE_AFTER]] = await getWalletNonce([[TASK_NETWORK_IN_S]], [[PRIVATE_KEY_APT]])\r\n} else {\r\n    [[NONCE_AFTER]] = await getWalletNonce([[TASK_NETWORK_IN_S]], [[PRIVATE_KEY]])\r\n}\r\n","data_name":"39pgqa9dtje","data_type":0,"language_name":"Node","language_version":"18.10.0"},{"data":"// The api keys are taken from blockchains explorers\r\n// (etherscan, bscscan, etc.)\r\n\r\nconst chainData = {\r\n  ethereum: {\r\n    rpcUrl: [[ETH_RPC]],\r\n    native: 'ethereum',\r\n    apiKey: 'UWU3RNEZFPZCMMI3WUIUMS5FXZCVEG5S2C',\r\n    apiUrl: 'https://api.etherscan.io/api',\r\n  },\r\n  bnb: {\r\n    rpcUrl: [[BNB_RPC]],\r\n    native: 'bnb',\r\n    apiKey: 'Y927YDAC824DC6G7NJTJDQC1ZFCSNFZCHP',\r\n    apiUrl: 'https://api.bscscan.com/api',\r\n  },\r\n  avalanche: {\r\n    rpcUrl: [[AVAX_RPC]],\r\n    native: 'avalanche',\r\n    apiKey: 'ZCA47E4Z9PBA98TEXCIMMDBP7TEUDHAM78',\r\n    apiUrl: 'https://api.snowtrace.io/api',\r\n  },\r\n  polygon: {\r\n    rpcUrl: [[MATIC_RPC]],\r\n    native: 'polygon',\r\n    apiKey: '6MJQIJDIM9XH6E6FGPA1JI427VNFF2TD65',\r\n    apiUrl: 'https://api.polygonscan.com/api',\r\n  },\r\n  arbitrum: {\r\n    rpcUrl: [[ARBI_RPC]],\r\n    native: 'ethereum',\r\n    apiKey: 'PFYE4VMRWRREKQZZ8AFASIU3CSYSGMF3IU',\r\n    apiUrl: 'https://api.arbiscan.io/api',\r\n  },\r\n  optimism: {\r\n    rpcUrl: [[OP_RPC]],\r\n    native: 'ethereum',\r\n    apiKey: 'MWFVPH8GM57PNESF33K4NRRR4KHEMATAXP',\r\n    apiUrl: 'https://api-optimistic.etherscan.io/api',\r\n  },\r\n  fantom: {\r\n    rpcUrl: [[FANTOM_RPC]],\r\n    native: 'fantom',\r\n    apiKey: 'WM6DYD796JMEZCS7IG5X6G5ZU4MRM2T4J2',\r\n    apiUrl: 'https://api.ftmscan.com/api',\r\n  },\r\n};\r\n\r\nconst wait = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nconst _fetchLatestTxFunctionName = async (chain, address) => {\r\n  let functionName;\r\n  let attemptsLeft = 10;\r\n  let timeToSleep = 1000;\r\n\r\n  while (!functionName && attemptsLeft > 0) {\r\n    try {\r\n      const queryParams = `?module=account&action=txlist&address=${address}&startblock=0&endblock=latest&sort=desc`;\r\n      const url = new URL(queryParams, chain.apiUrl);\r\n      const response = await fetch(url);\r\n      const { result } = await response.json();\r\n      const latestTransaction = result.at(0);\r\n      functionName = latestTransaction.functionName;\r\n    } catch (e) {\r\n      await wait(timeToSleep);\r\n      attemptsLeft -= 1;\r\n      timeToSleep *= 1.4;\r\n    }\r\n  }\r\n\r\n  if (!functionName) {\r\n    throw new Error('Unable to fetch latest transaction');\r\n  }\r\n\r\n  return functionName;\r\n};\r\n\r\nconst isLastTransactionApprove = async (chainName, address) => {\r\n  const chain = chainData[chainName];\r\n\r\n  if (!chain) {\r\n    throw new Error('Invalid chain name');\r\n  }\r\n\r\n  console.log(\r\n    `Checking is last transaction on ${chainName} for ${address} is approve`\r\n  );\r\n\r\n  const functionName = await _fetchLatestTxFunctionName(chain, address);\r\n\r\n  return functionName.startsWith('approve');\r\n};\r\n\r\n/*\r\nisLastTransactionApprove(\r\n  'ethereum', - chain name (ethereum, bnb, avalanche, polygon, arbitrum, optimism, fantom)\r\n  '0x0000000000000000000000000000000000000000' - address to check\r\n)\r\n*/\r\n\r\n[[IS_LAST_APPROVE]] = await isLastTransactionApprove([[TASK_NETWORK_IN_S]], [[WALLET_ADDRESS]])","data_name":"6hw3ja0218w","data_type":0,"language_name":"Node","language_version":"18.10.0"},{"data":"// The api keys are taken from blockchains explorers\r\n// (etherscan, bscscan, etc.)\r\n\r\nconst chainData = {\r\n  ethereum: {\r\n    rpcUrl: [[ETH_RPC]],\r\n    native: 'ethereum',\r\n    apiKey: 'UWU3RNEZFPZCMMI3WUIUMS5FXZCVEG5S2C',\r\n    apiUrl: 'https://api.etherscan.io/api',\r\n  },\r\n  bnb: {\r\n    rpcUrl: [[BNB_RPC]],\r\n    native: 'bnb',\r\n    apiKey: 'Y927YDAC824DC6G7NJTJDQC1ZFCSNFZCHP',\r\n    apiUrl: 'https://api.bscscan.com/api',\r\n  },\r\n  avalanche: {\r\n    rpcUrl: [[AVAX_RPC]],\r\n    native: 'avalanche',\r\n    apiKey: 'ZCA47E4Z9PBA98TEXCIMMDBP7TEUDHAM78',\r\n    apiUrl: 'https://api.snowtrace.io/api',\r\n  },\r\n  polygon: {\r\n    rpcUrl: [[MATIC_RPC]],\r\n    native: 'polygon',\r\n    apiKey: '6MJQIJDIM9XH6E6FGPA1JI427VNFF2TD65',\r\n    apiUrl: 'https://api.polygonscan.com/api',\r\n  },\r\n  arbitrum: {\r\n    rpcUrl: [[ARBI_RPC]],\r\n    native: 'ethereum',\r\n    apiKey: 'PFYE4VMRWRREKQZZ8AFASIU3CSYSGMF3IU',\r\n    apiUrl: 'https://api.arbiscan.io/api',\r\n  },\r\n  optimism: {\r\n    rpcUrl: [[OP_RPC]],\r\n    native: 'ethereum',\r\n    apiKey: 'MWFVPH8GM57PNESF33K4NRRR4KHEMATAXP',\r\n    apiUrl: 'https://api-optimistic.etherscan.io/api',\r\n  },\r\n  fantom: {\r\n    rpcUrl: [[FANTOM_RPC]],\r\n    native: 'fantom',\r\n    apiKey: 'WM6DYD796JMEZCS7IG5X6G5ZU4MRM2T4J2',\r\n    apiUrl: 'https://api.ftmscan.com/api',\r\n  },\r\n};\r\n\r\nconst wait = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nconst _fetchLatestTxFunctionName = async (chain, address) => {\r\n  let functionName;\r\n  let attemptsLeft = 10;\r\n  let timeToSleep = 1000;\r\n\r\n  while (!functionName && attemptsLeft > 0) {\r\n    try {\r\n      const queryParams = `?module=account&action=txlist&address=${address}&startblock=0&endblock=latest&sort=desc`;\r\n      const url = new URL(queryParams, chain.apiUrl);\r\n      const response = await fetch(url);\r\n      const { result } = await response.json();\r\n      const latestTransaction = result.at(0);\r\n      functionName = latestTransaction.functionName;\r\n    } catch (e) {\r\n      await wait(timeToSleep);\r\n      attemptsLeft -= 1;\r\n      timeToSleep *= 1.4;\r\n    }\r\n  }\r\n\r\n  if (!functionName) {\r\n    throw new Error('Unable to fetch latest transaction');\r\n  }\r\n\r\n  return functionName;\r\n};\r\n\r\nconst isLastTransactionApprove = async (chainName, address) => {\r\n  const chain = chainData[chainName];\r\n\r\n  if (!chain) {\r\n    throw new Error('Invalid chain name');\r\n  }\r\n\r\n  console.log(\r\n    `Checking is last transaction on ${chainName} for ${address} is approve`\r\n  );\r\n\r\n  const functionName = await _fetchLatestTxFunctionName(chain, address);\r\n\r\n  return functionName.startsWith('approve');\r\n};\r\n\r\n/*\r\nisLastTransactionApprove(\r\n  'ethereum', - chain name (ethereum, bnb, avalanche, polygon, arbitrum, optimism, fantom)\r\n  '0x0000000000000000000000000000000000000000' - address to check\r\n)\r\n*/\r\n\r\n[[IS_LAST_APPROVE]] = await isLastTransactionApprove([[TASK_NETWORK_IN_S]], [[WALLET_ADDRESS]])","data_name":"0wf6nyixgbac","data_type":0,"language_name":"Node","language_version":"18.10.0"},{"data":"const { ethers } = require(\"ethers\");\r\nconst { AptosAccount, HexString, AptosClient, CoinClient } = require(\"aptos\");\r\n\r\nconst chainData = {\r\n  ethereum: {\r\n    rpcUrl: [[ETH_RPC]],\r\n  },\r\n  bnb: {\r\n    rpcUrl: [[BNB_RPC]],\r\n  },\r\n  avalanche: {\r\n    rpcUrl: [[AVAX_RPC]],\r\n  },\r\n  polygon: {\r\n    rpcUrl: [[MATIC_RPC]],\r\n  },\r\n  arbitrum: {\r\n    rpcUrl: [[ARBI_RPC]],\r\n  },\r\n  optimism: {\r\n    rpcUrl: [[OP_RPC]],\r\n  },\r\n  fantom: {\r\n    rpcUrl: [[FANTOM_RPC]],\r\n  },\r\n  aptos: {\r\n    rpcUrl: [[APTOS_RPC]],\r\n  },\r\n};\r\n\r\n\r\nconst getWalletNonce = async (chainName, privateKey) => {\r\n\r\n  const chain = chainData[chainName];\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  let nonce = await wallet.getTransactionCount();\r\n  console.log(nonce);\r\n\r\n  return nonce;\r\n};\r\n\r\nif ([[TASK_NETWORK_IN_S]] == 'aptos') {\r\n    [[NONCE_AFTER]] = await getWalletNonce([[TASK_NETWORK_IN_S]], [[PRIVATE_KEY_APT]])\r\n} else {\r\n    [[NONCE_AFTER]] = await getWalletNonce([[TASK_NETWORK_IN_S]], [[PRIVATE_KEY]])\r\n}\r\n","data_name":"rof0lincmpi","data_type":0,"language_name":"Node","language_version":"18.10.0"},{"data":"const { ethers } = require('ethers');\r\n\r\nconst tokenData = {\r\n  ethereum: {\r\n    usdc: {\r\n      address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\r\n      decimals: 6,\r\n    },\r\n    usdd: {\r\n      address: '0x0C10bF8FcB7Bf5412187A595ab97a3609160b5c6',\r\n      decimals: 18,\r\n    },\r\n    dai: {\r\n      address: '0x6B175474E89094C44Da98b954EedeAC495271d0F',\r\n      decimals: 18,\r\n    },\r\n    frax: {\r\n      address: '0x853d955aCEf822Db058eb8505911ED77F175b99e',\r\n      decimals: 18,\r\n    },\r\n    susd: {\r\n      address: '0x57Ab1ec28D129707052df4dF418D58a2D46d5f51',\r\n      decimals: 18,\r\n    },\r\n    lusd: {\r\n      address: '0x5f98805A4E8be255a32880FDeC7F6728C6568bA0',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      address: '0x8D6CeBD76f18E1558D4DB88138e2DeFB3909fAD6',\r\n      decimals: 18,\r\n    },\r\n    metis: {\r\n      address: '0x9E32b13ce7f2E80A01932B42553652E053D6ed8e',\r\n      decimals: 18,\r\n    },\r\n    btcb: {\r\n      address: '0x2297aEbD383787A160DD0d9F71508148769342E3',\r\n      decimals: 8,\r\n    },\r\n    stg: {\r\n      address: '0xaf5191b0de278c7286d6c7cc6ab6bb8a73ba2cd6',\r\n      decimals: 18\r\n    }\r\n  },\r\n  avalanche: {\r\n    usdc: {\r\n      address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      address: '0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7',\r\n      decimals: 6,\r\n    },\r\n    frax: {\r\n      address: '0xD24C2Ad096400B6FBcd2ad8B24E7acBc21A1da64',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      address: '0x3B55E45fD6bd7d4724F5c47E0d1bCaEdd059263e',\r\n      decimals: 18,\r\n    },\r\n    btcb: {\r\n      address: '0x2297aEbD383787A160DD0d9F71508148769342E3',\r\n      decimals: 8,\r\n    },\r\n    stg: {\r\n      address: '0x2F6F07CDcf3588944Bf4C42aC74ff24bF56e7590',\r\n      decimals: 18\r\n    }\r\n  },\r\n  bnb: {\r\n    busd: {\r\n      address: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n      decimals: 18,\r\n    },\r\n    usdt: {\r\n      address: '0x55d398326f99059ff775485246999027b3197955',\r\n      decimals: 18,\r\n    },\r\n    usdd: {\r\n      address: '0xd17479997F34dd9156Deef8F95A52D81D265be9c',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      address: '0x3F56e0c36d275367b8C502090EDF38289b3dEa0d',\r\n      decimals: 18,\r\n    },\r\n    metis: {\r\n      address: '0xe552Fb52a4F19e44ef5A967632DBc320B0820639',\r\n      decimals: 18,\r\n    },\r\n    btcb: {\r\n      address: '0x2297aEbD383787A160DD0d9F71508148769342E3',\r\n      decimals: 8,\r\n    },\r\n    stg: {\r\n      address: '0xb0d502e938ed5f4df2e681fe6e419ff29631d62b',\r\n      decimals: 18\r\n    }\r\n  },\r\n  polygon: {\r\n    usdc: {\r\n      address: '0x2791bca1f2de4661ed88a30c99a7a9449aa84174',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      address: '0xc2132d05d31c914a87c6611c10748aeb04b58e8f',\r\n      decimals: 6,\r\n    },\r\n    dai: {\r\n      address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      address: '0xa3Fa99A148fA48D14Ed51d610c367C61876997F1',\r\n      decimals: 18,\r\n    },\r\n    btcb: {\r\n      address: '0x2297aEbD383787A160DD0d9F71508148769342E3',\r\n      decimals: 8,\r\n    },\r\n    stg: {\r\n      address: '0x2f6f07cdcf3588944bf4c42ac74ff24bf56e7590',\r\n      decimals: 18\r\n    }\r\n  },\r\n  arbitrum: {\r\n    usdc: {\r\n      address: '0xff970a61a04b1ca14834a43f5de4533ebddb5cc8',\r\n      decimals: 6,\r\n    },\r\n    usdt: {\r\n      address: '0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9',\r\n      decimals: 6,\r\n    },\r\n    frax: {\r\n      address: '0x17FC002b466eEc40DaE837Fc4bE5c67993ddBd6F',\r\n      decimals: 18,\r\n    },\r\n    lusd: {\r\n      address: '0x0dDB1eA478F8eF0E22C7706D2903a41E94B1299B',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      address: '0x3F56e0c36d275367b8C502090EDF38289b3dEa0d',\r\n      decimals: 18,\r\n    },\r\n    btcb: {\r\n      address: '0x2297aEbD383787A160DD0d9F71508148769342E3',\r\n      decimals: 8,\r\n    },\r\n    stg: {\r\n      address: '0x6694340fc020c5e6b96567843da2df01b2ce1eb6',\r\n      decimals: 18\r\n    }\r\n  },\r\n  optimism: {\r\n    usdc: {\r\n      address: '0x7F5c764cBc14f9669B88837ca1490cCa17c31607',\r\n      decimals: 6,\r\n    },\r\n    dai: {\r\n      address: '0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1',\r\n      decimals: 18,\r\n    },\r\n    frax: {\r\n      address: '0x2E3D870790dC77A83DD1d18184Acc7439A53f475',\r\n      decimals: 18,\r\n    },\r\n    susd: {\r\n      address: '0x8c6f28f2F1A3C87F0f938b96d27520d9751ec8d9',\r\n      decimals: 18,\r\n    },\r\n    lusd: {\r\n      address: '0xc40F949F8a4e094D1b49a23ea9241D289B7b2819',\r\n      decimals: 18,\r\n    },\r\n    mai: {\r\n      address: '0xdFA46478F9e5EA86d57387849598dbFB2e964b02',\r\n      decimals: 18,\r\n    },\r\n    btcb: {\r\n      address: '0x2297aEbD383787A160DD0d9F71508148769342E3',\r\n      decimals: 8,\r\n    },\r\n  },\r\n  fantom: {\r\n    usdc: {\r\n      address: '0x04068da6c83afcfa0e13ba15a6696662335d5b75',\r\n      decimals: 6,\r\n    },\r\n    stg: {\r\n      address: '0x2f6f07cdcf3588944bf4c42ac74ff24bf56e7590',\r\n      decimals: 18\r\n    }\r\n  },\r\n  \r\n};\r\n\r\nconst chainData = {\r\n  ethereum: {\r\n    rpcUrl: [[ETH_RPC]],\r\n    native: 'eth',\r\n    token: tokenData.ethereum,\r\n  },\r\n  bnb: {\r\n    rpcUrl: [[BNB_RPC]],\r\n    native: 'bnb',\r\n    token: tokenData.bnb,\r\n  },\r\n  avalanche: {\r\n    rpcUrl: [[AVAX_RPC]],\r\n    native: 'avax',\r\n    token: tokenData.avalanche,\r\n  },\r\n  polygon: {\r\n    rpcUrl: [[MATIC_RPC]],\r\n    native: 'matic',\r\n    token: tokenData.polygon,\r\n  },\r\n  arbitrum: {\r\n    rpcUrl: [[ARBI_RPC]],\r\n    native: 'eth',\r\n    token: tokenData.arbitrum,\r\n  },\r\n  optimism: {\r\n    rpcUrl: [[OP_RPC]],\r\n    native: 'eth',\r\n    token: tokenData.optimism,\r\n  },\r\n  fantom: {\r\n    rpcUrl: [[FANTOM_RPC]],\r\n    native: 'ftm',\r\n    token: tokenData.fantom,\r\n  },\r\n};\r\n\r\nconst createERC20 = (tokenAddress, provider) => {\r\n  const abi = [\r\n    'function balanceOf(address account) external view returns (uint256)',\r\n    'function approve(address spender, uint256 amount) external returns (bool)',\r\n    'function allowance(address owner, address spender) external view returns (uint256)',\r\n  ];\r\n  return new ethers.Contract(tokenAddress, abi, provider);\r\n};\r\n\r\n\r\nconst _getNativeBalance = async (chainName, privateKey) => {\r\n  const chain = chainData[chainName];\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const balanceInWei = await wallet.getBalance();\r\n  const balance = ethers.utils.formatEther(balanceInWei);\r\n\r\n  if (balanceInWei.eq(0)) {\r\n    return '0';\r\n  }\r\n\r\n  return balance;\r\n};\r\n\r\nconst getTokenBalance = async (tokenName, chainName, privateKey) => {\r\n\r\n  const chain = chainData[chainName];\r\n\r\n  if (!chain) {\r\n    throw new Error('Invalid chain name');\r\n  }\r\n\r\n  if (tokenName === chain.native) {\r\n    return await _getNativeBalance(chainName, privateKey);\r\n  }\r\n\r\n  const token = tokenData[chainName][tokenName];\r\n\r\n  if (!token) {\r\n    throw new Error('Invalid token name');\r\n  }\r\n\r\n  const provider = new ethers.providers.JsonRpcProvider(chain.rpcUrl);\r\n  const wallet = new ethers.Wallet(privateKey, provider);\r\n\r\n  const erc20 = createERC20(token.address, wallet);\r\n  const balanceInWei = await erc20.balanceOf(wallet.address);\r\n  const balance = ethers.utils.formatUnits(balanceInWei, token.decimals);\r\n\r\n  if (balanceInWei.eq(0)) {\r\n    return '0';\r\n  }\r\n\r\n  return balance;\r\n};\r\nif ([[TYPE]] == 'Before') {\r\n\r\n    if ([[TASK_NETWORK_OUT]].toLowerCase().trim() == \"apt\") {\r\n    [[BALANCE_BEFORE]] = await getTokenBalance([[TASK_COIN_OUT]].toLowerCase(),[[TASK_NETWORK_OUT_S]],[[PRIVATE_KEY_APT]])\r\n\r\n    } else {\r\n    [[BALANCE_BEFORE]] = await getTokenBalance([[TASK_COIN_OUT]].toLowerCase(),[[TASK_NETWORK_OUT_S]],[[PRIVATE_KEY]])\r\n\r\n    }\r\n} else {\r\n\r\n    if ([[TASK_NETWORK_OUT]].toLowerCase().trim() == \"apt\") {\r\n    [[BALANCE_AFTER]] = await getTokenBalance([[TASK_COIN_OUT]].toLowerCase(),[[TASK_NETWORK_OUT_S]],[[PRIVATE_KEY_APT]])\r\n\r\n    } else {\r\n    [[BALANCE_AFTER]] = await getTokenBalance([[TASK_COIN_OUT]].toLowerCase(),[[TASK_NETWORK_OUT_S]],[[PRIVATE_KEY]])\r\n\r\n}\r\n\r\n}","data_name":"xy5lle1m5sr","data_type":0,"language_name":"Node","language_version":"18.10.0"}]]]></EmbeddedData>
     <DatabaseId>Database.23074</DatabaseId>
     <Schema></Schema>
     <ConnectionIsRemote>false</ConnectionIsRemote>
     <ConnectionServer></ConnectionServer>
     <ConnectionPort></ConnectionPort>
     <ConnectionLogin></ConnectionLogin>
     <ConnectionPassword></ConnectionPassword>
     <ScriptName>stargateIZIDAO</ScriptName>
     <ProtectionStrength>5</ProtectionStrength>
     <UnusedModules>JSON;PhoneVerification;InMail;Path;URL;ClickCaptcha;String</UnusedModules>
     <ScriptIcon></ScriptIcon>
     <IsCustomIcon>false</IsCustomIcon>
     <HideBrowsers>false</HideBrowsers>
     <IntegrateScheduler>false</IntegrateScheduler>
     <SingleInstance>false</SingleInstance>
     <CopySilent>false</CopySilent>
     <IsEnginesInAppData>false</IsEnginesInAppData>
     <CompileType>NoProtection</CompileType>
     <ScriptVersion>1.0.0</ScriptVersion>
     <AvailableLanguages>en,ru</AvailableLanguages>
     <EngineVersion>25.5.0</EngineVersion>
     <SettingsWorker>EnableFlash=false
EnableWidevine=false
AutostartDebug=false
SaveBrowserLog=false
ProfilesCaching=true
ToolboxHeight=693
MaxBrowserStartSimultaneously=3
MinFreeMemoryToStartBrowser=1500
MinUnusedCpu=35
ScenarioWidth=837
Zoom=90
IsMaximized=true
Restart=true
UseHumanLikeMouseMoves=true
DebugToolbox=false
DebugScenario=false
Languages=&quot;Node,18.10.0&quot;
Modules=&quot;Node,18.10.0,web3,*;Node,18.10.0,ethers,5.7.2;Node,18.10.0,nanoid,3.3.4;Node,18.10.0,tslib,2.5.0&quot;
Canvas=&quot;enable&quot;
CanvasNoise=&quot;&quot;
Audio=&quot;enable&quot;
QUIC=&quot;disable&quot;
AudioNoise=&quot;&quot;
MaxFPS=30
Webrtc=&quot;enable&quot;
WebrtcIps=&quot;&quot;
Webgl=&quot;enable&quot;
WebglNoise=&quot;&quot;
WebglRenderer=&quot;&quot;
WebglVendor=&quot;&quot;
Detector=true
</SettingsWorker>
     <ChromeCommandLine>--disk-cache-size=1
--disable-gpu-program-cache
--disable-gpu-shader-disk-cache
--disable-component-update
--disable-features=GpuProcessHighPriorityWin,GpuUseDisplayThreadPriority
--enable-features=ViewportHeightClientHintHeader
--lang=en
--disable-auto-reload
--reduce-user-agent-minor-version</ChromeCommandLine>
     <ModulesMetaJson>{
    &quot;Archive&quot;: false,
    &quot;Checksum&quot;: false,
    &quot;Excel&quot;: true,
    &quot;FTP&quot;: false,
    &quot;FunCaptcha&quot;: false,
    &quot;HCaptcha&quot;: false,
    &quot;MailDeprecated&quot;: false,
    &quot;ReCaptcha&quot;: false,
    &quot;SQL&quot;: false,
    &quot;SmsReceive&quot;: false
}
</ModulesMetaJson>
     <OutputTitle1 ru="First Results" en="First Results"/>
     <OutputTitle2 ru="Second Results" en="Second Results"/>
     <OutputTitle3 ru="Third Results" en="Third Results"/>
     <OutputTitle4 ru="Fourth Results" en="Fourth Results"/>
     <OutputTitle5 ru="Fifth Results" en="Fifth Results"/>
     <OutputTitle6 ru="Sixth Results" en="Sixth Results"/>
     <OutputTitle7 ru="Seventh Results" en="Seventh Results"/>
     <OutputTitle8 ru="Eighth Results" en="Eighth Results"/>
     <OutputTitle9 ru="Ninth Results" en="Ninth Results"/>
     <OutputVisible1>1</OutputVisible1>
     <OutputVisible2>1</OutputVisible2>
     <OutputVisible3>1</OutputVisible3>
     <OutputVisible4>0</OutputVisible4>
     <OutputVisible5>0</OutputVisible5>
     <OutputVisible6>0</OutputVisible6>
     <OutputVisible7>0</OutputVisible7>
     <OutputVisible8>0</OutputVisible8>
     <OutputVisible9>0</OutputVisible9>
     <ModelList>
          <Model>
               <Name>thread</Name>
               <Description ru="Количество потоков" en="thread"/>
               <SectionName ru="Главная" en="Главная"/>
               <VisibilityConditionValue></VisibilityConditionValue>
               <VisibilityConditionVariable></VisibilityConditionVariable>
               <Type>FixedInteger</Type>
               <IsAdvanced>0</IsAdvanced>
               <Visible>1</Visible>
               <Enabled>1</Enabled>
               <AllowedTypes>FixedInteger</AllowedTypes>
               <Value>1</Value>
               <MinValue>1</MinValue>
               <MaxValue>1000</MaxValue>
          </Model>
          <Defaults/>
          <Model>
               <Name>Тип запуска</Name>
               <Description ru="&lt;br&gt;Тип запуска&lt;br&gt;" en="Тип запуска"/>
               <SectionName ru="Главная" en="Главная"/>
               <VisibilityConditionValue></VisibilityConditionValue>
               <VisibilityConditionVariable></VisibilityConditionVariable>
               <Type>Select</Type>
               <IsAdvanced>0</IsAdvanced>
               <Visible>1</Visible>
               <Enabled>1</Enabled>
               <AllowedTypes>Select</AllowedTypes>
               <Values>Продолжить выполнение
Начать заново</Values>
               <Selected>0</Selected>
               <SelectType>0</SelectType>
          </Model>
          <Defaults/>
          <Model>
               <Name>acc_ffile</Name>
               <Description ru="Аккаунты" en="privat_key"/>
               <SectionName ru="Главная" en="Главная"/>
               <VisibilityConditionValue></VisibilityConditionValue>
               <VisibilityConditionVariable></VisibilityConditionVariable>
               <Type>LinesFromFile</Type>
               <IsAdvanced>0</IsAdvanced>
               <Visible>1</Visible>
               <Enabled>1</Enabled>
               <AllowedTypes>LinesFromFile</AllowedTypes>
               <Filename></Filename>
               <Clean>0</Clean>
               <Read>1</Read>
               <Mix>0</Mix>
               <MaxSuccess>1</MaxSuccess>
               <MaxFail>1</MaxFail>
               <MaxSimultaneous>1</MaxSimultaneous>
               <Interval>5000</Interval>
               <ReloadInterval>0</ReloadInterval>
               <RenewInterval>-1</RenewInterval>
               <Greedy>0</Greedy>
          </Model>
          <Defaults/>
          <Model>
               <Name>tasks_file</Name>
               <Description ru="Список задач" en="tasks_file"/>
               <SectionName ru="Главная" en="Главная"/>
               <VisibilityConditionValue></VisibilityConditionValue>
               <VisibilityConditionVariable></VisibilityConditionVariable>
               <Type>LinesFromFile</Type>
               <IsAdvanced>0</IsAdvanced>
               <Visible>1</Visible>
               <Enabled>1</Enabled>
               <AllowedTypes>LinesFromFile</AllowedTypes>
               <Filename></Filename>
               <Clean>0</Clean>
               <Read>1</Read>
               <Mix>0</Mix>
               <MaxSuccess>1</MaxSuccess>
               <MaxFail>1</MaxFail>
               <MaxSimultaneous>1</MaxSimultaneous>
               <Interval>5000</Interval>
               <ReloadInterval>0</ReloadInterval>
               <RenewInterval>-1</RenewInterval>
               <Greedy>0</Greedy>
          </Model>
          <Defaults/>
          <Model>
               <Name>Папка для кеша</Name>
               <Description ru="Папка для кеша&lt;br&gt;Для каждой копии своя" en="Папка для кеша"/>
               <SectionName ru="Главная" en="Главная"/>
               <VisibilityConditionValue></VisibilityConditionValue>
               <VisibilityConditionVariable></VisibilityConditionVariable>
               <Type>FilesFromDirectory</Type>
               <IsAdvanced>0</IsAdvanced>
               <Visible>1</Visible>
               <Enabled>1</Enabled>
               <AllowedTypes>FilesFromDirectory</AllowedTypes>
               <FilesFromDirectory></FilesFromDirectory>
               <Wildcard>*.*</Wildcard>
               <Clean>0</Clean>
               <Mix>0</Mix>
               <MaxSuccess>1</MaxSuccess>
               <MaxFail>1</MaxFail>
               <MaxSimultaneous>1</MaxSimultaneous>
               <Interval>5000</Interval>
               <ReloadInterval>0</ReloadInterval>
               <RenewInterval>-1</RenewInterval>
               <Greedy>0</Greedy>
          </Model>
          <Defaults/>
          <Model>
               <Name>gas_limit_l2</Name>
               <Description ru="Лимит газа (GWEI)&lt;br&gt;ETH &amp; L2" en="gas_limit"/>
               <SectionName ru="Главная" en="Главная"/>
               <VisibilityConditionValue></VisibilityConditionValue>
               <VisibilityConditionVariable></VisibilityConditionVariable>
               <Type>FixedInteger</Type>
               <IsAdvanced>0</IsAdvanced>
               <Visible>1</Visible>
               <Enabled>1</Enabled>
               <AllowedTypes>FixedInteger</AllowedTypes>
               <Value>15</Value>
               <MinValue>0</MinValue>
               <MaxValue>10000</MaxValue>
          </Model>
          <Defaults/>
          <Model>
               <Name>gas_limit_other_evm</Name>
               <Description ru="Лимит газа (GWEI)&lt;br&gt;Другие EVM" en="gas limit other EVM(GWEI)"/>
               <SectionName ru="Главная" en="Главная"/>
               <VisibilityConditionValue></VisibilityConditionValue>
               <VisibilityConditionVariable></VisibilityConditionVariable>
               <Type>FixedInteger</Type>
               <IsAdvanced>0</IsAdvanced>
               <Visible>1</Visible>
               <Enabled>1</Enabled>
               <AllowedTypes>FixedInteger</AllowedTypes>
               <Value>15</Value>
               <MinValue>0</MinValue>
               <MaxValue>1000000</MaxValue>
          </Model>
          <Defaults/>
          <Model>
               <Name>Тип РПС</Name>
               <Description ru="&lt;br&gt;Тип РПС&lt;br&gt;" en="Тип РПС"/>
               <SectionName ru="РПС" en="РПС"/>
               <VisibilityConditionValue></VisibilityConditionValue>
               <VisibilityConditionVariable></VisibilityConditionVariable>
               <Type>Select</Type>
               <IsAdvanced>0</IsAdvanced>
               <Visible>1</Visible>
               <Enabled>1</Enabled>
               <AllowedTypes>Select</AllowedTypes>
               <Values>Default
Custom</Values>
               <Selected>1</Selected>
               <SelectType>0</SelectType>
          </Model>
          <Defaults/>
          <Model>
               <Name>gas_endpoint</Name>
               <Description ru="РПС для газа&lt;br&gt;Советуем Alchemy" en="gas_endpoint"/>
               <SectionName ru="РПС" en="РПС"/>
               <VisibilityConditionValue>Custom</VisibilityConditionValue>
               <VisibilityConditionVariable>Тип РПС</VisibilityConditionVariable>
               <Type>FixedString</Type>
               <IsAdvanced>0</IsAdvanced>
               <Visible>1</Visible>
               <Enabled>1</Enabled>
               <AllowedTypes>FixedString</AllowedTypes>
               <Value></Value>
               <NotEmpty>0</NotEmpty>
          </Model>
          <Defaults/>
          <Model>
               <Name>eth</Name>
               <Description ru="Ethereum RPC" en="eth"/>
               <SectionName ru="РПС" en="РПС"/>
               <VisibilityConditionValue>Custom</VisibilityConditionValue>
               <VisibilityConditionVariable>Тип РПС</VisibilityConditionVariable>
               <Type>FixedString</Type>
               <IsAdvanced>0</IsAdvanced>
               <Visible>1</Visible>
               <Enabled>1</Enabled>
               <AllowedTypes>FixedString</AllowedTypes>
               <Value></Value>
               <NotEmpty>0</NotEmpty>
          </Model>
          <Defaults/>
          <Model>
               <Name>matic</Name>
               <Description ru="Polygon RPC" en="matic"/>
               <SectionName ru="РПС" en="РПС"/>
               <VisibilityConditionValue>Custom</VisibilityConditionValue>
               <VisibilityConditionVariable>Тип РПС</VisibilityConditionVariable>
               <Type>FixedString</Type>
               <IsAdvanced>0</IsAdvanced>
               <Visible>1</Visible>
               <Enabled>1</Enabled>
               <AllowedTypes>FixedString</AllowedTypes>
               <Value></Value>
               <NotEmpty>0</NotEmpty>
          </Model>
          <Defaults/>
          <Model>
               <Name>bnb</Name>
               <Description ru="BNB Chain RPC" en="bnb"/>
               <SectionName ru="РПС" en="РПС"/>
               <VisibilityConditionValue>Custom</VisibilityConditionValue>
               <VisibilityConditionVariable>Тип РПС</VisibilityConditionVariable>
               <Type>FixedString</Type>
               <IsAdvanced>0</IsAdvanced>
               <Visible>1</Visible>
               <Enabled>1</Enabled>
               <AllowedTypes>FixedString</AllowedTypes>
               <Value></Value>
               <NotEmpty>0</NotEmpty>
          </Model>
          <Defaults/>
          <Model>
               <Name>op</Name>
               <Description ru="Optimism RPC" en="op"/>
               <SectionName ru="РПС" en="РПС"/>
               <VisibilityConditionValue>Custom</VisibilityConditionValue>
               <VisibilityConditionVariable>Тип РПС</VisibilityConditionVariable>
               <Type>FixedString</Type>
               <IsAdvanced>0</IsAdvanced>
               <Visible>1</Visible>
               <Enabled>1</Enabled>
               <AllowedTypes>FixedString</AllowedTypes>
               <Value></Value>
               <NotEmpty>0</NotEmpty>
          </Model>
          <Defaults/>
          <Model>
               <Name>arbi</Name>
               <Description ru="Arbitrum RPC" en="arbi"/>
               <SectionName ru="РПС" en="РПС"/>
               <VisibilityConditionValue>Custom</VisibilityConditionValue>
               <VisibilityConditionVariable>Тип РПС</VisibilityConditionVariable>
               <Type>FixedString</Type>
               <IsAdvanced>0</IsAdvanced>
               <Visible>1</Visible>
               <Enabled>1</Enabled>
               <AllowedTypes>FixedString</AllowedTypes>
               <Value></Value>
               <NotEmpty>0</NotEmpty>
          </Model>
          <Defaults/>
          <Model>
               <Name>fantom</Name>
               <Description ru="Fantom RPC" en="fantom"/>
               <SectionName ru="РПС" en="РПС"/>
               <VisibilityConditionValue>Custom</VisibilityConditionValue>
               <VisibilityConditionVariable>Тип РПС</VisibilityConditionVariable>
               <Type>FixedString</Type>
               <IsAdvanced>0</IsAdvanced>
               <Visible>1</Visible>
               <Enabled>1</Enabled>
               <AllowedTypes>FixedString</AllowedTypes>
               <Value></Value>
               <NotEmpty>0</NotEmpty>
          </Model>
          <Defaults/>
          <Model>
               <Name>avax</Name>
               <Description ru="Avalanche RPC" en="avax"/>
               <SectionName ru="РПС" en="РПС"/>
               <VisibilityConditionValue>Custom</VisibilityConditionValue>
               <VisibilityConditionVariable>Тип РПС</VisibilityConditionVariable>
               <Type>FixedString</Type>
               <IsAdvanced>0</IsAdvanced>
               <Visible>1</Visible>
               <Enabled>1</Enabled>
               <AllowedTypes>FixedString</AllowedTypes>
               <Value></Value>
               <NotEmpty>0</NotEmpty>
          </Model>
          <Defaults/>
          <Model>
               <Name>aptos</Name>
               <Description ru="Aptos RPC" en="aptos"/>
               <SectionName ru="РПС" en="РПС"/>
               <VisibilityConditionValue>Custom</VisibilityConditionValue>
               <VisibilityConditionVariable>Тип РПС</VisibilityConditionVariable>
               <Type>FixedString</Type>
               <IsAdvanced>0</IsAdvanced>
               <Visible>1</Visible>
               <Enabled>1</Enabled>
               <AllowedTypes>FixedString</AllowedTypes>
               <Value></Value>
               <NotEmpty>0</NotEmpty>
          </Model>
          <Defaults/>
          <Model>
               <Name>timeout</Name>
               <Description ru="Задержка между&lt;br&gt;каждой задачей (мин)" en="timeout"/>
               <SectionName ru="Дополнительно" en="Дополнительно"/>
               <VisibilityConditionValue></VisibilityConditionValue>
               <VisibilityConditionVariable></VisibilityConditionVariable>
               <Type>RandomInteger</Type>
               <IsAdvanced>0</IsAdvanced>
               <Visible>1</Visible>
               <Enabled>1</Enabled>
               <AllowedTypes>RandomInteger</AllowedTypes>
               <MinUserValue>2</MinUserValue>
               <MinDesignValue>2</MinDesignValue>
               <MaxUserValue>4</MaxUserValue>
               <MaxDesignValue>10000</MaxDesignValue>
          </Model>
          <Defaults/>
          <Model>
               <Name>alert_tg</Name>
               <Description ru="&lt;br&gt;Уведомления в телеграм&lt;br&gt;" en="alert_tg"/>
               <SectionName ru="Дополнительно" en="Дополнительно"/>
               <VisibilityConditionValue></VisibilityConditionValue>
               <VisibilityConditionVariable></VisibilityConditionVariable>
               <Type>Select</Type>
               <IsAdvanced>0</IsAdvanced>
               <Visible>1</Visible>
               <Enabled>1</Enabled>
               <AllowedTypes>Select</AllowedTypes>
               <Values>On
Off</Values>
               <Selected>0</Selected>
               <SelectType>0</SelectType>
          </Model>
          <Defaults/>
          <Model>
               <Name>tg_chat_id</Name>
               <Description ru="Telegram Chat ID" en="tg_chat_id"/>
               <SectionName ru="Дополнительно" en="Дополнительно"/>
               <VisibilityConditionValue>On</VisibilityConditionValue>
               <VisibilityConditionVariable>alert_tg</VisibilityConditionVariable>
               <Type>FixedString</Type>
               <IsAdvanced>0</IsAdvanced>
               <Visible>1</Visible>
               <Enabled>1</Enabled>
               <AllowedTypes>FixedString</AllowedTypes>
               <Value></Value>
               <NotEmpty>1</NotEmpty>
          </Model>
          <Defaults/>
          <Model>
               <Name>tg_bot_token</Name>
               <Description ru="Telegram Bot Token" en="tg_bot_token"/>
               <SectionName ru="Дополнительно" en="Дополнительно"/>
               <VisibilityConditionValue>On</VisibilityConditionValue>
               <VisibilityConditionVariable>alert_tg</VisibilityConditionVariable>
               <Type>FixedString</Type>
               <IsAdvanced>0</IsAdvanced>
               <Visible>1</Visible>
               <Enabled>1</Enabled>
               <AllowedTypes>FixedString</AllowedTypes>
               <Value></Value>
               <NotEmpty>1</NotEmpty>
          </Model>
          <Defaults/>
          <Model>
               <Name>Лог при ожидании газа</Name>
               <Description ru="&lt;br&gt;Лог при ожидании газа&lt;br&gt;" en="Лог при ожидании газа"/>
               <SectionName ru="Дополнительно" en="Дополнительно"/>
               <VisibilityConditionValue></VisibilityConditionValue>
               <VisibilityConditionVariable></VisibilityConditionVariable>
               <Type>Select</Type>
               <IsAdvanced>0</IsAdvanced>
               <Visible>1</Visible>
               <Enabled>1</Enabled>
               <AllowedTypes>Select</AllowedTypes>
               <Values>On
Off</Values>
               <Selected>1</Selected>
               <SelectType>0</SelectType>
          </Model>
          <Defaults/>
          <Model>
               <Name>Мешать аккаунты</Name>
               <Description ru="&lt;br&gt;Мешать аккаунты&lt;br&gt;" en="Мешать аккаунты"/>
               <SectionName ru="Дополнительно" en="Дополнительно"/>
               <VisibilityConditionValue></VisibilityConditionValue>
               <VisibilityConditionVariable></VisibilityConditionVariable>
               <Type>Select</Type>
               <IsAdvanced>0</IsAdvanced>
               <Visible>1</Visible>
               <Enabled>1</Enabled>
               <AllowedTypes>Select</AllowedTypes>
               <Values>On
Off</Values>
               <Selected>1</Selected>
               <SelectType>0</SelectType>
          </Model>
          <Defaults/>
     </ModelList>
</BrowserAutomationStudioProject>
